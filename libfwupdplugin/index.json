{"meta":{"ns":"FwupdPlugin","version":"1.0","generator":"gi-docgen","generator-version":"2021.7"},"symbols":[{"type":"alias","name":"EndianType","ctype":"FuEndianType","summary":"The endian type, e.g. %G_LITTLE_ENDIAN"},{"type":"alias","name":"FirmwareExportFlags","ctype":"FuFirmwareExportFlags","summary":"The firmware export flags."},{"type":"alias","name":"FirmwareFlags","ctype":"FuFirmwareFlags","summary":"The firmware flags."},{"type":"bitfield","name":"AppFlags","ctype":"FuAppFlags","summary":"The flags to use when loading an application."},{"type":"bitfield","name":"ArchiveFlags","ctype":"FuArchiveFlags","summary":"The flags to use when loading the archive."},{"type":"bitfield","name":"DeviceInstanceFlags","ctype":"FuDeviceInstanceFlags","summary":"The flags to use when interacting with a device instance"},{"type":"bitfield","name":"DeviceInternalFlags","ctype":"FuDeviceInternalFlags","summary":"The device internal flags."},{"type":"bitfield","name":"DumpFlags","ctype":"FuDumpFlags","summary":"The flags to use when configuring debugging"},{"type":"bitfield","name":"HidDeviceFlags","ctype":"FuHidDeviceFlags","summary":"Flags used when calling fu_hid_device_get_report() and fu_hid_device_set_report()."},{"type":"bitfield","name":"IOChannelFlags","ctype":"FuIOChannelFlags","summary":"The flags used when reading data from the TTY."},{"type":"bitfield","name":"QuirksLoadFlags","ctype":"FuQuirksLoadFlags","summary":"The flags to use when loading quirks."},{"type":"bitfield","name":"SecurityAttrsFlags","ctype":"FuSecurityAttrsFlags","summary":"The flags to use when calculating an HSI version."},{"type":"bitfield","name":"UdevDeviceFlags","ctype":"FuUdevDeviceFlags","summary":"Flags used when opening the device using fu_device_open()."},{"type":"callback","name":"ArchiveIterateFunc","summary":"The archive iteration callback."},{"type":"callback","name":"ContextLookupIter","summary":"The context lookup iteration callback."},{"type":"callback","name":"DeviceLockerFunc","summary":"Callback to use when opening and closing using [ctor@DeviceLocker.new_full]."},{"type":"callback","name":"DeviceRetryFunc","summary":"The device retry iteration callback."},{"type":"callback","name":"OutputHandler","summary":"The process spawn iteration callback."},{"type":"callback","name":"QuirksIter","summary":"The quirks iteration callback."},{"type":"class","name":"Archive","ctype":"FuArchive","summary":"An in-memory archive decompressor"},{"type":"class","name":"Backend","ctype":"FuBackend","summary":"An device discovery backend, for instance USB, BlueZ or ..."},{"type":"class","name":"BluezDevice","ctype":"FuBluezDevice","summary":"A BlueZ Bluetooth device.  See also: [class@FuDevice]"},{"type":"class","name":"Cabinet","ctype":"FuCabinet","summary":"Cabinet archive parser and writer.  See also: [class@FuArchive]"},{"type":"class","name":"Chunk","ctype":"FuChunk","summary":"A optionally mutable packet of chunked data with address, ..."},{"type":"class","name":"Context","ctype":"FuContext","summary":"A context that represents the shared system state. This ..."},{"type":"class","name":"Device","ctype":"FuDevice","summary":"A physical or logical device that is exported to ..."},{"type":"class","name":"DeviceLocker","ctype":"FuDeviceLocker","summary":"Easily close a shared resource (such as a device) ..."},{"type":"class","name":"DfuFirmware","ctype":"FuDfuFirmware","summary":"A DFU firmware image.  See also: [class@FuFirmware]"},{"type":"class","name":"DfuseFirmware","ctype":"FuDfuseFirmware","summary":"A DfuSe firmware image.  See also: [class@FuDfuFirmware]"},{"type":"class","name":"EfiSignature","ctype":"FuEfiSignature","summary":"A UEFI Signature as found in an `EFI_SIGNATURE_LIST`.  ..."},{"type":"class","name":"EfiSignatureList","ctype":"FuEfiSignatureList","summary":"A UEFI signature list typically found in the `PK` ..."},{"type":"class","name":"Firmware","ctype":"FuFirmware","summary":"A firmware file which can have children which represent ..."},{"type":"class","name":"FmapFirmware","ctype":"FuFmapFirmware","summary":"A FMAP firmware image.  See also: [class@FuFirmware]"},{"type":"class","name":"HidDevice","ctype":"FuHidDevice","summary":"A Human Interface Device (HID) device.  See also: ..."},{"type":"class","name":"Hwids","ctype":"FuHwids","summary":"A the hardware IDs on the system.  Note, ..."},{"type":"class","name":"I2cDevice","ctype":"FuI2cDevice","summary":"A I\u00b2C device with an assigned bus number.  ..."},{"type":"class","name":"IOChannel","ctype":"FuIOChannel","summary":"A bidirectional IO channel which can be read from ..."},{"type":"class","name":"IhexFirmware","ctype":"FuIhexFirmware","summary":"A Intel hex (ihex) firmware image.  See also: [class@FuFirmware]"},{"type":"class","name":"Plugin","ctype":"FuPlugin","summary":"A plugin which is used by fwupd to enumerate ..."},{"type":"class","name":"Quirks","ctype":"FuQuirks","summary":"Quirks can be used to modify device behavior. When ..."},{"type":"class","name":"SecurityAttrs","ctype":"FuSecurityAttrs","summary":"A set of Host Security ID attributes that represents ..."},{"type":"class","name":"Smbios","ctype":"FuSmbios","summary":"Enumerate the SMBIOS data on the system, either using ..."},{"type":"class","name":"SrecFirmware","ctype":"FuSrecFirmware","summary":"A SREC firmware image.  See also: [class@FuFirmware]"},{"type":"class","name":"UdevDevice","ctype":"FuUdevDevice","summary":"A UDev device, typically only available on Linux.  ..."},{"type":"class","name":"UsbDevice","ctype":"FuUsbDevice","summary":"A USB device.  See also: [class@FuDevice], [class@FuHidDevice]"},{"type":"class","name":"Volume","ctype":"FuVolume","summary":"Volume abstraction that uses UDisks"},{"type":"constant","name":"BATTERY_VALUE_INVALID","ident":"FU_BATTERY_VALUE_INVALID","summary":"This value signifies the battery level is either unset, ..."},{"type":"constant","name":"BUILD_HASH","ident":"FU_BUILD_HASH","summary":"No description available."},{"type":"constant","name":"DEVICE_METADATA_TBT_IS_SAFE_MODE","ident":"FU_DEVICE_METADATA_TBT_IS_SAFE_MODE","summary":"If the Thunderbolt hardware is stuck in safe mode. ..."},{"type":"constant","name":"DEVICE_METADATA_UEFI_CAPSULE_FLAGS","ident":"FU_DEVICE_METADATA_UEFI_CAPSULE_FLAGS","summary":"The capsule flags for the UEFI device, e.g. %EFI_CAPSULE_HEADER_FLAGS_PERSIST_ACROSS_RESET ..."},{"type":"constant","name":"DEVICE_METADATA_UEFI_DEVICE_KIND","ident":"FU_DEVICE_METADATA_UEFI_DEVICE_KIND","summary":"The type of UEFI device, e.g. \"system-firmware\" or \"device-firmware\" ..."},{"type":"constant","name":"DEVICE_METADATA_UEFI_FW_VERSION","ident":"FU_DEVICE_METADATA_UEFI_FW_VERSION","summary":"The firmware version of the UEFI device specified as ..."},{"type":"constant","name":"DEVICE_REMOVE_DELAY_RE_ENUMERATE","ident":"FU_DEVICE_REMOVE_DELAY_RE_ENUMERATE","summary":"The default removal delay for device re-enumeration taking into ..."},{"type":"constant","name":"DEVICE_REMOVE_DELAY_USER_REPLUG","ident":"FU_DEVICE_REMOVE_DELAY_USER_REPLUG","summary":"The default removal delay for device re-plug taking into ..."},{"type":"constant","name":"DFU_FIRMARE_VERSION_ATMEL_AVR","ident":"FU_DFU_FIRMARE_VERSION_ATMEL_AVR","summary":"The Atmel AVR version of the DFU standard in ..."},{"type":"constant","name":"DFU_FIRMARE_VERSION_DFUSE","ident":"FU_DFU_FIRMARE_VERSION_DFUSE","summary":"The DfuSe version of the DFU standard in BCD ..."},{"type":"constant","name":"DFU_FIRMARE_VERSION_DFU_1_0","ident":"FU_DFU_FIRMARE_VERSION_DFU_1_0","summary":"The 1.0 version of the DFU standard in BCD format."},{"type":"constant","name":"DFU_FIRMARE_VERSION_DFU_1_1","ident":"FU_DFU_FIRMARE_VERSION_DFU_1_1","summary":"The 1.1 version of the DFU standard in BCD format."},{"type":"constant","name":"DFU_FIRMARE_VERSION_UNKNOWN","ident":"FU_DFU_FIRMARE_VERSION_UNKNOWN","summary":"Unknown version of the DFU standard in BCD format."},{"type":"constant","name":"EFIVAR_ATTR_APPEND_WRITE","ident":"FU_EFIVAR_ATTR_APPEND_WRITE","summary":"No description available."},{"type":"constant","name":"EFIVAR_ATTR_AUTHENTICATED_WRITE_ACCESS","ident":"FU_EFIVAR_ATTR_AUTHENTICATED_WRITE_ACCESS","summary":"No description available."},{"type":"constant","name":"EFIVAR_ATTR_BOOTSERVICE_ACCESS","ident":"FU_EFIVAR_ATTR_BOOTSERVICE_ACCESS","summary":"No description available."},{"type":"constant","name":"EFIVAR_ATTR_HARDWARE_ERROR_RECORD","ident":"FU_EFIVAR_ATTR_HARDWARE_ERROR_RECORD","summary":"No description available."},{"type":"constant","name":"EFIVAR_ATTR_NON_VOLATILE","ident":"FU_EFIVAR_ATTR_NON_VOLATILE","summary":"No description available."},{"type":"constant","name":"EFIVAR_ATTR_RUNTIME_ACCESS","ident":"FU_EFIVAR_ATTR_RUNTIME_ACCESS","summary":"No description available."},{"type":"constant","name":"EFIVAR_ATTR_TIME_BASED_AUTHENTICATED_WRITE_ACCESS","ident":"FU_EFIVAR_ATTR_TIME_BASED_AUTHENTICATED_WRITE_ACCESS","summary":"No description available."},{"type":"constant","name":"EFIVAR_GUID_EFI_GLOBAL","ident":"FU_EFIVAR_GUID_EFI_GLOBAL","summary":"No description available."},{"type":"constant","name":"EFIVAR_GUID_FWUPDATE","ident":"FU_EFIVAR_GUID_FWUPDATE","summary":"No description available."},{"type":"constant","name":"EFIVAR_GUID_SECURITY_DATABASE","ident":"FU_EFIVAR_GUID_SECURITY_DATABASE","summary":"No description available."},{"type":"constant","name":"EFIVAR_GUID_UX_CAPSULE","ident":"FU_EFIVAR_GUID_UX_CAPSULE","summary":"No description available."},{"type":"constant","name":"EFI_SIGNATURE_GUID_MICROSOFT","ident":"FU_EFI_SIGNATURE_GUID_MICROSOFT","summary":"No description available."},{"type":"constant","name":"EFI_SIGNATURE_GUID_OVMF","ident":"FU_EFI_SIGNATURE_GUID_OVMF","summary":"No description available."},{"type":"constant","name":"EFI_SIGNATURE_GUID_OVMF_LEGACY","ident":"FU_EFI_SIGNATURE_GUID_OVMF_LEGACY","summary":"No description available."},{"type":"constant","name":"EFI_SIGNATURE_GUID_ZERO","ident":"FU_EFI_SIGNATURE_GUID_ZERO","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_1","ident":"FU_FIRMWARE_ALIGNMENT_1","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_128","ident":"FU_FIRMWARE_ALIGNMENT_128","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_128K","ident":"FU_FIRMWARE_ALIGNMENT_128K","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_128M","ident":"FU_FIRMWARE_ALIGNMENT_128M","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_16","ident":"FU_FIRMWARE_ALIGNMENT_16","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_16K","ident":"FU_FIRMWARE_ALIGNMENT_16K","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_16M","ident":"FU_FIRMWARE_ALIGNMENT_16M","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_1G","ident":"FU_FIRMWARE_ALIGNMENT_1G","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_1K","ident":"FU_FIRMWARE_ALIGNMENT_1K","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_1M","ident":"FU_FIRMWARE_ALIGNMENT_1M","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_2","ident":"FU_FIRMWARE_ALIGNMENT_2","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_256","ident":"FU_FIRMWARE_ALIGNMENT_256","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_256K","ident":"FU_FIRMWARE_ALIGNMENT_256K","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_256M","ident":"FU_FIRMWARE_ALIGNMENT_256M","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_2G","ident":"FU_FIRMWARE_ALIGNMENT_2G","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_2K","ident":"FU_FIRMWARE_ALIGNMENT_2K","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_2M","ident":"FU_FIRMWARE_ALIGNMENT_2M","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_32","ident":"FU_FIRMWARE_ALIGNMENT_32","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_32K","ident":"FU_FIRMWARE_ALIGNMENT_32K","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_32M","ident":"FU_FIRMWARE_ALIGNMENT_32M","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_4","ident":"FU_FIRMWARE_ALIGNMENT_4","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_4G","ident":"FU_FIRMWARE_ALIGNMENT_4G","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_4K","ident":"FU_FIRMWARE_ALIGNMENT_4K","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_4M","ident":"FU_FIRMWARE_ALIGNMENT_4M","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_512","ident":"FU_FIRMWARE_ALIGNMENT_512","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_512K","ident":"FU_FIRMWARE_ALIGNMENT_512K","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_512M","ident":"FU_FIRMWARE_ALIGNMENT_512M","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_64","ident":"FU_FIRMWARE_ALIGNMENT_64","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_64K","ident":"FU_FIRMWARE_ALIGNMENT_64K","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_64M","ident":"FU_FIRMWARE_ALIGNMENT_64M","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_8","ident":"FU_FIRMWARE_ALIGNMENT_8","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_8K","ident":"FU_FIRMWARE_ALIGNMENT_8K","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_8M","ident":"FU_FIRMWARE_ALIGNMENT_8M","summary":"No description available."},{"type":"constant","name":"FIRMWARE_EXPORT_FLAG_ASCII_DATA","ident":"FU_FIRMWARE_EXPORT_FLAG_ASCII_DATA","summary":"Write the data as UTF-8 strings."},{"type":"constant","name":"FIRMWARE_EXPORT_FLAG_INCLUDE_DEBUG","ident":"FU_FIRMWARE_EXPORT_FLAG_INCLUDE_DEBUG","summary":"Include debug information when exporting."},{"type":"constant","name":"FIRMWARE_EXPORT_FLAG_NONE","ident":"FU_FIRMWARE_EXPORT_FLAG_NONE","summary":"No flags set."},{"type":"constant","name":"FIRMWARE_FLAG_DEDUPE_ID","ident":"FU_FIRMWARE_FLAG_DEDUPE_ID","summary":"Dedupe imges by ID."},{"type":"constant","name":"FIRMWARE_FLAG_DEDUPE_IDX","ident":"FU_FIRMWARE_FLAG_DEDUPE_IDX","summary":"Dedupe imges by IDX."},{"type":"constant","name":"FIRMWARE_FLAG_HAS_CHECKSUM","ident":"FU_FIRMWARE_FLAG_HAS_CHECKSUM","summary":"Has a CRC or checksum to test internal consistency."},{"type":"constant","name":"FIRMWARE_FLAG_HAS_VID_PID","ident":"FU_FIRMWARE_FLAG_HAS_VID_PID","summary":"Has a vendor or product ID in the firmware."},{"type":"constant","name":"FIRMWARE_FLAG_NONE","ident":"FU_FIRMWARE_FLAG_NONE","summary":"No flags set."},{"type":"constant","name":"FIRMWARE_ID_HEADER","ident":"FU_FIRMWARE_ID_HEADER","summary":"The usual firmware ID string for the header."},{"type":"constant","name":"FIRMWARE_ID_PAYLOAD","ident":"FU_FIRMWARE_ID_PAYLOAD","summary":"The usual firmware ID string for the payload."},{"type":"constant","name":"FIRMWARE_ID_SIGNATURE","ident":"FU_FIRMWARE_ID_SIGNATURE","summary":"The usual firmware ID string for the signature."},{"type":"constant","name":"FMAP_FIRMWARE_STRLEN","ident":"FU_FMAP_FIRMWARE_STRLEN","summary":"No description available."},{"type":"constant","name":"HWIDS_KEY_BASEBOARD_MANUFACTURER","ident":"FU_HWIDS_KEY_BASEBOARD_MANUFACTURER","summary":"The HwID key for the baseboard (motherboard) vendor."},{"type":"constant","name":"HWIDS_KEY_BASEBOARD_PRODUCT","ident":"FU_HWIDS_KEY_BASEBOARD_PRODUCT","summary":"The HwID key for baseboard (motherboard) product."},{"type":"constant","name":"HWIDS_KEY_BIOS_MAJOR_RELEASE","ident":"FU_HWIDS_KEY_BIOS_MAJOR_RELEASE","summary":"The HwID key for the BIOS major version."},{"type":"constant","name":"HWIDS_KEY_BIOS_MINOR_RELEASE","ident":"FU_HWIDS_KEY_BIOS_MINOR_RELEASE","summary":"The HwID key for the BIOS minor version."},{"type":"constant","name":"HWIDS_KEY_BIOS_VENDOR","ident":"FU_HWIDS_KEY_BIOS_VENDOR","summary":"The HwID key for the BIOS vendor."},{"type":"constant","name":"HWIDS_KEY_BIOS_VERSION","ident":"FU_HWIDS_KEY_BIOS_VERSION","summary":"The HwID key for the BIOS version."},{"type":"constant","name":"HWIDS_KEY_ENCLOSURE_KIND","ident":"FU_HWIDS_KEY_ENCLOSURE_KIND","summary":"The HwID key for the enclosure kind."},{"type":"constant","name":"HWIDS_KEY_FAMILY","ident":"FU_HWIDS_KEY_FAMILY","summary":"The HwID key for the deice family."},{"type":"constant","name":"HWIDS_KEY_FIRMWARE_MAJOR_RELEASE","ident":"FU_HWIDS_KEY_FIRMWARE_MAJOR_RELEASE","summary":"The HwID key for the firmware major version."},{"type":"constant","name":"HWIDS_KEY_FIRMWARE_MINOR_RELEASE","ident":"FU_HWIDS_KEY_FIRMWARE_MINOR_RELEASE","summary":"The HwID key for the firmware minor version."},{"type":"constant","name":"HWIDS_KEY_MANUFACTURER","ident":"FU_HWIDS_KEY_MANUFACTURER","summary":"The HwID key for the top-level product vendor."},{"type":"constant","name":"HWIDS_KEY_PRODUCT_NAME","ident":"FU_HWIDS_KEY_PRODUCT_NAME","summary":"The HwID key for the top-level product product name."},{"type":"constant","name":"HWIDS_KEY_PRODUCT_SKU","ident":"FU_HWIDS_KEY_PRODUCT_SKU","summary":"The HwID key for the top-level product SKU."},{"type":"constant","name":"IHEX_FIRMWARE_RECORD_TYPE_DATA","ident":"FU_IHEX_FIRMWARE_RECORD_TYPE_DATA","summary":"No description available."},{"type":"constant","name":"IHEX_FIRMWARE_RECORD_TYPE_EOF","ident":"FU_IHEX_FIRMWARE_RECORD_TYPE_EOF","summary":"No description available."},{"type":"constant","name":"IHEX_FIRMWARE_RECORD_TYPE_EXTENDED_LINEAR","ident":"FU_IHEX_FIRMWARE_RECORD_TYPE_EXTENDED_LINEAR","summary":"No description available."},{"type":"constant","name":"IHEX_FIRMWARE_RECORD_TYPE_EXTENDED_SEGMENT","ident":"FU_IHEX_FIRMWARE_RECORD_TYPE_EXTENDED_SEGMENT","summary":"No description available."},{"type":"constant","name":"IHEX_FIRMWARE_RECORD_TYPE_SIGNATURE","ident":"FU_IHEX_FIRMWARE_RECORD_TYPE_SIGNATURE","summary":"No description available."},{"type":"constant","name":"IHEX_FIRMWARE_RECORD_TYPE_START_LINEAR","ident":"FU_IHEX_FIRMWARE_RECORD_TYPE_START_LINEAR","summary":"No description available."},{"type":"constant","name":"IHEX_FIRMWARE_RECORD_TYPE_START_SEGMENT","ident":"FU_IHEX_FIRMWARE_RECORD_TYPE_START_SEGMENT","summary":"No description available."},{"type":"constant","name":"QUIRKS_BATTERY_THRESHOLD","ident":"FU_QUIRKS_BATTERY_THRESHOLD","summary":"The quirk key for the battery theshold in percent."},{"type":"constant","name":"QUIRKS_BRANCH","ident":"FU_QUIRKS_BRANCH","summary":"The quirk key for the firmware branch."},{"type":"constant","name":"QUIRKS_CHILDREN","ident":"FU_QUIRKS_CHILDREN","summary":"The quirk key for the children. This should contain ..."},{"type":"constant","name":"QUIRKS_COUNTERPART_GUID","ident":"FU_QUIRKS_COUNTERPART_GUID","summary":"The quirk key for the counterpart GUID."},{"type":"constant","name":"QUIRKS_FIRMWARE_SIZE","ident":"FU_QUIRKS_FIRMWARE_SIZE","summary":"The quirk key for the exact required firmware size ..."},{"type":"constant","name":"QUIRKS_FIRMWARE_SIZE_MAX","ident":"FU_QUIRKS_FIRMWARE_SIZE_MAX","summary":"The quirk key for the maximum firmware size in bytes."},{"type":"constant","name":"QUIRKS_FIRMWARE_SIZE_MIN","ident":"FU_QUIRKS_FIRMWARE_SIZE_MIN","summary":"The quirk key for the minimum firmware size in bytes."},{"type":"constant","name":"QUIRKS_FLAGS","ident":"FU_QUIRKS_FLAGS","summary":"The quirk key for the public flags."},{"type":"constant","name":"QUIRKS_GTYPE","ident":"FU_QUIRKS_GTYPE","summary":"The quirk key for the custom GType."},{"type":"constant","name":"QUIRKS_GUID","ident":"FU_QUIRKS_GUID","summary":"The quirk key for the GUID."},{"type":"constant","name":"QUIRKS_ICON","ident":"FU_QUIRKS_ICON","summary":"The quirk key for the icon."},{"type":"constant","name":"QUIRKS_INSTALL_DURATION","ident":"FU_QUIRKS_INSTALL_DURATION","summary":"The quirk key for the install duration in seconds."},{"type":"constant","name":"QUIRKS_NAME","ident":"FU_QUIRKS_NAME","summary":"The quirk key for the name."},{"type":"constant","name":"QUIRKS_PARENT_GUID","ident":"FU_QUIRKS_PARENT_GUID","summary":"The quirk key for the parent GUID."},{"type":"constant","name":"QUIRKS_PLUGIN","ident":"FU_QUIRKS_PLUGIN","summary":"The quirk key for the plugin name."},{"type":"constant","name":"QUIRKS_PRIORITY","ident":"FU_QUIRKS_PRIORITY","summary":"The quirk key for the device priority."},{"type":"constant","name":"QUIRKS_PROTOCOL","ident":"FU_QUIRKS_PROTOCOL","summary":"The quirk key for the protocol, e.g. `org.usb.dfu`."},{"type":"constant","name":"QUIRKS_PROXY_GUID","ident":"FU_QUIRKS_PROXY_GUID","summary":"The quirk key for the proxy GUID."},{"type":"constant","name":"QUIRKS_REMOVE_DELAY","ident":"FU_QUIRKS_REMOVE_DELAY","summary":"The quirk key for the device removal delay in seconds."},{"type":"constant","name":"QUIRKS_SUMMARY","ident":"FU_QUIRKS_SUMMARY","summary":"The quirk key for the summary."},{"type":"constant","name":"QUIRKS_UPDATE_IMAGE","ident":"FU_QUIRKS_UPDATE_IMAGE","summary":"The quirk key for the update image shown before ..."},{"type":"constant","name":"QUIRKS_UPDATE_MESSAGE","ident":"FU_QUIRKS_UPDATE_MESSAGE","summary":"The quirk key for the update message shown after ..."},{"type":"constant","name":"QUIRKS_VENDOR","ident":"FU_QUIRKS_VENDOR","summary":"The quirk key for the vendor name."},{"type":"constant","name":"QUIRKS_VENDOR_ID","ident":"FU_QUIRKS_VENDOR_ID","summary":"The quirk key for the vendor ID."},{"type":"constant","name":"QUIRKS_VERSION","ident":"FU_QUIRKS_VERSION","summary":"The quirk key for the version."},{"type":"constant","name":"QUIRKS_VERSION_FORMAT","ident":"FU_QUIRKS_VERSION_FORMAT","summary":"The quirk key for the version format, e.g. `quad`."},{"type":"constant","name":"SMBIOS_STRUCTURE_TYPE_BASEBOARD","ident":"FU_SMBIOS_STRUCTURE_TYPE_BASEBOARD","summary":"The SMBIOS structure type for the baseboard (motherboard)."},{"type":"constant","name":"SMBIOS_STRUCTURE_TYPE_BIOS","ident":"FU_SMBIOS_STRUCTURE_TYPE_BIOS","summary":"The SMBIOS structure type for the BIOS."},{"type":"constant","name":"SMBIOS_STRUCTURE_TYPE_CHASSIS","ident":"FU_SMBIOS_STRUCTURE_TYPE_CHASSIS","summary":"The SMBIOS structure type for the chassis."},{"type":"constant","name":"SMBIOS_STRUCTURE_TYPE_LAST","ident":"FU_SMBIOS_STRUCTURE_TYPE_LAST","summary":"The last possible SMBIOS structure type."},{"type":"constant","name":"SMBIOS_STRUCTURE_TYPE_SYSTEM","ident":"FU_SMBIOS_STRUCTURE_TYPE_SYSTEM","summary":"The SMBIOS structure type for the system as a whole."},{"type":"constant","name":"VOLUME_KIND_BDP","ident":"FU_VOLUME_KIND_BDP","summary":"The GUID for the BDP."},{"type":"constant","name":"VOLUME_KIND_ESP","ident":"FU_VOLUME_KIND_ESP","summary":"The GUID for the ESP."},{"type":"ctor","name":"bytes_new","type_name":"Chunk","ident":"fu_chunk_bytes_new","summary":"Creates a new packet of data."},{"type":"ctor","name":"new","type_name":"Archive","ident":"fu_archive_new","summary":"Parses @data as an archive and decompresses all files ..."},{"type":"ctor","name":"new","type_name":"Cabinet","ident":"fu_cabinet_new","summary":"No description available."},{"type":"ctor","name":"new","type_name":"Chunk","ident":"fu_chunk_new","summary":"Creates a new packet of chunked data."},{"type":"ctor","name":"new","type_name":"Context","ident":"fu_context_new","summary":"Creates a new #FuContext"},{"type":"ctor","name":"new","type_name":"Device","ident":"fu_device_new","summary":"Creates a new #Fudevice"},{"type":"ctor","name":"new","type_name":"DeviceLocker","ident":"fu_device_locker_new","summary":"Opens the device for use. When the #FuDeviceLocker is ..."},{"type":"ctor","name":"new","type_name":"DfuFirmware","ident":"fu_dfu_firmware_new","summary":"Creates a new #FuFirmware of sub type Dfu"},{"type":"ctor","name":"new","type_name":"DfuseFirmware","ident":"fu_dfuse_firmware_new","summary":"Creates a new #FuFirmware of sub type DfuSe"},{"type":"ctor","name":"new","type_name":"EfiSignatureList","ident":"fu_efi_signature_list_new","summary":"Creates a new #FuFirmware that can parse an EFI_SIGNATURE_LIST"},{"type":"ctor","name":"new","type_name":"Firmware","ident":"fu_firmware_new","summary":"Creates an empty firmware object."},{"type":"ctor","name":"new","type_name":"FmapFirmware","ident":"fu_fmap_firmware_new","summary":"Creates a new #FuFirmware of sub type fmap"},{"type":"ctor","name":"new","type_name":"HidDevice","ident":"fu_hid_device_new","summary":"Creates a new HID device."},{"type":"ctor","name":"new","type_name":"Hwids","ident":"fu_hwids_new","summary":"Creates a new #FuHwids"},{"type":"ctor","name":"new","type_name":"IhexFirmware","ident":"fu_ihex_firmware_new","summary":"Creates a new #FuFirmware of sub type Ihex"},{"type":"ctor","name":"new","type_name":"Plugin","ident":"fu_plugin_new","summary":"Creates a new #FuPlugin"},{"type":"ctor","name":"new","type_name":"Quirks","ident":"fu_quirks_new","summary":"Creates a new quirks object."},{"type":"ctor","name":"new","type_name":"SecurityAttrs","ident":"fu_security_attrs_new","summary":"No description available."},{"type":"ctor","name":"new","type_name":"Smbios","ident":"fu_smbios_new","summary":"Creates a new object to parse SMBIOS data."},{"type":"ctor","name":"new","type_name":"SrecFirmware","ident":"fu_srec_firmware_new","summary":"Creates a new #FuFirmware of type SREC"},{"type":"ctor","name":"new","type_name":"UdevDevice","ident":"fu_udev_device_new","summary":"Creates a new #FuUdevDevice."},{"type":"ctor","name":"new","type_name":"UsbDevice","ident":"fu_usb_device_new","summary":"Creates a new #FuUsbDevice."},{"type":"ctor","name":"new_file","type_name":"IOChannel","ident":"fu_io_channel_new_file","summary":"Creates a new object to write and read from."},{"type":"ctor","name":"new_from_bytes","type_name":"Firmware","ident":"fu_firmware_new_from_bytes","summary":"Creates a firmware object with the provided image set ..."},{"type":"ctor","name":"new_from_gtypes","type_name":"Firmware","ident":"fu_firmware_new_from_gtypes","summary":"Tries to parse the firmware with each #GType in order."},{"type":"ctor","name":"new_full","type_name":"DeviceLocker","ident":"fu_device_locker_new_full","summary":"Opens the device for use. When the #FuDeviceLocker is ..."},{"type":"ctor","name":"unix_new","type_name":"IOChannel","ident":"fu_io_channel_unix_new","summary":"Creates a new object to write and read from."},{"type":"enum","name":"BatteryState","ctype":"FuBatteryState","summary":"The device battery state."},{"type":"enum","name":"CabinetExportFlags","ctype":"FuCabinetExportFlags","summary":"The flags to use when exporting the archive."},{"type":"enum","name":"CabinetParseFlags","ctype":"FuCabinetParseFlags","summary":"The flags to use when loading the cabinet."},{"type":"enum","name":"CabinetSignFlags","ctype":"FuCabinetSignFlags","summary":"The flags to use when signing the archive."},{"type":"enum","name":"CpuVendor","ctype":"FuCpuVendor","summary":"The CPU vendor."},{"type":"enum","name":"EfiSignatureKind","ctype":"FuEfiSignatureKind","summary":"The kind of EFI signature."},{"type":"enum","name":"FirmareSrecRecordKind","ctype":"FuFirmareSrecRecordKind","summary":"The kind of SREC record kind."},{"type":"enum","name":"PathKind","ctype":"FuPathKind","summary":"Path types to use when dynamically determining a path ..."},{"type":"enum","name":"PluginRule","ctype":"FuPluginRule","summary":"The rules used for ordering plugins. Plugins are expected ..."},{"type":"enum","name":"PluginVerifyFlags","ctype":"FuPluginVerifyFlags","summary":"Flags used when verifying, currently unused."},{"type":"enum","name":"SmbiosChassisKind","ctype":"FuSmbiosChassisKind","summary":"The system chassis kind."},{"type":"function","name":"battery_state_to_string","ident":"fu_battery_state_to_string","summary":"Converts an enumerated type to a string."},{"type":"function","name":"byte_array_align_up","ident":"fu_byte_array_align_up","summary":"Align a byte array length to a power of ..."},{"type":"function","name":"byte_array_append_bytes","ident":"fu_byte_array_append_bytes","summary":"Adds the contents of a GBytes to a byte array."},{"type":"function","name":"byte_array_append_uint16","ident":"fu_byte_array_append_uint16","summary":"Adds a 16 bit integer to a byte array."},{"type":"function","name":"byte_array_append_uint32","ident":"fu_byte_array_append_uint32","summary":"Adds a 32 bit integer to a byte array."},{"type":"function","name":"byte_array_append_uint64","ident":"fu_byte_array_append_uint64","summary":"Adds a 64 bit integer to a byte array."},{"type":"function","name":"byte_array_append_uint8","ident":"fu_byte_array_append_uint8","summary":"Adds a 8 bit integer to a byte array."},{"type":"function","name":"byte_array_set_size","ident":"fu_byte_array_set_size","summary":"Sets the size of the GByteArray, expanding it with ..."},{"type":"function","name":"byte_array_set_size_full","ident":"fu_byte_array_set_size_full","summary":"Sets the size of the GByteArray, expanding with @data ..."},{"type":"function","name":"bytes_get_data_safe","ident":"fu_bytes_get_data_safe","summary":"Get the byte data in the #GBytes. This data ..."},{"type":"function","name":"common_align_up","ident":"fu_common_align_up","summary":"Align a value to a power of 2 boundary, ..."},{"type":"function","name":"common_bytes_align","ident":"fu_common_bytes_align","summary":"Aligns a block of memory to @blksize using the ..."},{"type":"function","name":"common_bytes_compare","ident":"fu_common_bytes_compare","summary":"Compares the buffers for equality."},{"type":"function","name":"common_bytes_compare_raw","ident":"fu_common_bytes_compare_raw","summary":"Compares the buffers for equality."},{"type":"function","name":"common_bytes_is_empty","ident":"fu_common_bytes_is_empty","summary":"Checks if a byte array are just empty (0xff) bytes."},{"type":"function","name":"common_bytes_new_offset","ident":"fu_common_bytes_new_offset","summary":"Creates a #GBytes which is a subsection of another #GBytes."},{"type":"function","name":"common_bytes_pad","ident":"fu_common_bytes_pad","summary":"Pads a GBytes to a minimum @sz with `0xff`."},{"type":"function","name":"common_cab_build_silo","ident":"fu_common_cab_build_silo","summary":"Create an AppStream silo from a cabinet archive."},{"type":"function","name":"common_cpuid","ident":"fu_common_cpuid","summary":"Calls CPUID and returns the registers for the given leaf."},{"type":"function","name":"common_crc16","ident":"fu_common_crc16","summary":"Returns the cyclic redundancy check value for the given ..."},{"type":"function","name":"common_crc32","ident":"fu_common_crc32","summary":"Returns the cyclic redundancy check value for the given ..."},{"type":"function","name":"common_crc32_full","ident":"fu_common_crc32_full","summary":"Returns the cyclic redundancy check value for the given ..."},{"type":"function","name":"common_crc8","ident":"fu_common_crc8","summary":"Returns the cyclic redundancy check value for the given ..."},{"type":"function","name":"common_dump_bytes","ident":"fu_common_dump_bytes","summary":"Dumps a byte buffer to the screen."},{"type":"function","name":"common_dump_full","ident":"fu_common_dump_full","summary":"Dumps a raw buffer to the screen."},{"type":"function","name":"common_dump_raw","ident":"fu_common_dump_raw","summary":"Dumps a raw buffer to the screen."},{"type":"function","name":"common_error_array_get_best","ident":"fu_common_error_array_get_best","summary":"Finds the 'best' error to show the user from ..."},{"type":"function","name":"common_extract_archive","ident":"fu_common_extract_archive","summary":"Extracts an archive to a directory."},{"type":"function","name":"common_filename_glob","ident":"fu_common_filename_glob","summary":"Returns all the filenames that match a specific glob ..."},{"type":"function","name":"common_find_program_in_path","ident":"fu_common_find_program_in_path","summary":"Looks for a program in the PATH variable"},{"type":"function","name":"common_firmware_builder","ident":"fu_common_firmware_builder","summary":"Builds a firmware file using tools from the host ..."},{"type":"function","name":"common_fnmatch","ident":"fu_common_fnmatch","summary":"Matches a string against a glob pattern."},{"type":"function","name":"common_get_contents_bytes","ident":"fu_common_get_contents_bytes","summary":"Reads a blob of data from a file."},{"type":"function","name":"common_get_contents_fd","ident":"fu_common_get_contents_fd","summary":"Reads a blob from a specific file descriptor.  ..."},{"type":"function","name":"common_get_cpu_vendor","ident":"fu_common_get_cpu_vendor","summary":"Uses CPUID to discover the CPU vendor."},{"type":"function","name":"common_get_esp_default","ident":"fu_common_get_esp_default","summary":"Gets the platform default ESP"},{"type":"function","name":"common_get_esp_for_path","ident":"fu_common_get_esp_for_path","summary":"Gets the platform ESP using a UNIX or UDisks path"},{"type":"function","name":"common_get_files_recursive","ident":"fu_common_get_files_recursive","summary":"Returns every file found under @directory, and any subdirectory. ..."},{"type":"function","name":"common_get_memory_size","ident":"fu_common_get_memory_size","summary":"Returns the size of physical memory."},{"type":"function","name":"common_get_path","ident":"fu_common_get_path","summary":"Gets a fwupd-specific system path. These can be overridden ..."},{"type":"function","name":"common_get_volume_by_device","ident":"fu_common_get_volume_by_device","summary":"Finds the first volume from the specified device."},{"type":"function","name":"common_get_volume_by_devnum","ident":"fu_common_get_volume_by_devnum","summary":"Finds the first volume from the specified device."},{"type":"function","name":"common_get_volumes_by_kind","ident":"fu_common_get_volumes_by_kind","summary":"Finds all volumes of a specific partition type"},{"type":"function","name":"common_guid_is_plausible","ident":"fu_common_guid_is_plausible","summary":"Checks whether a chunk of memory looks like it ..."},{"type":"function","name":"common_is_live_media","ident":"fu_common_is_live_media","summary":"Checks if the user is running from a live ..."},{"type":"function","name":"common_kernel_locked_down","ident":"fu_common_kernel_locked_down","summary":"Determines if kernel lockdown in effect"},{"type":"function","name":"common_mkdir_parent","ident":"fu_common_mkdir_parent","summary":"Creates any required directories, including any parent directories."},{"type":"function","name":"common_read_uint16","ident":"fu_common_read_uint16","summary":"Read a value from a buffer using a specified endian."},{"type":"function","name":"common_read_uint16_safe","ident":"fu_common_read_uint16_safe","summary":"Read a value from a buffer using a specified ..."},{"type":"function","name":"common_read_uint32","ident":"fu_common_read_uint32","summary":"Read a value from a buffer using a specified endian."},{"type":"function","name":"common_read_uint32_safe","ident":"fu_common_read_uint32_safe","summary":"Read a value from a buffer using a specified ..."},{"type":"function","name":"common_read_uint64","ident":"fu_common_read_uint64","summary":"Read a value from a buffer using a specified endian."},{"type":"function","name":"common_read_uint64_safe","ident":"fu_common_read_uint64_safe","summary":"Read a value from a buffer using a specified ..."},{"type":"function","name":"common_read_uint8_safe","ident":"fu_common_read_uint8_safe","summary":"Read a value from a buffer in a safe ..."},{"type":"function","name":"common_realpath","ident":"fu_common_realpath","summary":"Finds the canonicalized absolute filename for a path."},{"type":"function","name":"common_rmtree","ident":"fu_common_rmtree","summary":"Recursively removes a directory."},{"type":"function","name":"common_set_contents_bytes","ident":"fu_common_set_contents_bytes","summary":"Writes a blob of data to a filename, creating ..."},{"type":"function","name":"common_spawn_sync","ident":"fu_common_spawn_sync","summary":"Runs a subprocess and waits for it to exit. ..."},{"type":"function","name":"common_string_append_kb","ident":"fu_common_string_append_kb","summary":"Appends a key and boolean value to a string"},{"type":"function","name":"common_string_append_ku","ident":"fu_common_string_append_ku","summary":"Appends a key and unsigned integer to a string"},{"type":"function","name":"common_string_append_kv","ident":"fu_common_string_append_kv","summary":"Appends a key and string value to a string"},{"type":"function","name":"common_string_append_kx","ident":"fu_common_string_append_kx","summary":"Appends a key and hex integer to a string"},{"type":"function","name":"common_string_replace","ident":"fu_common_string_replace","summary":"Performs multiple search and replace operations on the given string."},{"type":"function","name":"common_strjoin_array","ident":"fu_common_strjoin_array","summary":"Joins an array of strings together to form one ..."},{"type":"function","name":"common_strnsplit","ident":"fu_common_strnsplit","summary":"Splits a string into a maximum of @max_tokens pieces, ..."},{"type":"function","name":"common_strsafe","ident":"fu_common_strsafe","summary":"Converts a string into something that can be safely printed."},{"type":"function","name":"common_strstrip","ident":"fu_common_strstrip","summary":"Removes leading and trailing whitespace from a constant string."},{"type":"function","name":"common_strtoull","ident":"fu_common_strtoull","summary":"Converts a string value to an integer. Values are ..."},{"type":"function","name":"common_strwidth","ident":"fu_common_strwidth","summary":"Returns the width of the string in displayed characters ..."},{"type":"function","name":"common_uri_get_scheme","ident":"fu_common_uri_get_scheme","summary":"Returns the USI scheme for the given URI."},{"type":"function","name":"common_vercmp_full","ident":"fu_common_vercmp_full","summary":"Compares version numbers for sorting taking into account the ..."},{"type":"function","name":"common_version_ensure_semver","ident":"fu_common_version_ensure_semver","summary":"Builds a semver from the possibly crazy version number."},{"type":"function","name":"common_version_from_uint16","ident":"fu_common_version_from_uint16","summary":"Returns a dotted decimal version string from a 16 ..."},{"type":"function","name":"common_version_from_uint32","ident":"fu_common_version_from_uint32","summary":"Returns a dotted decimal version string from a 32 ..."},{"type":"function","name":"common_version_from_uint64","ident":"fu_common_version_from_uint64","summary":"Returns a dotted decimal version string from a 64 ..."},{"type":"function","name":"common_version_guess_format","ident":"fu_common_version_guess_format","summary":"Guesses the version format from the version number. This ..."},{"type":"function","name":"common_version_parse_from_format","ident":"fu_common_version_parse_from_format","summary":"Returns a dotted decimal version string from a version ..."},{"type":"function","name":"common_version_verify_format","ident":"fu_common_version_verify_format","summary":"Verifies if a version matches the input format."},{"type":"function","name":"common_write_uint16","ident":"fu_common_write_uint16","summary":"Writes a value to a buffer using a specified endian."},{"type":"function","name":"common_write_uint16_safe","ident":"fu_common_write_uint16_safe","summary":"Write a value to a buffer using a specified ..."},{"type":"function","name":"common_write_uint32","ident":"fu_common_write_uint32","summary":"Writes a value to a buffer using a specified endian."},{"type":"function","name":"common_write_uint32_safe","ident":"fu_common_write_uint32_safe","summary":"Write a value to a buffer using a specified ..."},{"type":"function","name":"common_write_uint64","ident":"fu_common_write_uint64","summary":"Writes a value to a buffer using a specified endian."},{"type":"function","name":"common_write_uint64_safe","ident":"fu_common_write_uint64_safe","summary":"Write a value to a buffer using a specified ..."},{"type":"function","name":"common_write_uint8_safe","ident":"fu_common_write_uint8_safe","summary":"Write a value to a buffer in a safe ..."},{"type":"function","name":"efivar_delete","ident":"fu_efivar_delete","summary":"Removes a variable from NVRAM"},{"type":"function","name":"efivar_delete_with_glob","ident":"fu_efivar_delete_with_glob","summary":"Removes a group of variables from NVRAM"},{"type":"function","name":"efivar_exists","ident":"fu_efivar_exists","summary":"Test if a variable exists"},{"type":"function","name":"efivar_get_data","ident":"fu_efivar_get_data","summary":"Gets the data from a UEFI variable in NVRAM"},{"type":"function","name":"efivar_get_data_bytes","ident":"fu_efivar_get_data_bytes","summary":"Gets the data from a UEFI variable in NVRAM"},{"type":"function","name":"efivar_get_monitor","ident":"fu_efivar_get_monitor","summary":"Returns a file monitor for a specific key."},{"type":"function","name":"efivar_get_names","ident":"fu_efivar_get_names","summary":"Gets the list of names where the GUID matches. ..."},{"type":"function","name":"efivar_secure_boot_enabled","ident":"fu_efivar_secure_boot_enabled","summary":"Determines if secure boot was enabled"},{"type":"function","name":"efivar_secure_boot_enabled_full","ident":"fu_efivar_secure_boot_enabled_full","summary":"Determines if secure boot was enabled"},{"type":"function","name":"efivar_set_data","ident":"fu_efivar_set_data","summary":"Sets the data to a UEFI variable in NVRAM"},{"type":"function","name":"efivar_set_data_bytes","ident":"fu_efivar_set_data_bytes","summary":"Sets the data to a UEFI variable in NVRAM"},{"type":"function","name":"efivar_space_used","ident":"fu_efivar_space_used","summary":"Gets the total size used by all EFI variables. ..."},{"type":"function","name":"efivar_supported","ident":"fu_efivar_supported","summary":"Determines if the kernel supports EFI variables"},{"type":"function","name":"kenv_get_string","ident":"fu_kenv_get_string","summary":"Gets a BSD kernel environment string. This will not ..."},{"type":"function","name":"memcpy_safe","ident":"fu_memcpy_safe","summary":"Copies some memory using memcpy in a safe way. ..."},{"type":"function","name":"memdup_safe","ident":"fu_memdup_safe","summary":"Duplicates some memory using memdup in a safe way. ..."},{"type":"function","name":"version_string","ident":"fu_version_string","summary":"Gets the libfwupdplugin installed runtime version.  This may ..."},{"type":"function","name":"xmlb_builder_insert_kb","ident":"fu_xmlb_builder_insert_kb","summary":"Convenience function to add an XML node with a ..."},{"type":"function","name":"xmlb_builder_insert_kv","ident":"fu_xmlb_builder_insert_kv","summary":"Convenience function to add an XML node with a ..."},{"type":"function","name":"xmlb_builder_insert_kx","ident":"fu_xmlb_builder_insert_kx","summary":"Convenience function to add an XML node with an ..."},{"type":"function_macro","name":"device_add_checksum","ident":"fu_device_add_checksum","summary":"No description available."},{"type":"function_macro","name":"device_add_icon","ident":"fu_device_add_icon","summary":"No description available."},{"type":"function_macro","name":"device_add_protocol","ident":"fu_device_add_protocol","summary":"No description available."},{"type":"function_macro","name":"device_add_release","ident":"fu_device_add_release","summary":"No description available."},{"type":"function_macro","name":"device_add_vendor_id","ident":"fu_device_add_vendor_id","summary":"No description available."},{"type":"function_macro","name":"device_get_branch","ident":"fu_device_get_branch","summary":"No description available."},{"type":"function_macro","name":"device_get_checksums","ident":"fu_device_get_checksums","summary":"No description available."},{"type":"function_macro","name":"device_get_composite_id","ident":"fu_device_get_composite_id","summary":"No description available."},{"type":"function_macro","name":"device_get_created","ident":"fu_device_get_created","summary":"No description available."},{"type":"function_macro","name":"device_get_flags","ident":"fu_device_get_flags","summary":"No description available."},{"type":"function_macro","name":"device_get_flashes_left","ident":"fu_device_get_flashes_left","summary":"No description available."},{"type":"function_macro","name":"device_get_guid_default","ident":"fu_device_get_guid_default","summary":"No description available."},{"type":"function_macro","name":"device_get_guids","ident":"fu_device_get_guids","summary":"No description available."},{"type":"function_macro","name":"device_get_icons","ident":"fu_device_get_icons","summary":"No description available."},{"type":"function_macro","name":"device_get_id","ident":"fu_device_get_id","summary":"No description available."},{"type":"function_macro","name":"device_get_install_duration","ident":"fu_device_get_install_duration","summary":"No description available."},{"type":"function_macro","name":"device_get_instance_ids","ident":"fu_device_get_instance_ids","summary":"No description available."},{"type":"function_macro","name":"device_get_modified","ident":"fu_device_get_modified","summary":"No description available."},{"type":"function_macro","name":"device_get_name","ident":"fu_device_get_name","summary":"No description available."},{"type":"function_macro","name":"device_get_plugin","ident":"fu_device_get_plugin","summary":"No description available."},{"type":"function_macro","name":"device_get_protocols","ident":"fu_device_get_protocols","summary":"No description available."},{"type":"function_macro","name":"device_get_serial","ident":"fu_device_get_serial","summary":"No description available."},{"type":"function_macro","name":"device_get_summary","ident":"fu_device_get_summary","summary":"No description available."},{"type":"function_macro","name":"device_get_update_error","ident":"fu_device_get_update_error","summary":"No description available."},{"type":"function_macro","name":"device_get_update_state","ident":"fu_device_get_update_state","summary":"No description available."},{"type":"function_macro","name":"device_get_vendor","ident":"fu_device_get_vendor","summary":"No description available."},{"type":"function_macro","name":"device_get_vendor_ids","ident":"fu_device_get_vendor_ids","summary":"No description available."},{"type":"function_macro","name":"device_get_version","ident":"fu_device_get_version","summary":"No description available."},{"type":"function_macro","name":"device_get_version_bootloader","ident":"fu_device_get_version_bootloader","summary":"No description available."},{"type":"function_macro","name":"device_get_version_bootloader_raw","ident":"fu_device_get_version_bootloader_raw","summary":"No description available."},{"type":"function_macro","name":"device_get_version_format","ident":"fu_device_get_version_format","summary":"No description available."},{"type":"function_macro","name":"device_get_version_lowest","ident":"fu_device_get_version_lowest","summary":"No description available."},{"type":"function_macro","name":"device_get_version_lowest_raw","ident":"fu_device_get_version_lowest_raw","summary":"No description available."},{"type":"function_macro","name":"device_get_version_raw","ident":"fu_device_get_version_raw","summary":"No description available."},{"type":"function_macro","name":"device_has_flag","ident":"fu_device_has_flag","summary":"No description available."},{"type":"function_macro","name":"device_has_instance_id","ident":"fu_device_has_instance_id","summary":"No description available."},{"type":"function_macro","name":"device_has_protocol","ident":"fu_device_has_protocol","summary":"No description available."},{"type":"function_macro","name":"device_has_vendor_id","ident":"fu_device_has_vendor_id","summary":"No description available."},{"type":"function_macro","name":"device_set_branch","ident":"fu_device_set_branch","summary":"No description available."},{"type":"function_macro","name":"device_set_created","ident":"fu_device_set_created","summary":"No description available."},{"type":"function_macro","name":"device_set_description","ident":"fu_device_set_description","summary":"No description available."},{"type":"function_macro","name":"device_set_flags","ident":"fu_device_set_flags","summary":"No description available."},{"type":"function_macro","name":"device_set_flashes_left","ident":"fu_device_set_flashes_left","summary":"No description available."},{"type":"function_macro","name":"device_set_install_duration","ident":"fu_device_set_install_duration","summary":"No description available."},{"type":"function_macro","name":"device_set_modified","ident":"fu_device_set_modified","summary":"No description available."},{"type":"function_macro","name":"device_set_plugin","ident":"fu_device_set_plugin","summary":"No description available."},{"type":"function_macro","name":"device_set_serial","ident":"fu_device_set_serial","summary":"No description available."},{"type":"function_macro","name":"device_set_summary","ident":"fu_device_set_summary","summary":"No description available."},{"type":"function_macro","name":"device_set_update_error","ident":"fu_device_set_update_error","summary":"No description available."},{"type":"function_macro","name":"device_set_update_image","ident":"fu_device_set_update_image","summary":"No description available."},{"type":"function_macro","name":"device_set_update_message","ident":"fu_device_set_update_message","summary":"No description available."},{"type":"function_macro","name":"device_set_update_state","ident":"fu_device_set_update_state","summary":"No description available."},{"type":"function_macro","name":"device_set_vendor","ident":"fu_device_set_vendor","summary":"No description available."},{"type":"function_macro","name":"device_set_version_bootloader_raw","ident":"fu_device_set_version_bootloader_raw","summary":"No description available."},{"type":"function_macro","name":"device_set_version_lowest_raw","ident":"fu_device_set_version_lowest_raw","summary":"No description available."},{"type":"function_macro","name":"device_set_version_raw","ident":"fu_device_set_version_raw","summary":"No description available."},{"type":"function_macro","name":"plugin_add_flag","ident":"fu_plugin_add_flag","summary":"No description available."},{"type":"function_macro","name":"plugin_get_flags","ident":"fu_plugin_get_flags","summary":"No description available."},{"type":"function_macro","name":"plugin_has_flag","ident":"fu_plugin_has_flag","summary":"No description available."},{"type":"function_macro","name":"plugin_remove_flag","ident":"fu_plugin_remove_flag","summary":"No description available."},{"type":"method","name":"activate","type_name":"Device","ident":"fu_device_activate","summary":"Activates up a device, which normally means the device ..."},{"type":"method","name":"add_child","type_name":"Device","ident":"fu_device_add_child","summary":"Sets any child device. An child device is logically ..."},{"type":"method","name":"add_chunk","type_name":"Firmware","ident":"fu_firmware_add_chunk","summary":"Adds a chunk to the image."},{"type":"method","name":"add_compile_version","type_name":"Context","ident":"fu_context_add_compile_version","summary":"Sets a compile-time version of a specific dependency."},{"type":"method","name":"add_counterpart_guid","type_name":"Device","ident":"fu_device_add_counterpart_guid","summary":"Adds a GUID to the device. If the @guid ..."},{"type":"method","name":"add_device_gtype","type_name":"Plugin","ident":"fu_plugin_add_device_gtype","summary":"Adds the device #GType which is used when creating ..."},{"type":"method","name":"add_file","type_name":"Cabinet","ident":"fu_cabinet_add_file","summary":"Adds a file to the silo."},{"type":"method","name":"add_firmware_gtype","type_name":"Context","ident":"fu_context_add_firmware_gtype","summary":"Adds a firmware #GType which is used when creating ..."},{"type":"method","name":"add_firmware_gtype","type_name":"Plugin","ident":"fu_plugin_add_firmware_gtype","summary":"Adds a firmware #GType which is used when creating ..."},{"type":"method","name":"add_flag","type_name":"Device","ident":"fu_device_add_flag","summary":"Adds a device flag to the device."},{"type":"method","name":"add_flag","type_name":"Firmware","ident":"fu_firmware_add_flag","summary":"Adds a specific firmware flag to the firmware."},{"type":"method","name":"add_flag","type_name":"HidDevice","ident":"fu_hid_device_add_flag","summary":"Adds a flag to be used for all set ..."},{"type":"method","name":"add_guid","type_name":"Device","ident":"fu_device_add_guid","summary":"Adds a GUID to the device. If the @guid ..."},{"type":"method","name":"add_image","type_name":"Firmware","ident":"fu_firmware_add_image","summary":"Adds an image to the firmware.  If %FU_FIRMWARE_FLAG_DEDUPE_ID ..."},{"type":"method","name":"add_instance_id","type_name":"Device","ident":"fu_device_add_instance_id","summary":"Adds an instance ID to the device. If the ..."},{"type":"method","name":"add_instance_id_full","type_name":"Device","ident":"fu_device_add_instance_id_full","summary":"Adds an instance ID with all parameters set"},{"type":"method","name":"add_internal_flag","type_name":"Device","ident":"fu_device_add_internal_flag","summary":"Adds a private flag that stays internal to the ..."},{"type":"method","name":"add_parent_guid","type_name":"Device","ident":"fu_device_add_parent_guid","summary":"Sets any parent device using a GUID. An parent ..."},{"type":"method","name":"add_possible_key","type_name":"Quirks","ident":"fu_quirks_add_possible_key","summary":"Adds a possible quirk key. If added by a ..."},{"type":"method","name":"add_possible_plugin","type_name":"Device","ident":"fu_device_add_possible_plugin","summary":"Adds a plugin name to the list of plugins ..."},{"type":"method","name":"add_quirk_key","type_name":"Context","ident":"fu_context_add_quirk_key","summary":"Adds a possible quirk key. If added by a ..."},{"type":"method","name":"add_report_metadata","type_name":"Plugin","ident":"fu_plugin_add_report_metadata","summary":"Sets any additional metadata to be included in the ..."},{"type":"method","name":"add_rule","type_name":"Plugin","ident":"fu_plugin_add_rule","summary":"If the plugin name is found, the rule will ..."},{"type":"method","name":"add_runtime_version","type_name":"Context","ident":"fu_context_add_runtime_version","summary":"Sets a runtime version of a specific dependency."},{"type":"method","name":"add_security_attrs","type_name":"Device","ident":"fu_device_add_security_attrs","summary":"Adds HSI security attributes."},{"type":"method","name":"add_smbios_override","type_name":"Hwids","ident":"fu_hwids_add_smbios_override","summary":"Sets SMBIOS override values so you can emulate another ..."},{"type":"method","name":"add_udev_subsystem","type_name":"Context","ident":"fu_context_add_udev_subsystem","summary":"Registers the udev subsystem to be watched by the ..."},{"type":"method","name":"alloc_data","type_name":"Plugin","ident":"fu_plugin_alloc_data","summary":"Allocates the per-plugin allocated private data."},{"type":"method","name":"append","type_name":"SecurityAttrs","ident":"fu_security_attrs_append","summary":"Adds a #FwupdSecurityAttr to the array."},{"type":"method","name":"attach","type_name":"Device","ident":"fu_device_attach","summary":"Attaches a device from the bootloader into application mode."},{"type":"method","name":"bind_driver","type_name":"Device","ident":"fu_device_bind_driver","summary":"Binds a driver to the device, which normally means ..."},{"type":"method","name":"build","type_name":"Firmware","ident":"fu_firmware_build","summary":"Builds a firmware from an XML manifest. The manifest ..."},{"type":"method","name":"build_from_xml","type_name":"Firmware","ident":"fu_firmware_build_from_xml","summary":"Builds a firmware from an XML manifest. The manifest ..."},{"type":"method","name":"cache_add","type_name":"Plugin","ident":"fu_plugin_cache_add","summary":"Adds an object to the per-plugin cache."},{"type":"method","name":"cache_lookup","type_name":"Plugin","ident":"fu_plugin_cache_lookup","summary":"Finds an object in the per-plugin cache."},{"type":"method","name":"cache_remove","type_name":"Plugin","ident":"fu_plugin_cache_remove","summary":"Removes an object from the per-plugin cache."},{"type":"method","name":"calculate_hsi","type_name":"SecurityAttrs","ident":"fu_security_attrs_calculate_hsi","summary":"Calculates the HSI string from the appended attributes."},{"type":"method","name":"check_free_space","type_name":"Volume","ident":"fu_volume_check_free_space","summary":"Checks the volume for required space."},{"type":"method","name":"cleanup","type_name":"Device","ident":"fu_device_cleanup","summary":"Cleans up a device after an update. A different ..."},{"type":"method","name":"close","type_name":"Device","ident":"fu_device_close","summary":"Closes a device, optionally running a object-specific vfunc.  ..."},{"type":"method","name":"close","type_name":"DeviceLocker","ident":"fu_device_locker_close","summary":"Closes the locker before it gets cleaned up.  ..."},{"type":"method","name":"coldplug","type_name":"Backend","ident":"fu_backend_coldplug","summary":"Adds devices using the subclassed backend. If fu_backend_setup() has ..."},{"type":"method","name":"convert_instance_ids","type_name":"Device","ident":"fu_device_convert_instance_ids","summary":"Converts all the Device Instance IDs added using fu_device_add_instance_id() ..."},{"type":"method","name":"depsolve","type_name":"SecurityAttrs","ident":"fu_security_attrs_depsolve","summary":"Marks any attributes with %FWUPD_SECURITY_ATTR_FLAG_OBSOLETED that have been defined ..."},{"type":"method","name":"detach","type_name":"Device","ident":"fu_device_detach","summary":"Detaches a device from the application into bootloader mode."},{"type":"method","name":"device_add","type_name":"Plugin","ident":"fu_plugin_device_add","summary":"Asks the daemon to add a device to the ..."},{"type":"method","name":"device_added","type_name":"Backend","ident":"fu_backend_device_added","summary":"Emits a signal that indicates the device has been added."},{"type":"method","name":"device_changed","type_name":"Backend","ident":"fu_backend_device_changed","summary":"Emits a signal that indicates the device has been changed."},{"type":"method","name":"device_register","type_name":"Plugin","ident":"fu_plugin_device_register","summary":"Registers the device with other plugins so they can ..."},{"type":"method","name":"device_remove","type_name":"Plugin","ident":"fu_plugin_device_remove","summary":"Asks the daemon to remove a device from the ..."},{"type":"method","name":"device_removed","type_name":"Backend","ident":"fu_backend_device_removed","summary":"Emits a signal that indicates the device has been removed."},{"type":"method","name":"dump_firmware","type_name":"Device","ident":"fu_device_dump_firmware","summary":"Reads the raw firmware image from the device by ..."},{"type":"method","name":"emit_changed","type_name":"UdevDevice","ident":"fu_udev_device_emit_changed","summary":"Emits the ::changed signal for the object."},{"type":"method","name":"ensure_id","type_name":"Device","ident":"fu_device_ensure_id","summary":"If not already set, generates a device ID with ..."},{"type":"method","name":"export","type_name":"Cabinet","ident":"fu_cabinet_export","summary":"Exports the cabinet archive."},{"type":"method","name":"export","type_name":"Firmware","ident":"fu_firmware_export","summary":"This allows us to build an XML object for ..."},{"type":"method","name":"export_to_xml","type_name":"Firmware","ident":"fu_firmware_export_to_xml","summary":"This allows us to build an XML object for ..."},{"type":"method","name":"find_udev_device","type_name":"UsbDevice","ident":"fu_usb_device_find_udev_device","summary":"Gets the matching #GUdevDevice for the #GUsbDevice."},{"type":"method","name":"get_addr","type_name":"Firmware","ident":"fu_firmware_get_addr","summary":"Gets the base address of the image."},{"type":"method","name":"get_address","type_name":"Chunk","ident":"fu_chunk_get_address","summary":"Gets the address of the chunk."},{"type":"method","name":"get_alignment","type_name":"Firmware","ident":"fu_firmware_get_alignment","summary":"Gets the alignment of the firmware.  This allows ..."},{"type":"method","name":"get_all","type_name":"SecurityAttrs","ident":"fu_security_attrs_get_all","summary":"Gets all the attributes in the object."},{"type":"method","name":"get_alternate","type_name":"Device","ident":"fu_device_get_alternate","summary":"Gets any alternate device. An alternate device may be ..."},{"type":"method","name":"get_alternate_id","type_name":"Device","ident":"fu_device_get_alternate_id","summary":"Gets any alternate device ID. An alternate device may ..."},{"type":"method","name":"get_backend_id","type_name":"Device","ident":"fu_device_get_backend_id","summary":"Gets the ID set for the device as recognized ..."},{"type":"method","name":"get_battery_level","type_name":"Context","ident":"fu_context_get_battery_level","summary":"Gets the system battery level in percent."},{"type":"method","name":"get_battery_level","type_name":"Device","ident":"fu_device_get_battery_level","summary":"Returns the battery level."},{"type":"method","name":"get_battery_state","type_name":"Context","ident":"fu_context_get_battery_state","summary":"Gets if the system is on battery power, e.g. ..."},{"type":"method","name":"get_battery_threshold","type_name":"Context","ident":"fu_context_get_battery_threshold","summary":"Gets the system battery threshold in percent."},{"type":"method","name":"get_battery_threshold","type_name":"Device","ident":"fu_device_get_battery_threshold","summary":"Returns the battery threshold under which a firmware update ..."},{"type":"method","name":"get_build_hash","type_name":"Plugin","ident":"fu_plugin_get_build_hash","summary":"Gets the build hash a plugin was generated with."},{"type":"method","name":"get_bus_number","type_name":"I2cDevice","ident":"fu_i2c_device_get_bus_number","summary":"Gets the I\u00b2C bus number."},{"type":"method","name":"get_bytes","type_name":"Chunk","ident":"fu_chunk_get_bytes","summary":"Gets the data of the chunk."},{"type":"method","name":"get_bytes","type_name":"Firmware","ident":"fu_firmware_get_bytes","summary":"Gets the firmware payload, which does not have any ..."},{"type":"method","name":"get_checksum","type_name":"Firmware","ident":"fu_firmware_get_checksum","summary":"Returns a checksum of the payload data."},{"type":"method","name":"get_children","type_name":"Device","ident":"fu_device_get_children","summary":"Gets any child devices. A child device is logically ..."},{"type":"method","name":"get_chunks","type_name":"Firmware","ident":"fu_firmware_get_chunks","summary":"Gets the optional image chunks."},{"type":"method","name":"get_config_value","type_name":"Plugin","ident":"fu_plugin_get_config_value","summary":"Return the value of a key if it's been configured"},{"type":"method","name":"get_config_value_boolean","type_name":"Plugin","ident":"fu_plugin_get_config_value_boolean","summary":"Return the boolean value of a key if it's ..."},{"type":"method","name":"get_context","type_name":"Backend","ident":"fu_backend_get_context","summary":"Gets the context for a backend."},{"type":"method","name":"get_context","type_name":"Device","ident":"fu_device_get_context","summary":"Gets the context assigned for this device."},{"type":"method","name":"get_context","type_name":"Plugin","ident":"fu_plugin_get_context","summary":"Gets the context for a plugin."},{"type":"method","name":"get_custom_flags","type_name":"Device","ident":"fu_device_get_custom_flags","summary":"Gets the custom flags for the device from the ..."},{"type":"method","name":"get_data","type_name":"Chunk","ident":"fu_chunk_get_data","summary":"Gets the data of the chunk."},{"type":"method","name":"get_data","type_name":"Plugin","ident":"fu_plugin_get_data","summary":"Gets the per-plugin allocated private data. This will return ..."},{"type":"method","name":"get_data","type_name":"Smbios","ident":"fu_smbios_get_data","summary":"Reads a SMBIOS data blob, which includes the SMBIOS ..."},{"type":"method","name":"get_data_out","type_name":"Chunk","ident":"fu_chunk_get_data_out","summary":"Gets the mutable data of the chunk.  WARNING: ..."},{"type":"method","name":"get_data_sz","type_name":"Chunk","ident":"fu_chunk_get_data_sz","summary":"Gets the data size of the chunk."},{"type":"method","name":"get_dev","type_name":"UdevDevice","ident":"fu_udev_device_get_dev","summary":"Gets the #GUdevDevice."},{"type":"method","name":"get_dev","type_name":"UsbDevice","ident":"fu_usb_device_get_dev","summary":"Gets the #GUsbDevice."},{"type":"method","name":"get_device_file","type_name":"UdevDevice","ident":"fu_udev_device_get_device_file","summary":"Gets the device node."},{"type":"method","name":"get_devices","type_name":"Backend","ident":"fu_backend_get_devices","summary":"Gets all the devices added by the backend."},{"type":"method","name":"get_devices","type_name":"Plugin","ident":"fu_plugin_get_devices","summary":"Returns all devices added by the plugin using fu_plugin_device_add() ..."},{"type":"method","name":"get_devtype","type_name":"UdevDevice","ident":"fu_udev_device_get_devtype","summary":"Returns the Udev device type"},{"type":"method","name":"get_driver","type_name":"UdevDevice","ident":"fu_udev_device_get_driver","summary":"Gets the device driver, e.g. `psmouse`."},{"type":"method","name":"get_enabled","type_name":"Backend","ident":"fu_backend_get_enabled","summary":"Return the boolean value of a key if it's ..."},{"type":"method","name":"get_equivalent_id","type_name":"Device","ident":"fu_device_get_equivalent_id","summary":"Gets any equivalent ID for a device"},{"type":"method","name":"get_fd","type_name":"UdevDevice","ident":"fu_udev_device_get_fd","summary":"Gets the file descriptor if the device is open."},{"type":"method","name":"get_file","type_name":"Cabinet","ident":"fu_cabinet_get_file","summary":"Gets a file from the archive."},{"type":"method","name":"get_filename","type_name":"Firmware","ident":"fu_firmware_get_filename","summary":"Gets an optional filename that represents the image source ..."},{"type":"method","name":"get_firmware_gtype_by_id","type_name":"Context","ident":"fu_context_get_firmware_gtype_by_id","summary":"Returns the #GType using the firmware @id."},{"type":"method","name":"get_firmware_gtype_ids","type_name":"Context","ident":"fu_context_get_firmware_gtype_ids","summary":"Returns all the firmware #GType IDs."},{"type":"method","name":"get_firmware_size_max","type_name":"Device","ident":"fu_device_get_firmware_size_max","summary":"Gets the maximum size of the firmware blob."},{"type":"method","name":"get_firmware_size_min","type_name":"Device","ident":"fu_device_get_firmware_size_min","summary":"Gets the minimum size of the firmware blob."},{"type":"method","name":"get_guid","type_name":"Hwids","ident":"fu_hwids_get_guid","summary":"Gets the GUID for a specific key."},{"type":"method","name":"get_guids","type_name":"Hwids","ident":"fu_hwids_get_guids","summary":"Returns all the defined HWIDs"},{"type":"method","name":"get_guids_as_str","type_name":"Device","ident":"fu_device_get_guids_as_str","summary":"Gets the device GUIDs as a joined string, which ..."},{"type":"method","name":"get_hwid_guids","type_name":"Context","ident":"fu_context_get_hwid_guids","summary":"Returns all the HWIDs defined in the system. All ..."},{"type":"method","name":"get_hwid_replace_value","type_name":"Context","ident":"fu_context_get_hwid_replace_value","summary":"Gets the replacement value for a specific key. All ..."},{"type":"method","name":"get_hwid_value","type_name":"Context","ident":"fu_context_get_hwid_value","summary":"Gets the cached value for one specific key that ..."},{"type":"method","name":"get_id","type_name":"Firmware","ident":"fu_firmware_get_id","summary":"Gets the image ID, typically set at construction."},{"type":"method","name":"get_id","type_name":"Volume","ident":"fu_volume_get_id","summary":"Gets the D-Bus path of the mount point."},{"type":"method","name":"get_id_type","type_name":"Volume","ident":"fu_volume_get_id_type","summary":"Return the IdType of the volume"},{"type":"method","name":"get_idx","type_name":"Chunk","ident":"fu_chunk_get_idx","summary":"Gets the index of the chunk."},{"type":"method","name":"get_idx","type_name":"Firmware","ident":"fu_firmware_get_idx","summary":"Gets the index of the image which is used ..."},{"type":"method","name":"get_image_by_checksum","type_name":"Firmware","ident":"fu_firmware_get_image_by_checksum","summary":"Gets the firmware image using the image checksum. The ..."},{"type":"method","name":"get_image_by_id","type_name":"Firmware","ident":"fu_firmware_get_image_by_id","summary":"Gets the firmware image using the image ID."},{"type":"method","name":"get_image_by_id_bytes","type_name":"Firmware","ident":"fu_firmware_get_image_by_id_bytes","summary":"Gets the firmware image bytes using the image ID."},{"type":"method","name":"get_image_by_idx","type_name":"Firmware","ident":"fu_firmware_get_image_by_idx","summary":"Gets the firmware image using the image index."},{"type":"method","name":"get_image_by_idx_bytes","type_name":"Firmware","ident":"fu_firmware_get_image_by_idx_bytes","summary":"Gets the firmware image bytes using the image index."},{"type":"method","name":"get_images","type_name":"Firmware","ident":"fu_firmware_get_images","summary":"Returns all the images in the firmware."},{"type":"method","name":"get_integer","type_name":"Smbios","ident":"fu_smbios_get_integer","summary":"Reads an integer value from the SMBIOS string table ..."},{"type":"method","name":"get_interface","type_name":"HidDevice","ident":"fu_hid_device_get_interface","summary":"Gets the HID USB interface number."},{"type":"method","name":"get_keys","type_name":"Hwids","ident":"fu_hwids_get_keys","summary":"Returns all the defined HWID keys."},{"type":"method","name":"get_kind","type_name":"EfiSignature","ident":"fu_efi_signature_get_kind","summary":"Returns the signature kind."},{"type":"method","name":"get_logical_id","type_name":"Device","ident":"fu_device_get_logical_id","summary":"Gets the logical ID set for the device, which ..."},{"type":"method","name":"get_metadata","type_name":"Device","ident":"fu_device_get_metadata","summary":"Gets an item of metadata from the device."},{"type":"method","name":"get_metadata_boolean","type_name":"Device","ident":"fu_device_get_metadata_boolean","summary":"Gets an item of metadata from the device."},{"type":"method","name":"get_metadata_integer","type_name":"Device","ident":"fu_device_get_metadata_integer","summary":"Gets an item of metadata from the device."},{"type":"method","name":"get_model","type_name":"UdevDevice","ident":"fu_udev_device_get_model","summary":"Gets the device device code."},{"type":"method","name":"get_mount_point","type_name":"Volume","ident":"fu_volume_get_mount_point","summary":"Gets the location of the volume mount point."},{"type":"method","name":"get_name","type_name":"Backend","ident":"fu_backend_get_name","summary":"Return the name of the backend, which is normally ..."},{"type":"method","name":"get_name","type_name":"Plugin","ident":"fu_plugin_get_name","summary":"Gets the plugin name."},{"type":"method","name":"get_number","type_name":"UdevDevice","ident":"fu_udev_device_get_number","summary":"Gets the device number, if any."},{"type":"method","name":"get_offset","type_name":"Firmware","ident":"fu_firmware_get_offset","summary":"Gets the base offset of the image."},{"type":"method","name":"get_order","type_name":"Device","ident":"fu_device_get_order","summary":"Gets the device order, where higher numbers are installed ..."},{"type":"method","name":"get_order","type_name":"Plugin","ident":"fu_plugin_get_order","summary":"Gets the plugin order, where higher numbers are run ..."},{"type":"method","name":"get_owner","type_name":"EfiSignature","ident":"fu_efi_signature_get_owner","summary":"Returns the GUID of the signature owner."},{"type":"method","name":"get_page","type_name":"Chunk","ident":"fu_chunk_get_page","summary":"Gets the page of the chunk."},{"type":"method","name":"get_parent","type_name":"Device","ident":"fu_device_get_parent","summary":"Gets any parent device. An parent device is logically ..."},{"type":"method","name":"get_parent_guids","type_name":"Device","ident":"fu_device_get_parent_guids","summary":"Gets any parent device GUIDs. If a device is ..."},{"type":"method","name":"get_parent_name","type_name":"UdevDevice","ident":"fu_udev_device_get_parent_name","summary":"Returns the name of the direct ancestor of this device"},{"type":"method","name":"get_physical_id","type_name":"Device","ident":"fu_device_get_physical_id","summary":"Gets the physical ID set for the device, which ..."},{"type":"method","name":"get_pid","type_name":"DfuFirmware","ident":"fu_dfu_firmware_get_pid","summary":"Gets the product ID, or 0xffff for no restriction."},{"type":"method","name":"get_pid","type_name":"UsbDevice","ident":"fu_usb_device_get_pid","summary":"Gets the device product code."},{"type":"method","name":"get_platform_id","type_name":"UsbDevice","ident":"fu_usb_device_get_platform_id","summary":"Gets the device platform ID."},{"type":"method","name":"get_possible_plugins","type_name":"Device","ident":"fu_device_get_possible_plugins","summary":"Gets the list of possible plugin names, typically added ..."},{"type":"method","name":"get_priority","type_name":"Device","ident":"fu_device_get_priority","summary":"Gets the device priority, where higher numbers are better."},{"type":"method","name":"get_priority","type_name":"Plugin","ident":"fu_plugin_get_priority","summary":"Gets the plugin priority, where higher numbers are better."},{"type":"method","name":"get_progress","type_name":"Device","ident":"fu_device_get_progress","summary":"Returns the progress completion."},{"type":"method","name":"get_proxy","type_name":"Device","ident":"fu_device_get_proxy","summary":"Gets any proxy device. A proxy device can be ..."},{"type":"method","name":"get_proxy_guid","type_name":"Device","ident":"fu_device_get_proxy_guid","summary":"Gets the proxy GUID device, which which is set ..."},{"type":"method","name":"get_records","type_name":"IhexFirmware","ident":"fu_ihex_firmware_get_records","summary":"Returns the raw lines from tokenization.  This might ..."},{"type":"method","name":"get_records","type_name":"SrecFirmware","ident":"fu_srec_firmware_get_records","summary":"Returns the raw records from SREC tokenization.  This ..."},{"type":"method","name":"get_release","type_name":"DfuFirmware","ident":"fu_dfu_firmware_get_release","summary":"Gets the device ID, or 0xffff for no restriction."},{"type":"method","name":"get_release_default","type_name":"Device","ident":"fu_device_get_release_default","summary":"Gets the default release for the device, creating one ..."},{"type":"method","name":"get_remove_delay","type_name":"Device","ident":"fu_device_get_remove_delay","summary":"Returns the maximum delay expected when replugging the device ..."},{"type":"method","name":"get_replace_keys","type_name":"Hwids","ident":"fu_hwids_get_replace_keys","summary":"Gets the replacement key for a well known value."},{"type":"method","name":"get_replace_values","type_name":"Hwids","ident":"fu_hwids_get_replace_values","summary":"Gets the replacement values for a HardwareID key or ..."},{"type":"method","name":"get_report","type_name":"HidDevice","ident":"fu_hid_device_get_report","summary":"Calls GetReport on the hardware."},{"type":"method","name":"get_report_metadata","type_name":"Plugin","ident":"fu_plugin_get_report_metadata","summary":"Returns the list of additional metadata to be added ..."},{"type":"method","name":"get_revision","type_name":"UdevDevice","ident":"fu_udev_device_get_revision","summary":"Gets the device revision."},{"type":"method","name":"get_root","type_name":"Device","ident":"fu_device_get_root","summary":"Gets the root parent device. A parent device is ..."},{"type":"method","name":"get_rules","type_name":"Plugin","ident":"fu_plugin_get_rules","summary":"Gets the plugin IDs that should be run after ..."},{"type":"method","name":"get_siblings_with_subsystem","type_name":"UdevDevice","ident":"fu_udev_device_get_siblings_with_subsystem","summary":"Get a list of devices that are siblings of ..."},{"type":"method","name":"get_silo","type_name":"Cabinet","ident":"fu_cabinet_get_silo","summary":"Gets the silo that represents the superset metadata of ..."},{"type":"method","name":"get_size","type_name":"Firmware","ident":"fu_firmware_get_size","summary":"Gets the total size of the image, which is ..."},{"type":"method","name":"get_slot_depth","type_name":"UdevDevice","ident":"fu_udev_device_get_slot_depth","summary":"Determine how far up a chain a given device is"},{"type":"method","name":"get_smbios_data","type_name":"Context","ident":"fu_context_get_smbios_data","summary":"Gets a hardware SMBIOS data."},{"type":"method","name":"get_smbios_integer","type_name":"Context","ident":"fu_context_get_smbios_integer","summary":"Reads an integer value from the SMBIOS string table ..."},{"type":"method","name":"get_smbios_string","type_name":"Context","ident":"fu_context_get_smbios_string","summary":"Gets a hardware SMBIOS string.  The @type and ..."},{"type":"method","name":"get_spec","type_name":"UsbDevice","ident":"fu_usb_device_get_spec","summary":"Gets the string USB revision for the device."},{"type":"method","name":"get_specialized_gtype","type_name":"Device","ident":"fu_device_get_specialized_gtype","summary":"Gets the specialized type of the device"},{"type":"method","name":"get_status","type_name":"Device","ident":"fu_device_get_status","summary":"Returns what the device is currently doing."},{"type":"method","name":"get_string","type_name":"Smbios","ident":"fu_smbios_get_string","summary":"Reads a string from the SMBIOS string table of ..."},{"type":"method","name":"get_subsystem","type_name":"UdevDevice","ident":"fu_udev_device_get_subsystem","summary":"Gets the device subsystem, e.g. `pci`"},{"type":"method","name":"get_subsystem_model","type_name":"UdevDevice","ident":"fu_udev_device_get_subsystem_model","summary":"Gets the device subsystem model code."},{"type":"method","name":"get_subsystem_vendor","type_name":"UdevDevice","ident":"fu_udev_device_get_subsystem_vendor","summary":"Gets the device subsystem vendor code."},{"type":"method","name":"get_sysfs_attr","type_name":"UdevDevice","ident":"fu_udev_device_get_sysfs_attr","summary":"Reads an arbitrary sysfs attribute 'attr' associated with UDEV device"},{"type":"method","name":"get_sysfs_path","type_name":"UdevDevice","ident":"fu_udev_device_get_sysfs_path","summary":"Gets the device sysfs path, e.g. `/sys/devices/pci0000:00/0000:00:14.0`."},{"type":"method","name":"get_udev_subsystems","type_name":"Context","ident":"fu_context_get_udev_subsystems","summary":"Gets the udev subsystems required by all plugins."},{"type":"method","name":"get_value","type_name":"Hwids","ident":"fu_hwids_get_value","summary":"Gets the cached value for one specific key that ..."},{"type":"method","name":"get_vendor","type_name":"UdevDevice","ident":"fu_udev_device_get_vendor","summary":"Gets the device vendor code."},{"type":"method","name":"get_version","type_name":"DfuFirmware","ident":"fu_dfu_firmware_get_version","summary":"Gets the file format version with is 0x0100 by default."},{"type":"method","name":"get_version","type_name":"Firmware","ident":"fu_firmware_get_version","summary":"Gets an optional version that represents the firmware."},{"type":"method","name":"get_version_raw","type_name":"Firmware","ident":"fu_firmware_get_version_raw","summary":"Gets an raw version that represents the firmware. This ..."},{"type":"method","name":"get_vid","type_name":"DfuFirmware","ident":"fu_dfu_firmware_get_vid","summary":"Gets the vendor ID, or 0xffff for no restriction."},{"type":"method","name":"get_vid","type_name":"UsbDevice","ident":"fu_usb_device_get_vid","summary":"Gets the device vendor code."},{"type":"method","name":"has_custom_flag","type_name":"Device","ident":"fu_device_has_custom_flag","summary":"Checks if the custom flag exists for the device ..."},{"type":"method","name":"has_custom_flag","type_name":"Plugin","ident":"fu_plugin_has_custom_flag","summary":"Returns if a per-plugin HwId custom flag exists, typically ..."},{"type":"method","name":"has_flag","type_name":"Firmware","ident":"fu_firmware_has_flag","summary":"Finds if the firmware has a specific firmware flag."},{"type":"method","name":"has_guid","type_name":"Device","ident":"fu_device_has_guid","summary":"Finds out if the device has a specific GUID."},{"type":"method","name":"has_guid","type_name":"Hwids","ident":"fu_hwids_has_guid","summary":"Finds out if a hardware GUID exists."},{"type":"method","name":"has_hwid_guid","type_name":"Context","ident":"fu_context_has_hwid_guid","summary":"Finds out if a hardware GUID exists."},{"type":"method","name":"has_internal_flag","type_name":"Device","ident":"fu_device_has_internal_flag","summary":"Tests for a private flag that stays internal to ..."},{"type":"method","name":"has_parent_guid","type_name":"Device","ident":"fu_device_has_parent_guid","summary":"Searches the list of parent GUIDs for a string match."},{"type":"method","name":"has_rule","type_name":"Plugin","ident":"fu_plugin_has_rule","summary":"Gets the plugin IDs that should be run after ..."},{"type":"method","name":"incorporate","type_name":"Device","ident":"fu_device_incorporate","summary":"Copy all properties from the donor object if they ..."},{"type":"method","name":"incorporate_flag","type_name":"Device","ident":"fu_device_incorporate_flag","summary":"Copy the value of a specific flag from the ..."},{"type":"method","name":"incorporate_from_component","type_name":"Device","ident":"fu_device_incorporate_from_component","summary":"Copy all properties from the donor AppStream component."},{"type":"method","name":"inhibit","type_name":"Device","ident":"fu_device_inhibit","summary":"Prevent the device from being updated, changing it from ..."},{"type":"method","name":"ioctl","type_name":"UdevDevice","ident":"fu_udev_device_ioctl","summary":"Control a device using a low-level request."},{"type":"method","name":"is_encrypted","type_name":"Volume","ident":"fu_volume_is_encrypted","summary":"Checks if the VOLUME is currently encrypted."},{"type":"method","name":"is_internal","type_name":"Volume","ident":"fu_volume_is_internal","summary":"Guesses if the drive is internal to the system"},{"type":"method","name":"is_mounted","type_name":"Volume","ident":"fu_volume_is_mounted","summary":"Checks if the VOLUME is already mounted."},{"type":"method","name":"is_open","type_name":"Plugin","ident":"fu_plugin_is_open","summary":"Determines if the plugin is opened"},{"type":"method","name":"is_open","type_name":"UsbDevice","ident":"fu_usb_device_is_open","summary":"Finds out if a USB device is currently open."},{"type":"method","name":"iterate","type_name":"Archive","ident":"fu_archive_iterate","summary":"Iterates over the archive contents, calling the given function ..."},{"type":"method","name":"load","type_name":"Quirks","ident":"fu_quirks_load","summary":"Loads the various files that define the hardware quirks ..."},{"type":"method","name":"load_hwinfo","type_name":"Context","ident":"fu_context_load_hwinfo","summary":"Loads all hardware information parts of the context."},{"type":"method","name":"load_quirks","type_name":"Context","ident":"fu_context_load_quirks","summary":"Loads all quirks into the context."},{"type":"method","name":"locker","type_name":"Volume","ident":"fu_volume_locker","summary":"Locks the volume, mounting it and unmounting it as ..."},{"type":"method","name":"lookup_by_fn","type_name":"Archive","ident":"fu_archive_lookup_by_fn","summary":"Finds the blob referenced by filename"},{"type":"method","name":"lookup_by_id","type_name":"Backend","ident":"fu_backend_lookup_by_id","summary":"Gets a device previously added by the backend."},{"type":"method","name":"lookup_by_id","type_name":"Quirks","ident":"fu_quirks_lookup_by_id","summary":"Looks up an entry in the hardware database using ..."},{"type":"method","name":"lookup_by_id_iter","type_name":"Quirks","ident":"fu_quirks_lookup_by_id_iter","summary":"Looks up all entries in the hardware database using ..."},{"type":"method","name":"lookup_quirk_by_id","type_name":"Context","ident":"fu_context_lookup_quirk_by_id","summary":"Looks up an entry in the hardware database using ..."},{"type":"method","name":"lookup_quirk_by_id_iter","type_name":"Context","ident":"fu_context_lookup_quirk_by_id_iter","summary":"Looks up all entries in the hardware database using ..."},{"type":"method","name":"mount","type_name":"Volume","ident":"fu_volume_mount","summary":"Mounts the VOLUME ready for use."},{"type":"method","name":"name_compare","type_name":"Plugin","ident":"fu_plugin_name_compare","summary":"Compares two plugins by their names."},{"type":"method","name":"notify_start","type_name":"BluezDevice","ident":"fu_bluez_device_notify_start","summary":"Enables notifications for property changes in a UUID (StartNotify method)."},{"type":"method","name":"notify_stop","type_name":"BluezDevice","ident":"fu_bluez_device_notify_stop","summary":"Disables notifications for property changes in a UUID (StopNotify method)."},{"type":"method","name":"open","type_name":"Device","ident":"fu_device_open","summary":"Opens a device, optionally running a object-specific vfunc.  ..."},{"type":"method","name":"open","type_name":"Plugin","ident":"fu_plugin_open","summary":"Opens the plugin module"},{"type":"method","name":"order_compare","type_name":"Plugin","ident":"fu_plugin_order_compare","summary":"Compares two plugins by their depsolved order."},{"type":"method","name":"parse","type_name":"Cabinet","ident":"fu_cabinet_parse","summary":"Parses the cabinet archive."},{"type":"method","name":"parse","type_name":"Firmware","ident":"fu_firmware_parse","summary":"Parses a firmware, typically breaking the firmware into images."},{"type":"method","name":"parse_file","type_name":"Firmware","ident":"fu_firmware_parse_file","summary":"Parses a firmware file, typically breaking the firmware into images."},{"type":"method","name":"parse_full","type_name":"Firmware","ident":"fu_firmware_parse_full","summary":"Parses a firmware, typically breaking the firmware into images."},{"type":"method","name":"poll","type_name":"Device","ident":"fu_device_poll","summary":"Polls a device, typically querying the hardware for status."},{"type":"method","name":"pread","type_name":"UdevDevice","ident":"fu_udev_device_pread","summary":"Read from a file descriptor at a given offset."},{"type":"method","name":"pread_full","type_name":"UdevDevice","ident":"fu_udev_device_pread_full","summary":"Read a buffer from a file descriptor at a ..."},{"type":"method","name":"prepare","type_name":"Device","ident":"fu_device_prepare","summary":"Prepares a device for update. A different plugin can ..."},{"type":"method","name":"prepare_firmware","type_name":"Device","ident":"fu_device_prepare_firmware","summary":"Prepares the firmware by calling an optional device-specific vfunc ..."},{"type":"method","name":"probe","type_name":"Device","ident":"fu_device_probe","summary":"Probes a device, setting parameters on the object that ..."},{"type":"method","name":"probe_invalidate","type_name":"Device","ident":"fu_device_probe_invalidate","summary":"Normally when calling fu_device_probe() multiple times it is only ..."},{"type":"method","name":"pwrite","type_name":"UdevDevice","ident":"fu_udev_device_pwrite","summary":"Write to a file descriptor at a given offset."},{"type":"method","name":"pwrite_full","type_name":"UdevDevice","ident":"fu_udev_device_pwrite_full","summary":"Write a buffer to a file descriptor at a ..."},{"type":"method","name":"read","type_name":"BluezDevice","ident":"fu_bluez_device_read","summary":"Reads from a UUID on the device."},{"type":"method","name":"read","type_name":"I2cDevice","ident":"fu_i2c_device_read","summary":"Read a single byte from the I\u00b2C device."},{"type":"method","name":"read_byte_array","type_name":"IOChannel","ident":"fu_io_channel_read_byte_array","summary":"Reads bytes from the TTY, that will fail if ..."},{"type":"method","name":"read_bytes","type_name":"IOChannel","ident":"fu_io_channel_read_bytes","summary":"Reads bytes from the TTY, that will fail if ..."},{"type":"method","name":"read_firmware","type_name":"Device","ident":"fu_device_read_firmware","summary":"Reads firmware from the device by calling a plugin-specific ..."},{"type":"method","name":"read_raw","type_name":"IOChannel","ident":"fu_io_channel_read_raw","summary":"Reads bytes from the TTY, that will fail if ..."},{"type":"method","name":"read_string","type_name":"BluezDevice","ident":"fu_bluez_device_read_string","summary":"Reads a string from a UUID on the device."},{"type":"method","name":"reload","type_name":"Device","ident":"fu_device_reload","summary":"Reloads a device that has just gone from bootloader ..."},{"type":"method","name":"remove_all","type_name":"SecurityAttrs","ident":"fu_security_attrs_remove_all","summary":"Removes all the attributes in the object."},{"type":"method","name":"remove_flag","type_name":"Device","ident":"fu_device_remove_flag","summary":"Removes a device flag from the device."},{"type":"method","name":"remove_image","type_name":"Firmware","ident":"fu_firmware_remove_image","summary":"Remove an image from the firmware."},{"type":"method","name":"remove_image_by_id","type_name":"Firmware","ident":"fu_firmware_remove_image_by_id","summary":"Removes the first image from the firmware matching the ID."},{"type":"method","name":"remove_image_by_idx","type_name":"Firmware","ident":"fu_firmware_remove_image_by_idx","summary":"Removes the first image from the firmware matching the index."},{"type":"method","name":"remove_internal_flag","type_name":"Device","ident":"fu_device_remove_internal_flag","summary":"Removes a private flag that stays internal to the ..."},{"type":"method","name":"remove_metadata","type_name":"Device","ident":"fu_device_remove_metadata","summary":"Removes an item of metadata on the device."},{"type":"method","name":"report_metadata_post","type_name":"Device","ident":"fu_device_report_metadata_post","summary":"Collects metadata that would be useful for debugging a ..."},{"type":"method","name":"report_metadata_pre","type_name":"Device","ident":"fu_device_report_metadata_pre","summary":"Collects metadata that would be useful for debugging a ..."},{"type":"method","name":"rescan","type_name":"Device","ident":"fu_device_rescan","summary":"Rescans a device, re-adding GUIDs or flags based on ..."},{"type":"method","name":"retry","type_name":"Device","ident":"fu_device_retry","summary":"Calls a specific function a number of times, optionally ..."},{"type":"method","name":"retry_add_recovery","type_name":"Device","ident":"fu_device_retry_add_recovery","summary":"Sets the optional function to be called when fu_device_retry() ..."},{"type":"method","name":"retry_full","type_name":"Device","ident":"fu_device_retry_full","summary":"Calls a specific function a number of times, optionally ..."},{"type":"method","name":"retry_set_delay","type_name":"Device","ident":"fu_device_retry_set_delay","summary":"Sets the recovery delay between failed retries."},{"type":"method","name":"runner_activate","type_name":"Plugin","ident":"fu_plugin_runner_activate","summary":"Call into the plugin's activate routine"},{"type":"method","name":"runner_add_security_attrs","type_name":"Plugin","ident":"fu_plugin_runner_add_security_attrs","summary":"Runs the `add_security_attrs()` routine for the plugin"},{"type":"method","name":"runner_backend_device_added","type_name":"Plugin","ident":"fu_plugin_runner_backend_device_added","summary":"Call the backend_device_added routine for the plugin"},{"type":"method","name":"runner_backend_device_changed","type_name":"Plugin","ident":"fu_plugin_runner_backend_device_changed","summary":"Call the backend_device_changed routine for the plugin"},{"type":"method","name":"runner_clear_results","type_name":"Plugin","ident":"fu_plugin_runner_clear_results","summary":"Call into the plugin's clear results routine"},{"type":"method","name":"runner_coldplug","type_name":"Plugin","ident":"fu_plugin_runner_coldplug","summary":"Runs the coldplug routine for the plugin"},{"type":"method","name":"runner_coldplug_cleanup","type_name":"Plugin","ident":"fu_plugin_runner_coldplug_cleanup","summary":"Runs the coldplug_cleanup routine for the plugin"},{"type":"method","name":"runner_coldplug_prepare","type_name":"Plugin","ident":"fu_plugin_runner_coldplug_prepare","summary":"Runs the coldplug_prepare routine for the plugin"},{"type":"method","name":"runner_composite_cleanup","type_name":"Plugin","ident":"fu_plugin_runner_composite_cleanup","summary":"Runs the composite_cleanup routine for the plugin"},{"type":"method","name":"runner_composite_prepare","type_name":"Plugin","ident":"fu_plugin_runner_composite_prepare","summary":"Runs the composite_prepare routine for the plugin"},{"type":"method","name":"runner_device_added","type_name":"Plugin","ident":"fu_plugin_runner_device_added","summary":"Call the device_added routine for the plugin"},{"type":"method","name":"runner_device_created","type_name":"Plugin","ident":"fu_plugin_runner_device_created","summary":"Call the device_created routine for the plugin"},{"type":"method","name":"runner_device_register","type_name":"Plugin","ident":"fu_plugin_runner_device_register","summary":"Call the device_registered routine for the plugin"},{"type":"method","name":"runner_device_removed","type_name":"Plugin","ident":"fu_plugin_runner_device_removed","summary":"Call the device_removed routine for the plugin"},{"type":"method","name":"runner_get_results","type_name":"Plugin","ident":"fu_plugin_runner_get_results","summary":"Call into the plugin's get results routine"},{"type":"method","name":"runner_startup","type_name":"Plugin","ident":"fu_plugin_runner_startup","summary":"Runs the startup routine for the plugin"},{"type":"method","name":"runner_unlock","type_name":"Plugin","ident":"fu_plugin_runner_unlock","summary":"Call into the plugin's unlock routine"},{"type":"method","name":"runner_update","type_name":"Plugin","ident":"fu_plugin_runner_update","summary":"Call into the plugin's update routine"},{"type":"method","name":"runner_update_attach","type_name":"Plugin","ident":"fu_plugin_runner_update_attach","summary":"Runs the update_attach routine for the plugin"},{"type":"method","name":"runner_update_cleanup","type_name":"Plugin","ident":"fu_plugin_runner_update_cleanup","summary":"Runs the update_cleanup routine for the plugin"},{"type":"method","name":"runner_update_detach","type_name":"Plugin","ident":"fu_plugin_runner_update_detach","summary":"Runs the update_detach routine for the plugin"},{"type":"method","name":"runner_update_prepare","type_name":"Plugin","ident":"fu_plugin_runner_update_prepare","summary":"Runs the update_prepare routine for the plugin"},{"type":"method","name":"runner_update_reload","type_name":"Plugin","ident":"fu_plugin_runner_update_reload","summary":"Runs reload routine for a device"},{"type":"method","name":"runner_verify","type_name":"Plugin","ident":"fu_plugin_runner_verify","summary":"Call into the plugin's verify routine"},{"type":"method","name":"security_changed","type_name":"Context","ident":"fu_context_security_changed","summary":"Informs the daemon that the HSI state may have changed."},{"type":"method","name":"set_addr","type_name":"Firmware","ident":"fu_firmware_set_addr","summary":"Sets the base address of the image."},{"type":"method","name":"set_address","type_name":"Chunk","ident":"fu_chunk_set_address","summary":"Sets the address of the chunk."},{"type":"method","name":"set_alignment","type_name":"Firmware","ident":"fu_firmware_set_alignment","summary":"Sets the alignment of the firmware.  This allows ..."},{"type":"method","name":"set_alternate","type_name":"Device","ident":"fu_device_set_alternate","summary":"Sets any alternate device. An alternate device may be ..."},{"type":"method","name":"set_alternate_id","type_name":"Device","ident":"fu_device_set_alternate_id","summary":"Sets any alternate device ID. An alternate device may ..."},{"type":"method","name":"set_backend_id","type_name":"Device","ident":"fu_device_set_backend_id","summary":"Sets the backend ID on the device. This is ..."},{"type":"method","name":"set_battery_level","type_name":"Context","ident":"fu_context_set_battery_level","summary":"Sets the system battery level in percent."},{"type":"method","name":"set_battery_level","type_name":"Device","ident":"fu_device_set_battery_level","summary":"Sets the battery level, or %FU_BATTERY_VALUE_INVALID.  Setting this ..."},{"type":"method","name":"set_battery_state","type_name":"Context","ident":"fu_context_set_battery_state","summary":"Sets if the system is on battery power, e.g. ..."},{"type":"method","name":"set_battery_threshold","type_name":"Context","ident":"fu_context_set_battery_threshold","summary":"Sets the system battery threshold in percent."},{"type":"method","name":"set_battery_threshold","type_name":"Device","ident":"fu_device_set_battery_threshold","summary":"Sets the battery level, or %FU_BATTERY_VALUE_INVALID for the default. ..."},{"type":"method","name":"set_build_hash","type_name":"Plugin","ident":"fu_plugin_set_build_hash","summary":"Sets the plugin build hash, typically a SHA256 checksum. ..."},{"type":"method","name":"set_bytes","type_name":"Chunk","ident":"fu_chunk_set_bytes","summary":"Sets the data to use for the chunk."},{"type":"method","name":"set_bytes","type_name":"Firmware","ident":"fu_firmware_set_bytes","summary":"Sets the contents of the image if not created ..."},{"type":"method","name":"set_compile_versions","type_name":"Context","ident":"fu_context_set_compile_versions","summary":"Sets the compile time versions for a plugin."},{"type":"method","name":"set_context","type_name":"Device","ident":"fu_device_set_context","summary":"Sets the optional context which may be useful to ..."},{"type":"method","name":"set_custom_flags","type_name":"Device","ident":"fu_device_set_custom_flags","summary":"Sets the custom flags from the quirk system that ..."},{"type":"method","name":"set_dev","type_name":"UsbDevice","ident":"fu_usb_device_set_dev","summary":"Sets the #GUsbDevice to use."},{"type":"method","name":"set_enabled","type_name":"Backend","ident":"fu_backend_set_enabled","summary":"Sets the backend enabled state."},{"type":"method","name":"set_equivalent_id","type_name":"Device","ident":"fu_device_set_equivalent_id","summary":"Sets any equivalent ID for a device"},{"type":"method","name":"set_fd","type_name":"UdevDevice","ident":"fu_udev_device_set_fd","summary":"Replace the file descriptor to use when the device ..."},{"type":"method","name":"set_filename","type_name":"Firmware","ident":"fu_firmware_set_filename","summary":"Sets an optional filename that represents the image source ..."},{"type":"method","name":"set_firmware_size","type_name":"Device","ident":"fu_device_set_firmware_size","summary":"Sets the exact allowed size of the firmware blob."},{"type":"method","name":"set_firmware_size_max","type_name":"Device","ident":"fu_device_set_firmware_size_max","summary":"Sets the maximum allowed size of the firmware blob."},{"type":"method","name":"set_firmware_size_min","type_name":"Device","ident":"fu_device_set_firmware_size_min","summary":"Sets the minimum allowed size of the firmware blob."},{"type":"method","name":"set_flags","type_name":"UdevDevice","ident":"fu_udev_device_set_flags","summary":"Sets the parameters to use when opening the device. ..."},{"type":"method","name":"set_id","type_name":"Device","ident":"fu_device_set_id","summary":"Sets the ID on the device. The ID should ..."},{"type":"method","name":"set_id","type_name":"Firmware","ident":"fu_firmware_set_id","summary":"No description available."},{"type":"method","name":"set_idx","type_name":"Chunk","ident":"fu_chunk_set_idx","summary":"Sets the index of the chunk."},{"type":"method","name":"set_idx","type_name":"Firmware","ident":"fu_firmware_set_idx","summary":"Sets the index of the image which is used ..."},{"type":"method","name":"set_interface","type_name":"HidDevice","ident":"fu_hid_device_set_interface","summary":"Sets the HID USB interface number.  In most ..."},{"type":"method","name":"set_jcat_context","type_name":"Cabinet","ident":"fu_cabinet_set_jcat_context","summary":"Sets the Jcat context, which is used for setting ..."},{"type":"method","name":"set_logical_id","type_name":"Device","ident":"fu_device_set_logical_id","summary":"Sets the logical ID on the device. This is ..."},{"type":"method","name":"set_logical_id","type_name":"UdevDevice","ident":"fu_udev_device_set_logical_id","summary":"Sets the logical ID from the device subsystem. Plugins ..."},{"type":"method","name":"set_metadata","type_name":"Device","ident":"fu_device_set_metadata","summary":"Sets an item of metadata on the device."},{"type":"method","name":"set_metadata_boolean","type_name":"Device","ident":"fu_device_set_metadata_boolean","summary":"Sets an item of metadata on the device. When ..."},{"type":"method","name":"set_metadata_integer","type_name":"Device","ident":"fu_device_set_metadata_integer","summary":"Sets an item of metadata on the device. The ..."},{"type":"method","name":"set_name","type_name":"Device","ident":"fu_device_set_name","summary":"Sets the name on the device. Any invalid parts ..."},{"type":"method","name":"set_name","type_name":"Plugin","ident":"fu_plugin_set_name","summary":"Sets the plugin name."},{"type":"method","name":"set_offset","type_name":"Firmware","ident":"fu_firmware_set_offset","summary":"Sets the base offset of the image."},{"type":"method","name":"set_order","type_name":"Device","ident":"fu_device_set_order","summary":"Sets the device order, where higher numbers are installed ..."},{"type":"method","name":"set_order","type_name":"Plugin","ident":"fu_plugin_set_order","summary":"Sets the plugin order, where higher numbers are run ..."},{"type":"method","name":"set_padding_value","type_name":"IhexFirmware","ident":"fu_ihex_firmware_set_padding_value","summary":"Set the padding value to fill incomplete address ranges. ..."},{"type":"method","name":"set_page","type_name":"Chunk","ident":"fu_chunk_set_page","summary":"Sets the page of the chunk."},{"type":"method","name":"set_parent","type_name":"Device","ident":"fu_device_set_parent","summary":"Sets any parent device. An parent device is logically ..."},{"type":"method","name":"set_physical_id","type_name":"Device","ident":"fu_device_set_physical_id","summary":"Sets the physical ID on the device which represents ..."},{"type":"method","name":"set_physical_id","type_name":"UdevDevice","ident":"fu_udev_device_set_physical_id","summary":"Sets the physical ID from the device subsystem. Plugins ..."},{"type":"method","name":"set_pid","type_name":"DfuFirmware","ident":"fu_dfu_firmware_set_pid","summary":"Sets the product ID."},{"type":"method","name":"set_poll_interval","type_name":"Device","ident":"fu_device_set_poll_interval","summary":"Polls the hardware every interval period. If the subclassed ..."},{"type":"method","name":"set_priority","type_name":"Device","ident":"fu_device_set_priority","summary":"Sets the device priority, where higher numbers are better."},{"type":"method","name":"set_priority","type_name":"Plugin","ident":"fu_plugin_set_priority","summary":"Sets the plugin priority, where higher numbers are better."},{"type":"method","name":"set_progress","type_name":"Device","ident":"fu_device_set_progress","summary":"Sets the progress completion."},{"type":"method","name":"set_progress_full","type_name":"Device","ident":"fu_device_set_progress_full","summary":"Sets the progress completion using the raw progress values."},{"type":"method","name":"set_proxy","type_name":"Device","ident":"fu_device_set_proxy","summary":"Sets any proxy device. A proxy device can be ..."},{"type":"method","name":"set_proxy_guid","type_name":"Device","ident":"fu_device_set_proxy_guid","summary":"Sets the GUID of the proxy device. The proxy ..."},{"type":"method","name":"set_readonly","type_name":"UdevDevice","ident":"fu_udev_device_set_readonly","summary":"Sets the open mode to `O_RDONLY` use when opening ..."},{"type":"method","name":"set_release","type_name":"DfuFirmware","ident":"fu_dfu_firmware_set_release","summary":"Sets the release for the dfu firmware."},{"type":"method","name":"set_remove_delay","type_name":"Device","ident":"fu_device_set_remove_delay","summary":"Sets the amount of time a device is allowed ..."},{"type":"method","name":"set_report","type_name":"HidDevice","ident":"fu_hid_device_set_report","summary":"Calls SetReport on the hardware."},{"type":"method","name":"set_runtime_versions","type_name":"Context","ident":"fu_context_set_runtime_versions","summary":"Sets the runtime versions for a plugin."},{"type":"method","name":"set_size","type_name":"Firmware","ident":"fu_firmware_set_size","summary":"Sets the total size of the image, which should ..."},{"type":"method","name":"set_size_max","type_name":"Cabinet","ident":"fu_cabinet_set_size_max","summary":"Sets the maximum size of the decompressed cabinet file."},{"type":"method","name":"set_status","type_name":"Device","ident":"fu_device_set_status","summary":"Sets what the device is currently doing."},{"type":"method","name":"set_version","type_name":"Device","ident":"fu_device_set_version","summary":"Sets the device version, sanitizing the string if required."},{"type":"method","name":"set_version","type_name":"DfuFirmware","ident":"fu_dfu_firmware_set_version","summary":"Sets the file format version."},{"type":"method","name":"set_version","type_name":"Firmware","ident":"fu_firmware_set_version","summary":"Sets an optional version that represents the firmware."},{"type":"method","name":"set_version_bootloader","type_name":"Device","ident":"fu_device_set_version_bootloader","summary":"Sets the device bootloader version, sanitizing the string if required."},{"type":"method","name":"set_version_format","type_name":"Device","ident":"fu_device_set_version_format","summary":"Sets the device version format."},{"type":"method","name":"set_version_lowest","type_name":"Device","ident":"fu_device_set_version_lowest","summary":"Sets the device lowest version, sanitizing the string if required."},{"type":"method","name":"set_version_raw","type_name":"Firmware","ident":"fu_firmware_set_version_raw","summary":"Sets an raw version that represents the firmware.  ..."},{"type":"method","name":"set_vid","type_name":"DfuFirmware","ident":"fu_dfu_firmware_set_vid","summary":"Sets the vendor ID."},{"type":"method","name":"setup","type_name":"Backend","ident":"fu_backend_setup","summary":"Sets up the backend ready for use, which typically ..."},{"type":"method","name":"setup","type_name":"Device","ident":"fu_device_setup","summary":"Sets up a device, setting parameters on the object ..."},{"type":"method","name":"setup","type_name":"Hwids","ident":"fu_hwids_setup","summary":"Reads all the SMBIOS values from the hardware."},{"type":"method","name":"setup","type_name":"Smbios","ident":"fu_smbios_setup","summary":"Reads all the SMBIOS values from the hardware."},{"type":"method","name":"setup_from_file","type_name":"Smbios","ident":"fu_smbios_setup_from_file","summary":"Reads all the SMBIOS values from a DMI blob."},{"type":"method","name":"setup_from_path","type_name":"Smbios","ident":"fu_smbios_setup_from_path","summary":"Reads all the SMBIOS values from a specific path."},{"type":"method","name":"shutdown","type_name":"IOChannel","ident":"fu_io_channel_shutdown","summary":"Closes the file descriptor for the device."},{"type":"method","name":"sign","type_name":"Cabinet","ident":"fu_cabinet_sign","summary":"Sign the cabinet archive using JCat."},{"type":"method","name":"sleep_with_progress","type_name":"Device","ident":"fu_device_sleep_with_progress","summary":"Sleeps, setting the device progress from 0..100% as time ..."},{"type":"method","name":"to_string","type_name":"Chunk","ident":"fu_chunk_to_string","summary":"Converts the chunked packet to a string representation."},{"type":"method","name":"to_string","type_name":"Device","ident":"fu_device_to_string","summary":"This allows us to easily print the device, the ..."},{"type":"method","name":"to_string","type_name":"Firmware","ident":"fu_firmware_to_string","summary":"This allows us to easily print the object."},{"type":"method","name":"to_string","type_name":"Smbios","ident":"fu_smbios_to_string","summary":"Dumps the parsed SMBIOS data to a string."},{"type":"method","name":"to_variant","type_name":"SecurityAttrs","ident":"fu_security_attrs_to_variant","summary":"Serializes the #FwupdSecurityAttr objects."},{"type":"method","name":"tokenize","type_name":"Firmware","ident":"fu_firmware_tokenize","summary":"Tokenizes a firmware, typically breaking the firmware into records. ..."},{"type":"method","name":"unbind_driver","type_name":"Device","ident":"fu_device_unbind_driver","summary":"Unbinds the driver from the device, which normally means ..."},{"type":"method","name":"uninhibit","type_name":"Device","ident":"fu_device_uninhibit","summary":"Allow the device from being updated if there are ..."},{"type":"method","name":"unix_get_fd","type_name":"IOChannel","ident":"fu_io_channel_unix_get_fd","summary":"Gets the file descriptor for the device."},{"type":"method","name":"unmount","type_name":"Volume","ident":"fu_volume_unmount","summary":"Unmounts the volume after use."},{"type":"method","name":"write","type_name":"BluezDevice","ident":"fu_bluez_device_write","summary":"Writes to a UUID on the device."},{"type":"method","name":"write","type_name":"Firmware","ident":"fu_firmware_write","summary":"Writes a firmware, typically packing the images into a ..."},{"type":"method","name":"write","type_name":"I2cDevice","ident":"fu_i2c_device_write","summary":"Write a single byte to the I\u00b2C device."},{"type":"method","name":"write_byte_array","type_name":"IOChannel","ident":"fu_io_channel_write_byte_array","summary":"Writes bytes to the TTY, that will fail if ..."},{"type":"method","name":"write_bytes","type_name":"IOChannel","ident":"fu_io_channel_write_bytes","summary":"Writes bytes to the TTY, that will fail if ..."},{"type":"method","name":"write_chunk","type_name":"Firmware","ident":"fu_firmware_write_chunk","summary":"Gets a block of data from the image. If ..."},{"type":"method","name":"write_file","type_name":"Firmware","ident":"fu_firmware_write_file","summary":"Writes a firmware, typically packing the images into a ..."},{"type":"method","name":"write_firmware","type_name":"Device","ident":"fu_device_write_firmware","summary":"Writes firmware to the device by calling a plugin-specific vfunc."},{"type":"method","name":"write_raw","type_name":"IOChannel","ident":"fu_io_channel_write_raw","summary":"Writes bytes to the TTY, that will fail if ..."},{"type":"method","name":"write_sysfs","type_name":"UdevDevice","ident":"fu_udev_device_write_sysfs","summary":"Writes data into a sysfs attribute"},{"type":"property","name":"backend-id","type_name":"Device","summary":"No description available."},{"type":"property","name":"battery-level","type_name":"Context","summary":"No description available."},{"type":"property","name":"battery-level","type_name":"Device","summary":"No description available."},{"type":"property","name":"battery-state","type_name":"Context","summary":"No description available."},{"type":"property","name":"battery-threshold","type_name":"Context","summary":"No description available."},{"type":"property","name":"battery-threshold","type_name":"Device","summary":"No description available."},{"type":"property","name":"bus-number","type_name":"I2cDevice","summary":"No description available."},{"type":"property","name":"context","type_name":"Backend","summary":"No description available."},{"type":"property","name":"context","type_name":"Device","summary":"No description available."},{"type":"property","name":"device-file","type_name":"UdevDevice","summary":"No description available."},{"type":"property","name":"driver","type_name":"UdevDevice","summary":"No description available."},{"type":"property","name":"interface","type_name":"HidDevice","summary":"No description available."},{"type":"property","name":"logical-id","type_name":"Device","summary":"No description available."},{"type":"property","name":"mount-path","type_name":"Volume","summary":"No description available."},{"type":"property","name":"name","type_name":"Backend","summary":"No description available."},{"type":"property","name":"object-manager","type_name":"BluezDevice","summary":"No description available."},{"type":"property","name":"parent","type_name":"Device","summary":"No description available."},{"type":"property","name":"physical-id","type_name":"Device","summary":"No description available."},{"type":"property","name":"progress","type_name":"Device","summary":"No description available."},{"type":"property","name":"proxy","type_name":"BluezDevice","summary":"No description available."},{"type":"property","name":"proxy","type_name":"Device","summary":"No description available."},{"type":"property","name":"proxy-block","type_name":"Volume","summary":"No description available."},{"type":"property","name":"proxy-filesystem","type_name":"Volume","summary":"No description available."},{"type":"property","name":"subsystem","type_name":"UdevDevice","summary":"No description available."},{"type":"property","name":"udev-device","type_name":"UdevDevice","summary":"No description available."},{"type":"property","name":"usb-device","type_name":"UsbDevice","summary":"No description available."},{"type":"record","name":"PluginData","ctype":"FuPluginData","summary":"The plugin-allocated private data."},{"type":"signal","name":"changed","type_name":"BluezDevice","summary":"No description available."},{"type":"signal","name":"changed","type_name":"UdevDevice","summary":"No description available."},{"type":"signal","name":"check-supported","type_name":"Plugin","summary":"No description available."},{"type":"signal","name":"device-added","type_name":"Backend","summary":"No description available."},{"type":"signal","name":"device-added","type_name":"Plugin","summary":"No description available."},{"type":"signal","name":"device-changed","type_name":"Backend","summary":"No description available."},{"type":"signal","name":"device-register","type_name":"Plugin","summary":"No description available."},{"type":"signal","name":"device-removed","type_name":"Backend","summary":"No description available."},{"type":"signal","name":"device-removed","type_name":"Plugin","summary":"No description available."},{"type":"signal","name":"rules-changed","type_name":"Plugin","summary":"No description available."},{"type":"signal","name":"security-changed","type_name":"Context","summary":"No description available."},{"type":"type_func","name":"array_mutable_new","type_name":"Chunk","ident":"fu_chunk_array_mutable_new","summary":"Chunks a mutable blob of memory into packets, ensuring ..."},{"type":"type_func","name":"array_new","type_name":"Chunk","ident":"fu_chunk_array_new","summary":"Chunks a linear blob of memory into packets, ensuring ..."},{"type":"type_func","name":"array_new_from_bytes","type_name":"Chunk","ident":"fu_chunk_array_new_from_bytes","summary":"Chunks a linear blob of memory into packets, ensuring ..."},{"type":"type_func","name":"array_to_string","type_name":"Chunk","ident":"fu_chunk_array_to_string","summary":"Converts all the chunked packets in an array to ..."},{"type":"type_func","name":"flag_from_string","type_name":"Firmware","ident":"fu_firmware_flag_from_string","summary":"Converts a string to a #FuFirmwareFlags."},{"type":"type_func","name":"flag_to_string","type_name":"Firmware","ident":"fu_firmware_flag_to_string","summary":"Converts a #FuFirmwareFlags to a string."},{"type":"type_func","name":"guess_name_from_fn","type_name":"Plugin","ident":"fu_plugin_guess_name_from_fn","summary":"Tries to guess the name of the plugin from ..."},{"type":"type_func","name":"internal_flag_from_string","type_name":"Device","ident":"fu_device_internal_flag_from_string","summary":"Converts a string to an internal device flag."},{"type":"type_func","name":"internal_flag_to_string","type_name":"Device","ident":"fu_device_internal_flag_to_string","summary":"Converts an internal device flag to a string."},{"type":"type_func","name":"kind_to_string","type_name":"EfiSignature","ident":"fu_efi_signature_kind_to_string","summary":"Converts the signature kind to a text representation."},{"type":"type_func","name":"strparse_uint16_safe","type_name":"Firmware","ident":"fu_firmware_strparse_uint16_safe","summary":"Parses a base 16 number from a string of ..."},{"type":"type_func","name":"strparse_uint24_safe","type_name":"Firmware","ident":"fu_firmware_strparse_uint24_safe","summary":"Parses a base 16 number from a string of ..."},{"type":"type_func","name":"strparse_uint32_safe","type_name":"Firmware","ident":"fu_firmware_strparse_uint32_safe","summary":"Parses a base 16 number from a string of ..."},{"type":"type_func","name":"strparse_uint4_safe","type_name":"Firmware","ident":"fu_firmware_strparse_uint4_safe","summary":"Parses a base 16 number from a string of ..."},{"type":"type_func","name":"strparse_uint8_safe","type_name":"Firmware","ident":"fu_firmware_strparse_uint8_safe","summary":"Parses a base 16 number from a string of ..."},{"type":"vfunc","name":"build","type_name":"Firmware","summary":"Builds a firmware from an XML manifest. The manifest ..."},{"type":"vfunc","name":"check_supported","type_name":"Plugin","summary":"No description available."},{"type":"vfunc","name":"coldplug","type_name":"Backend","summary":"Adds devices using the subclassed backend. If fu_backend_setup() has ..."},{"type":"vfunc","name":"device_added","type_name":"Plugin","summary":"No description available."},{"type":"vfunc","name":"device_register","type_name":"Plugin","summary":"Registers the device with other plugins so they can ..."},{"type":"vfunc","name":"device_removed","type_name":"Plugin","summary":"No description available."},{"type":"vfunc","name":"export","type_name":"Firmware","summary":"This allows us to build an XML object for ..."},{"type":"vfunc","name":"get_checksum","type_name":"Firmware","summary":"Returns a checksum of the payload data."},{"type":"vfunc","name":"parse","type_name":"Firmware","summary":"No description available."},{"type":"vfunc","name":"percentage_changed","type_name":"Plugin","summary":"No description available."},{"type":"vfunc","name":"rules_changed","type_name":"Plugin","summary":"No description available."},{"type":"vfunc","name":"security_changed","type_name":"Context","summary":"Informs the daemon that the HSI state may have changed."},{"type":"vfunc","name":"setup","type_name":"Backend","summary":"Sets up the backend ready for use, which typically ..."},{"type":"vfunc","name":"status_changed","type_name":"Plugin","summary":"No description available."},{"type":"vfunc","name":"tokenize","type_name":"Firmware","summary":"Tokenizes a firmware, typically breaking the firmware into records. ..."},{"type":"vfunc","name":"write","type_name":"Firmware","summary":"Writes a firmware, typically packing the images into a ..."}],"terms":{"":[23,42,51,67,83,84,86,96,97,115,119,125,126,131,132,136,140,153,155,159,163,166,173,174,177,179,180,188,189,190,192,195,196,203,210,211,218,227,228,241,242,243,244,245,255,257,261,263,269,270,271,275,276,289,300,308,310,312,321,325,327,329,334,337,339,348,353,355,356,368,370,371,372,373,378,379,434,439,449,453,456,457,462,464,465,491,501,672,693,696,711,713,715,716,726,738,739,742,744,746,747,762,763,764],"\"0x\"":[730],"\"above\"":[153,163,210],"\"below\"":[141],"\"cascade\"":[119],"\"chids\"":[337],"\"deepest\"":[493],"\"device-firmware\"":[530],"\"obvious":[711,713,715,716,742,744,746,747,762,763],"\"system-firmware\"":[530],"'attr'":[482],"'best'":[689],"*":[439],"**unless**":[132],"*build-time*":[764],"*connection*":[203],"*might*":[126],"*with*":[739],"-":[739],".d":[439],"/etc":[659],"/etc/fwupd":[659],"/proc":[659],"/run/lock":[659],"/sys/bus/platform/driv":[659],"/sys/class/tpm":[659],"/sys/firmwar":[659],"/sys/kernel/secur":[659],"/system-upd":[659],"/usr/lib/[triplet]/fwupd-plugins-3":[659],"/usr/libexec/fwupd/efi":[659],"/usr/share/fwupd":[659],"/usr/share/polkit-1/actions/":[659],"/var":[659],"/var/cache/fwupd":[659],"/var/lib/fwupd":[659],"0":[316,317,318,319,320,535,767],"0..100%":[225],"0x":[739],"0x0100":[249],"0x10203":[739],"0xf":[319],"0xff":[320,356,677,679],"0xffff":[247,248,250,316],"0xffffff":[317],"0xffffffff":[318],"1":[319,535,536,554,693],"1.0":[535],"1.1":[536],"10":[8,730,739],"10,000m":[218],"128":[555],"128K":[556],"128M":[557],"16":[316,317,318,319,320,558,658,666,730,735,739],"16K":[559],"16M":[560],"1G":[561],"1K":[562],"1M":[563],"1gb":[763],"2":[275,300,320,564,664,673,693],"20150915":[739],"24":[658],"256":[565],"256K":[566],"256M":[567],"2G":[568],"2K":[569],"2M":[570],"3":[693],"3000m":[218],"32":[531,571,658,667,736],"32K":[572],"32M":[573],"4":[316,574,693],"4G":[575],"4K":[576],"4M":[577],"5":[6,693],"512":[578],"512K":[579],"512M":[580],"6":[317],"64":[581,668,737],"64K":[582],"64M":[583],"66051":[739],"8":[318,584,669],"8K":[585],"8M":[586],"::chang":[467],"ACCESS":[544,545,548,549],"ALIGNMENT":[554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586],"APPEND":[543],"ASCII":[587],"ATMEL":[534],"ATTR":[543,544,545,546,547,548,549],"AUTHENTICATED":[544,549],"AVR":[534],"BASEBOARD":[599,600,645],"BASED":[549],"BATTERY":[526,619],"BDP":[650],"BIOS":[601,602,603,604,646],"BOOTSERVICE":[545],"BRANCH":[620],"BUILD":[527],"CAPSULE":[529,553],"CHASSIS":[647],"CHECKSUM":[592],"CHILDREN":[621],"COUNTERPART":[622],"DATA":[587,612],"DATABASE":[552],"DEBUG":[588],"DEDUPE":[590,591],"DELAY":[532,533,637],"DEVICE":[528,529,530,531,532,533],"DFU":[534,535,536,537,538],"DFUSE":[537],"DURATION":[630],"EFI":[539,540,541,542,550],"EFIVAR":[543,544,545,546,547,548,549,550,551,552,553],"ENCLOSURE":[605],"ENUMERATE":[532],"EOF":[613],"ERROR":[546],"ESP":[651],"EXPORT":[587,588,589],"EXTENDED":[614,615],"FAMILY":[606],"FIRMARE":[534,535,536,537,538],"FIRMWARE":[554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,607,608,612,613,614,615,616,617,618,623,624,625],"FLAG":[587,588,589,590,591,592,593,594],"FLAGS":[529,626],"FMAP":[598],"FORMAT":[644],"FW":[531],"FWUPDATE":[551],"GLOBAL":[550],"GTYPE":[627],"GUID":[539,540,541,542,550,551,552,553,622,628,632,636],"HARDWARE":[546],"HAS":[592,593],"HASH":[527],"HEADER":[595],"HWIDS":[599,600,601,602,603,604,605,606,607,608,609,610,611],"ICON":[629],"ID":[590,595,596,597,642],"IDX":[591],"IHEX":[612,613,614,615,616,617,618],"IMAGE":[639],"INCLUDE":[588],"INSTALL":[630],"INVALID":[526],"IS":[528],"KEY":[599,600,601,602,603,604,605,606,607,608,609,610,611],"KIND":[530,605,650,651],"LAST":[648],"LEGACY":[541],"LINEAR":[614,617],"MAJOR":[601,607],"MANUFACTURER":[599,609],"MAX":[624],"MESSAGE":[640],"METADATA":[528,529,530,531],"MICROSOFT":[539],"MIN":[625],"MINOR":[602,608],"MODE":[528],"NAME":[610,631],"NON":[547],"NONE":[589,594],"OVMF":[540,541],"PARENT":[632],"PAYLOAD":[596],"PID":[593],"PLUGIN":[633],"PRIORITY":[634],"PRODUCT":[600,610,611],"PROTOCOL":[635],"PROXY":[636],"QUIRKS":[619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644],"RE":[532],"RECORD":[546,612,613,614,615,616,617,618],"RELEASE":[601,602,607,608],"REMOVE":[532,533,637],"REPLUG":[533],"RUNTIME":[548],"SAFE":[528],"SECURITY":[552],"SEGMENT":[615,618],"SIGNATURE":[539,540,541,542,597,616],"SIZE":[623,624,625],"SKU":[611],"SMBIOS":[645,646,647,648,649],"START":[617,618],"STRLEN":[598],"STRUCTURE":[645,646,647,648,649],"SUMMARY":[638],"SYSTEM":[649],"TBT":[528],"THRESHOLD":[619],"TIME":[549],"TYPE":[612,613,614,615,616,617,618,645,646,647,648,649],"UEFI":[529,530,531],"UNKNOWN":[538],"UPDATE":[639,640],"USER":[533],"UX":[553],"VALUE":[526],"VENDOR":[603,641,642],"VERSION":[531,534,535,536,537,538,604,643,644],"VID":[593],"VOLATILE":[547],"VOLUME":[650,651],"WRITE":[543,544,549],"ZERO":[542],"[0-9]":[739],"[class@fudevice]":[329,368,439,501],"[class@fudevicelocker]":[115],"[class@fudfufirmware]":[263],"[class@fuihexfirmware]":[263],"[ctor@devicelocker.new_full]":[15],"_not_":[520],"`->open":[174],"`->poll":[212],"`->probe`":[174],"`->setup":[174],"`.":[739],"`/sys/devices/pci0000:00/0000:00:14.0`":[483],"`0x[a-f,0-9]":[739],"`1.2.3":[739],"`<firmware>":[270,271,321],"`<firmware>/<data>":[270,271,321],"`<version_raw>0x123456</version_raw>":[291],"`[0-9]":[739],"`add_security_attr":[399],"`computerhardwareids.exe`":[337],"`firmware.builder.xml":[291],"`fufirmware->build":[270,271,321],"`fwupdmgr":[92,93],"`fwupdtool":[270,271,321],"`org.usb.dfu`":[635],"`pci_slot_name=0000:3e:00.0`":[211],"abl":[126,532],"abort":[21],"absolut":[717],"abstract":[512],"access":[700],"account":[532,533,733],"accuraci":[738],"acpi":[659],"acpi_tables":[659],"action":[131,159,174,188,190,216,659],"activ":[6,117,398],"actual":[131,132,174,179,198,206,227,378],"ad":[25,29,32,34,37,41,84,119,125,132,136,154,156,203,378,386,390,392,400,408,428,433,441,449,766,767],"add":[6,11,24,40,53,82,83,84,85,86,118,119,120,121,122,123,124,125,126,127,189,267,268,269,331,339,370,371,372,373,375,378,399,441,447,660,665,666,667,668,669,762,765,766,767,768,769,770,771,772,824],"add_version":[11],"addit":[270,271,321,372,390,439],"addition":[270,271,321],"addr":[274,299],"address":[7,61,64,71,274,299,356],"advanc":[225],"advanced_tca":[662],"affect":[198],"after":[125,130,132,152,159,197,209,216,339,372,373,388,391,393,424,522,640,660],"against":[694],"aid":[372],"align":[275,300,664,673,674],"all":[20,29,56,67,79,91,92,93,98,100,101,103,123,132,170,172,174,177,188,190,287,331,341,342,347,386,422,444,449,450,451,458,459,460,691,705,759],"all_in_one":[662],"alloc":[374,385,763],"allow":[8,153,195,196,200,201,202,210,218,226,228,244,272,273,275,300,309,322,439,762],"allow_trunc":[8],"alreadi":[24,40,122,135,170,173,228,269,378,490,519,520,674],"also":[23,42,51,67,115,125,138,153,210,241,242,243,245,255,257,261,263,327,329,337,348,353,368,439,449,453,462,465,501,762],"altern":[136,137,192,193],"alwai":[672,673],"amd":[656],"amount":[218],"an":[3,11,19,20,23,79,96,102,118,122,123,125,130,131,134,136,137,149,150,151,153,159,173,177,178,184,189,192,193,205,206,207,210,216,224,230,231,241,257,262,264,269,270,271,272,273,279,290,291,296,302,307,308,312,321,322,348,375,376,377,378,439,443,456,482,663,680,690,700,726,730,754,762,765,766,767],"ancestor":[475],"ani":[4,21,118,125,136,137,141,144,153,154,159,180,188,190,192,193,199,203,208,210,216,242,243,276,372,449,474,691,700,709,720,738],"anoth":[159,216,339,660,678],"anyth":[227,439,739],"app":[3,659],"appear":[726],"append":[447,448,665,666,667,668,669,721,722,723,724,727],"applic":[3,128,133,181],"appstream":[172,439,680],"ar":[739],"arbitrari":[482],"archiv":[4,13,19,20,21,51,54,55,56,57,58,60,653,655,680,690],"archiveiteratefunc":[13],"argument":[119,121,122],"arrai":[76,77,78,79,360,365,447,664,665,666,667,668,669,670,671,677,689,726],"ascii":[7,94,345],"ask":[378,380],"assign":[136,142,348],"associ":[482],"assum":[203,439,730],"atmel":[534],"attach":[128,159,216,416],"attr":[11,127,399,445,449,482],"attribut":[127,445,448,449,450,451,482,495],"auto-detect":[334],"automat":[24,40,132,218,242,379,434,490],"avail":[6,35,36,37,38,39,48,49,50,52,110,111,112,113,232,233,234,235,236,237,238,239,240,303,324,336,352,427,428,429,430,431,432,433,435,436,437,438,446,465,496,497,498,499,500,511,523,524,525,527,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,598,612,613,614,615,616,617,618,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827],"avoid":[291,422],"avr":[534],"awai":[188,189,190],"back":[138,179],"backend":[23,24,28,29,31,32,33,34,40,41,138,194,232,400,401],"backend_device_ad":[400],"backend_device_chang":[401],"backport":[439],"base":[187,274,282,288,299,305,316,317,318,319,320,379,434,730,739],"base-10":[207],"base64":[270,271,321],"baseboard":[599,600,645],"baseclass":[6],"batteri":[87,88,89,105,106,107,110,111,112,139,140,195,196,233,234,526,619,652,663],"bcd":[534,535,536,537,538],"bdp":[650],"be":[173,228,422,533],"been":[24,25,26,27,30,40,132,140,170,177,179,188,190,197,211,289,378,382,383,385,449,490],"befor":[9,24,40,67,125,197,203,244,439,639,659,660],"beforehand":[131],"behalf":[159,216],"behavior":[439,672],"bespok":[689],"best":[689],"better":[157,213,389,425,660],"better_than":[660],"between":[80,160,191,532,726],"bidirect":[357],"binari":[270,271,311,313,321,326],"bind":[129],"bio":[601,602,603,604,646],"bit":[275,300,531,658,664,666,667,668,669,673,735,736,737],"blade":[662],"blob":[20,22,76,77,78,145,146,180,200,201,202,311,313,326,455,459,695,696,719],"block":[9,312,524,674],"bluetooth":[42],"bluez":[23,42],"boolean":[30,150,206,383,721,765],"boot":[755,756],"bootload":[119,128,133,162,181,218,221,796,797,821],"bootloader->runtime->bootload":[532],"both":[762],"bound":[227],"boundari":[76,77,78,275,300,664,673],"branch":[620,773,806],"break":[293,294,295,310,325],"bsd":[761],"bu":[348,349,352],"bubblewrap":[693],"buffer":[487,489,675,676,682,683,684,685,686,687,688,710,711,712,713,714,715,716,741,742,743,744,745,746,747,762],"build":[270,271,272,273,291,321,322,381,422,680,693,734],"build-system":[270,271,321],"builder":[693,765,766,767],"bus_expansion":[662],"button":[218,533],"byte":[62,65,72,78,265,276,284,286,301,350,351,360,361,362,365,366,367,623,624,625,664,665,666,667,668,669,670,671,672,674,675,676,677,678,679,686,695,719,752,758],"byte-for-byt":[134],"cab":[680],"cabinet":[51,54,57,59,60,653,654,655,680],"cabl":[218],"cach":[10,94,345,375,376,377,659],"cachedir_pkg":[659],"calcul":[11,180,448],"call":[8,21,24,34,40,41,117,126,131,132,134,166,174,177,179,180,188,189,190,212,229,242,243,333,335,337,339,370,379,385,398,400,401,402,408,409,410,411,412,414,415,421,434,449,490,672,681],"callback":[13,14,15,16,17,18],"caller":[67,244,762],"can":[83,84,86,92,93,96,97,125,130,131,155,159,174,176,177,180,198,211,216,227,242,243,244,262,263,270,271,310,321,325,334,339,356,357,370,371,378,379,434,439,456,457,702,728],"can't":[439],"cannot":[117,140,526,700,738],"canonic":[717],"capabl":[378],"capsul":[529,530,531],"case":[67,179,334,711,713,715,716,742,744,746,747,762,763],"categori":[6],"caus":[119,179,711,713,715,716,742,744,746,747,762,763],"certif":[657],"chain":[478,532],"chang":[26,38,43,44,50,104,113,114,173,179,187,195,196,228,356,401,431,436,437,438,439,467,500],"channel":[9,357],"charact":[316,317,318,319,320,731],"charg":[652],"charging":[652],"chassi":[647,662],"check":[10,153,166,177,210,291,427,432,513,517,519,677,682,683,684,685,706,707,762],"checksum":[180,277,282,323,422,592,768,774],"child":[118,132,141],"children":[125,141,263,621],"choos":[492,493],"chunk":[61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,267,278,312,706],"claim":[178,224],"clean":[130,244],"cleanup":[130,404,406,417],"clear":[131,402],"client":[124,141,153,163,168,183,210],"close":[8,15,131,241,242,243,244,363,520,696],"clumsi":[533],"code":[439,473,480,481,484,505,508],"coldplug":[24,40,379,403,404,405,434],"coldplug_cleanup":[404],"coldplug_prepar":[405],"collect":[185,186],"command":[92,93],"common":[673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747],"compact_pci":[662],"compar":[134,155,395,397,675,676,733],"compat":[178,224],"compil":[82,108,439],"compile-tim":[82],"complet":[131,158,174,214,215,640,689],"compon":[4,172,738],"composit":[406,407,775],"composite_cleanup":[406],"composite_prepar":[407],"concern":[711,713,715,716,742,744,746,747,762,763],"config":[12,382,383],"configur":[7,30,134,382,383,659],"confirm":[372],"conflict":[660],"conflicts":[660],"connect":[155,211],"consid":[188,190,739],"consist":[592],"consol":[212,242,243,731],"const":[67],"constant":[729,738],"construct":[270,271,280,321],"consum":[528,529,530,531],"contain":[134,180,621,693,726,739],"content":[21,270,271,301,312,321,665,695,696,719],"context":[14,28,35,58,80,100,101,142,197,235,384],"contextlookupiter":[14],"continu":[225],"control":[129,485],"conveni":[765,766,767],"convert":[75,79,119,121,132,180,203,208,230,231,260,314,315,663,728,730],"convertible":[662],"copi":[170,171,172,762],"correct":[422],"correct\"":[711,713,715,716,742,744,746,747,762,763],"corrupt":[711,713,715,716,742,744,746,747,762,763],"could":[211,706,711,713,715,716,742,744,746,747,762,763],"count":[658],"counterpart":[119,622],"cpu":[656,697],"cpuid":[681,697],"crazi":[734],"crc":[592],"crc16":[682],"crc32":[683,684],"crc8":[685],"creat":[62,63,81,83,116,161,197,246,256,262,264,265,301,328,330,338,354,358,359,369,370,371,409,439,440,454,463,466,502,678,680,689,709,719,776,807],"cross":[76,77,78],"current":[141,153,163,165,210,219,509,517,661],"custom":[143,166,198,242,392,621,627],"cyclic":[682,683,684,685],"d-bu":[514],"daemon":[11,86,104,114,115,136,154,192,203,370,378,380,422,764],"daemon-specif":[226],"data":[9,61,62,63,65,66,67,68,72,95,117,177,277,289,306,312,323,356,372,374,385,439,453,454,455,461,495,587,658,659,672,693,695,711,713,715,716,719,742,744,746,747,751,752,757,758,762,763,828],"databas":[6,102,103,119,443,444],"datadir_pkg":[659],"date":[739],"dealloc":[242,243],"debug":[7,185,186,308,372,588],"decim":[735,736,737,739],"decompress":[20,59,177],"decompressor":[19],"dedup":[590,591],"default":[140,161,196,249,265,356,491,494,532,533,698,779],"defin":[92,163,198,341,342,442,449,537],"degre":[738],"deic":[606],"delai":[162,191,218,532,533,637],"delet":[693,748,749],"delimit":[727],"depend":[82,85],"depsolv":[373,397,449],"depth":[478],"descript":[35,36,37,38,39,48,49,50,52,110,111,112,113,232,233,234,235,236,237,238,239,240,303,324,336,352,427,428,429,430,431,432,433,435,436,437,438,446,496,497,498,499,500,511,523,524,525,527,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,598,612,613,614,615,616,617,618,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827],"descriptor":[334,363,364,472,486,487,488,489,490,696],"design":[194,204],"desktop":[662],"destin":[279,302,762],"destroi":[153,159],"detach":[133,418],"detachable":[662],"determin":[394,478,659,708,755,756,760],"dev":[468,504,510],"devic":[5,6,8,12,15,16,23,24,25,26,27,29,32,34,37,38,39,40,41,42,45,46,47,80,83,115,117,118,119,120,121,122,125,126,128,129,130,131,132,133,134,135,136,137,138,141,142,143,144,147,148,149,150,151,152,153,154,155,157,159,160,161,162,163,164,165,166,167,173,174,175,176,177,178,179,180,181,182,184,187,189,192,193,194,195,196,197,198,199,203,204,205,206,207,208,209,210,211,213,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,241,242,243,244,248,329,330,334,348,350,351,363,364,368,370,371,378,379,380,386,400,401,408,409,410,411,420,428,429,430,433,434,435,439,453,465,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,490,491,492,493,494,496,499,501,503,505,506,507,508,509,511,529,530,531,532,533,634,637,652,703,704,711,713,715,716,742,744,746,747,762,763,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823],"device-id":[439],"device-specif":[134,177],"device_ad":[408],"device_cr":[409],"device_regist":[410],"device_remov":[411],"devicelockerfunc":[15],"deviceretryfunc":[16],"devnum":[704],"devpath":[211],"devtyp":[470],"dfu":[245,246,252,534,535,536,537,538],"dfuse":[255,256,537],"differ":[6,119,130,166,176,203,378,672,764],"direct":[242,243,475],"directli":[192],"director":[439],"directori":[659,690,709,718,719],"disabl":[44,212],"disallow":[3],"disambigu":[148,194,204],"discharg":[652],"discharging":[652],"discov":[526,697],"discoveri":[23],"displai":[94,345,731],"distro":[439],"dmi":[392,453,459],"dmtf":[96,97,456,457],"do":[6,8,10,165,177,219,227,379,434,533],"docking_station":[662],"doe":[76,77,78,119,178,180,225,276],"doesn't":[739],"don't":[711,713,715,716,742,744,746,747,762,763],"done":[179,379,434,449,696],"donor":[170,171,172],"dot":[6,735,736,737,739],"down":[708],"drive":[518],"driver":[8,129,227,471,497],"drop":[439],"due":[700],"dump":[7,134,461,686,687,688],"duplic":[126,763],"durat":[225,630,783,811],"dure":[693],"dynam":[659],"e.g":[0,6,12,88,106,471,479,483,529,530,533,635,644,739],"each":[21,58,76,77,78,130,176,266,726],"easi":[439],"easili":[226,241,309],"effect":[339,708],"effici":[166],"efi":[257,261,657,659,759,760],"efi_signature_list":[257,262],"efiappdir":[659],"efivar":[748,749,750,751,752,753,754,755,756,757,758,759,760],"either":[453,526],"electr":[155,211],"embedded_pc":[662],"emit":[25,26,27,467],"empti":[264,270,271,321,652,677,726],"empty":[652],"emul":[339],"enabl":[30,33,43,755,756],"enclosur":[605],"encod":[270,271,321],"encrypt":[517],"end":[439,762],"endian":[0,710,711,712,713,714,715,741,742,743,744,745,746],"engin":[80,124,160,168,183],"ensur":[6,76,77,78,135,180,734],"ensure_semver":[6],"entri":[102,103,177,443,444],"enumer":[310,325,368,453,663],"environ":[702,761],"equal":[675,676],"equival":[144,199],"error":[10,131,147,178,188,189,190,224,242,243,244,312,689,700,720,754,791,816],"esp":[651,698,699],"even":[174],"everi":[212,700],"exact":[200,623],"exampl":[310,325,373,491],"exceed":[360,361,362,365,366,367],"exist":[99,166,346,392,439,750],"exit":[720],"expand":[670,671],"expansion":[662],"expect":[9,131,162,174,355,464,660],"explicitli":[289,738],"export":[1,54,115,272,273,322,378,380,588,653],"extern":[134],"extra":[270,271,321,439],"extract":[690,693],"fail":[6,174,185,186,189,191,242,243,360,361,362,365,366,367,373],"failur":[8],"fake":[529,530,531],"fall":[138],"fallback":[12],"famili":[606],"far":[478],"fd":[364,472,490,696],"file":[10,20,21,53,55,56,59,156,249,253,263,270,271,291,294,313,321,355,358,363,364,390,439,442,459,464,469,472,486,487,488,489,490,496,659,672,691,693,695,696,700,753],"filenam":[22,279,302,426,691,717,719],"filesystem":[10,525],"fill":[355,356,464],"find":[22,99,167,292,346,376,503,509,689,692,703,704,705,717],"firmar":[658],"firmwar":[1,2,83,90,91,117,134,140,145,146,153,177,180,200,201,202,210,229,245,252,255,263,264,265,266,268,269,270,271,272,273,275,276,282,283,284,285,286,287,290,291,292,293,294,295,296,297,298,300,307,308,310,311,313,321,322,325,326,327,353,371,372,462,531,593,595,596,597,607,608,620,623,624,625,659,693,711,713,715,716,742,744,746,747,762,763],"firmware-build":[270,271,321],"firmware.bin":[693],"first":[174,297,298,703,704],"flag":[1,2,3,4,5,6,7,8,9,10,11,12,58,120,124,131,143,166,168,171,174,182,183,187,198,230,231,268,292,314,315,331,392,491,529,589,594,626,653,654,655,661,777,802,809,824,825,826,827],"flash":[378,778,810],"flush":[9],"flush_input":[9],"fmap":[327,328],"fn":[22,426],"fnmatch":[694],"follow":[270,271,321],"footer":[276],"form":[270,271,321,726],"format":[6,198,222,249,253,439,534,535,536,537,538,644,733,738,739,740,798],"forward":[720],"found":[21,56,136,161,257,261,373,700],"free":[513],"frequent":[291],"from":[6,9,12,45,46,55,78,96,97,126,128,133,134,136,143,149,150,151,154,156,166,170,171,172,173,180,181,182,192,198,211,225,227,228,230,265,266,270,271,289,296,297,298,306,312,314,316,317,318,319,320,321,347,350,355,357,358,359,360,361,362,377,379,380,392,426,434,448,456,457,458,459,460,464,486,487,492,493,680,689,693,695,696,703,704,707,710,711,712,713,714,715,716,729,734,735,736,737,738,739,742,744,746,747,748,749,751,752,759,762,763],"fu_archive_iterate":[21],"fu_archive_lookup_by_fn":[22],"fu_archive_new":[20],"fu_backend_coldplug":[24],"fu_backend_device_added":[25],"fu_backend_device_changed":[26],"fu_backend_device_removed":[27],"fu_backend_get_context":[28],"fu_backend_get_devices":[29],"fu_backend_get_enabled":[30],"fu_backend_get_name":[31],"fu_backend_lookup_by_id":[32],"fu_backend_set_enabled":[33],"fu_backend_setup":[34],"fu_battery_state_to_string":[663],"fu_battery_value_invalid":[526],"fu_bluez_device_notify_start":[43],"fu_bluez_device_notify_stop":[44],"fu_bluez_device_read":[45],"fu_bluez_device_read_string":[46],"fu_bluez_device_write":[47],"fu_build_hash":[527],"fu_byte_array_align_up":[664],"fu_byte_array_append_bytes":[665],"fu_byte_array_append_uint16":[666],"fu_byte_array_append_uint32":[667],"fu_byte_array_append_uint64":[668],"fu_byte_array_append_uint8":[669],"fu_byte_array_set_size":[670],"fu_byte_array_set_size_full":[671],"fu_bytes_get_data_safe":[672],"fu_cabinet_add_file":[53],"fu_cabinet_export":[54],"fu_cabinet_get_file":[55],"fu_cabinet_get_silo":[56],"fu_cabinet_new":[52],"fu_cabinet_parse":[57],"fu_cabinet_set_jcat_context":[58],"fu_cabinet_set_size_max":[59],"fu_cabinet_sign":[60],"fu_chunk_array_mutable_new":[76],"fu_chunk_array_new":[77],"fu_chunk_array_new_from_bytes":[78],"fu_chunk_array_to_string":[79],"fu_chunk_bytes_new":[62],"fu_chunk_get_address":[64],"fu_chunk_get_bytes":[65],"fu_chunk_get_data":[66],"fu_chunk_get_data_out":[67],"fu_chunk_get_data_sz":[68],"fu_chunk_get_idx":[69],"fu_chunk_get_page":[70],"fu_chunk_new":[63],"fu_chunk_set_address":[71],"fu_chunk_set_bytes":[72],"fu_chunk_set_idx":[73],"fu_chunk_set_page":[74],"fu_chunk_to_string":[75],"fu_common_align_up":[673],"fu_common_bytes_align":[674],"fu_common_bytes_compare":[675],"fu_common_bytes_compare_raw":[676],"fu_common_bytes_is_empty":[677],"fu_common_bytes_new_offset":[678],"fu_common_bytes_pad":[679],"fu_common_cab_build_silo":[680],"fu_common_cpuid":[681],"fu_common_crc16":[682],"fu_common_crc32":[683],"fu_common_crc32_full":[684],"fu_common_crc8":[685],"fu_common_dump_bytes":[686],"fu_common_dump_full":[687],"fu_common_dump_raw":[688],"fu_common_error_array_get_best":[689],"fu_common_extract_archive":[690],"fu_common_filename_glob":[691],"fu_common_find_program_in_path":[692],"fu_common_firmware_builder":[693],"fu_common_fnmatch":[694],"fu_common_get_contents_bytes":[695],"fu_common_get_contents_fd":[696],"fu_common_get_cpu_vendor":[697],"fu_common_get_esp_default":[698],"fu_common_get_esp_for_path":[699],"fu_common_get_files_recursive":[700],"fu_common_get_memory_size":[701],"fu_common_get_path":[702],"fu_common_get_volume_by_device":[703],"fu_common_get_volume_by_devnum":[704],"fu_common_get_volumes_by_kind":[705],"fu_common_guid_is_plausible":[706],"fu_common_is_live_media":[707],"fu_common_kernel_locked_down":[708],"fu_common_mkdir_parent":[709],"fu_common_read_uint16":[710],"fu_common_read_uint16_safe":[711],"fu_common_read_uint32":[712],"fu_common_read_uint32_safe":[713],"fu_common_read_uint64":[714],"fu_common_read_uint64_safe":[715],"fu_common_read_uint8_safe":[716],"fu_common_realpath":[717],"fu_common_rmtree":[718],"fu_common_set_contents_bytes":[719],"fu_common_spawn_sync":[720],"fu_common_string_append_kb":[721],"fu_common_string_append_ku":[722],"fu_common_string_append_kv":[723],"fu_common_string_append_kx":[724],"fu_common_string_replace":[725],"fu_common_strjoin_array":[726],"fu_common_strnsplit":[727],"fu_common_strsafe":[728],"fu_common_strstrip":[729],"fu_common_strtoull":[730],"fu_common_strwidth":[731],"fu_common_uri_get_scheme":[732],"fu_common_vercmp_full":[733],"fu_common_version_ensure_semver":[734],"fu_common_version_from_uint16":[735],"fu_common_version_from_uint32":[736],"fu_common_version_from_uint64":[737],"fu_common_version_guess_format":[738],"fu_common_version_parse_from_format":[739],"fu_common_version_verify_format":[740],"fu_common_write_uint16":[741],"fu_common_write_uint16_safe":[742],"fu_common_write_uint32":[743],"fu_common_write_uint32_safe":[744],"fu_common_write_uint64":[745],"fu_common_write_uint64_safe":[746],"fu_common_write_uint8_safe":[747],"fu_context_add_compile_version":[82],"fu_context_add_firmware_gtype":[83],"fu_context_add_quirk_key":[84],"fu_context_add_runtime_version":[85],"fu_context_add_udev_subsystem":[86],"fu_context_get_battery_level":[87],"fu_context_get_battery_state":[88],"fu_context_get_battery_threshold":[89],"fu_context_get_firmware_gtype_by_id":[90],"fu_context_get_firmware_gtype_ids":[91],"fu_context_get_hwid_guids":[92],"fu_context_get_hwid_replace_value":[93],"fu_context_get_hwid_value":[94],"fu_context_get_smbios_data":[95],"fu_context_get_smbios_integer":[96],"fu_context_get_smbios_string":[97],"fu_context_get_udev_subsystems":[98],"fu_context_has_hwid_guid":[99],"fu_context_load_hwinfo":[100],"fu_context_load_quirks":[101],"fu_context_lookup_quirk_by_id":[102],"fu_context_lookup_quirk_by_id_iter":[103],"fu_context_new":[81],"fu_context_security_changed":[104],"fu_context_set_battery_level":[105],"fu_context_set_battery_state":[106],"fu_context_set_battery_threshold":[107],"fu_context_set_compile_versions":[108],"fu_context_set_runtime_versions":[109],"fu_device_activate":[117],"fu_device_add_checksum":[768],"fu_device_add_child":[118],"fu_device_add_counterpart_guid":[119],"fu_device_add_flag":[120],"fu_device_add_guid":[121],"fu_device_add_icon":[769],"fu_device_add_instance_id":[122],"fu_device_add_instance_id_full":[123],"fu_device_add_internal_flag":[124],"fu_device_add_parent_guid":[125],"fu_device_add_possible_plugin":[126],"fu_device_add_protocol":[770],"fu_device_add_release":[771],"fu_device_add_security_attrs":[127],"fu_device_add_vendor_id":[772],"fu_device_attach":[128],"fu_device_bind_driver":[129],"fu_device_cleanup":[130],"fu_device_clos":[174],"fu_device_close":[131],"fu_device_convert_instance_ids":[132],"fu_device_detach":[133],"fu_device_dump_firmware":[134],"fu_device_ensure_id":[135],"fu_device_get_alternate":[136],"fu_device_get_alternate_id":[137],"fu_device_get_backend_id":[138],"fu_device_get_battery_level":[139],"fu_device_get_battery_threshold":[140],"fu_device_get_branch":[773],"fu_device_get_checksums":[774],"fu_device_get_children":[141],"fu_device_get_composite_id":[775],"fu_device_get_context":[142],"fu_device_get_created":[776],"fu_device_get_custom_flags":[143],"fu_device_get_equivalent_id":[144],"fu_device_get_firmware_size_max":[145],"fu_device_get_firmware_size_min":[146],"fu_device_get_flags":[777],"fu_device_get_flashes_left":[778],"fu_device_get_guid_default":[779],"fu_device_get_guids":[780],"fu_device_get_guids_as_str":[147],"fu_device_get_icons":[781],"fu_device_get_id":[203,782],"fu_device_get_install_duration":[783],"fu_device_get_instance_ids":[784],"fu_device_get_logical_id":[148],"fu_device_get_metadata":[149],"fu_device_get_metadata_boolean":[150],"fu_device_get_metadata_integer":[151],"fu_device_get_modified":[785],"fu_device_get_name":[786],"fu_device_get_order":[152],"fu_device_get_parent":[153],"fu_device_get_parent_guids":[154],"fu_device_get_physical_id":[155],"fu_device_get_plugin":[787],"fu_device_get_possible_plugins":[156],"fu_device_get_priority":[157],"fu_device_get_progress":[158],"fu_device_get_protocols":[788],"fu_device_get_proxy":[159],"fu_device_get_proxy_guid":[160],"fu_device_get_release_default":[161],"fu_device_get_remove_delay":[162],"fu_device_get_root":[163],"fu_device_get_serial":[789],"fu_device_get_specialized_gtype":[164],"fu_device_get_status":[165],"fu_device_get_summary":[790],"fu_device_get_update_error":[791],"fu_device_get_update_state":[792],"fu_device_get_vendor":[793],"fu_device_get_vendor_ids":[794],"fu_device_get_version":[795],"fu_device_get_version_bootloader":[796],"fu_device_get_version_bootloader_raw":[797],"fu_device_get_version_format":[798],"fu_device_get_version_lowest":[799],"fu_device_get_version_lowest_raw":[800],"fu_device_get_version_raw":[801],"fu_device_has_custom_flag":[166],"fu_device_has_flag":[802],"fu_device_has_guid":[167],"fu_device_has_instance_id":[803],"fu_device_has_internal_flag":[168],"fu_device_has_parent_guid":[169],"fu_device_has_protocol":[804],"fu_device_has_vendor_id":[805],"fu_device_incorporate":[170],"fu_device_incorporate_flag":[171],"fu_device_incorporate_from_component":[172],"fu_device_inhibit":[173],"fu_device_internal_flag_from_string":[230],"fu_device_internal_flag_to_string":[231],"fu_device_locker_close":[244],"fu_device_locker_new":[242],"fu_device_locker_new_ful":[242],"fu_device_locker_new_full":[243],"fu_device_metadata_tbt_is_safe_mode":[528],"fu_device_metadata_uefi_capsule_flags":[529],"fu_device_metadata_uefi_device_kind":[530],"fu_device_metadata_uefi_fw_version":[531],"fu_device_new":[116],"fu_device_open":[12,131,174,494],"fu_device_poll":[175],"fu_device_prepare":[176],"fu_device_prepare_firmware":[177],"fu_device_probe":[178],"fu_device_probe_invalidate":[179],"fu_device_read_firmware":[180],"fu_device_reload":[181],"fu_device_remove_delay_re_enumerate":[532],"fu_device_remove_delay_user_replug":[533],"fu_device_remove_flag":[182],"fu_device_remove_internal_flag":[183],"fu_device_remove_metadata":[184],"fu_device_report_metadata_post":[185],"fu_device_report_metadata_pre":[186],"fu_device_rescan":[187],"fu_device_retry":[188],"fu_device_retry_add_recovery":[189],"fu_device_retry_full":[190],"fu_device_retry_set_delay":[191],"fu_device_set_alternate":[192],"fu_device_set_alternate_id":[193],"fu_device_set_backend_id":[194],"fu_device_set_battery_level":[195],"fu_device_set_battery_threshold":[196],"fu_device_set_branch":[806],"fu_device_set_context":[197],"fu_device_set_created":[807],"fu_device_set_custom_flags":[198],"fu_device_set_description":[808],"fu_device_set_equivalent_id":[199],"fu_device_set_firmware_size":[200],"fu_device_set_firmware_size_max":[201],"fu_device_set_firmware_size_min":[177,202],"fu_device_set_flags":[809],"fu_device_set_flashes_left":[810],"fu_device_set_id":[203],"fu_device_set_install_duration":[811],"fu_device_set_logical_id":[204],"fu_device_set_metadata":[205],"fu_device_set_metadata_boolean":[206],"fu_device_set_metadata_integer":[207],"fu_device_set_modified":[812],"fu_device_set_name":[208],"fu_device_set_order":[209],"fu_device_set_parent":[210],"fu_device_set_physical_id":[211],"fu_device_set_plugin":[813],"fu_device_set_poll_interv":[212],"fu_device_set_poll_interval":[212],"fu_device_set_priority":[213],"fu_device_set_progress":[214],"fu_device_set_progress_full":[215],"fu_device_set_proxy":[216],"fu_device_set_proxy_guid":[217],"fu_device_set_remove_delay":[218],"fu_device_set_serial":[814],"fu_device_set_status":[219],"fu_device_set_summary":[815],"fu_device_set_update_error":[816],"fu_device_set_update_image":[817],"fu_device_set_update_message":[818],"fu_device_set_update_state":[819],"fu_device_set_vendor":[820],"fu_device_set_version":[220],"fu_device_set_version_bootloader":[221],"fu_device_set_version_bootloader_raw":[821],"fu_device_set_version_format":[222],"fu_device_set_version_lowest":[223],"fu_device_set_version_lowest_raw":[822],"fu_device_set_version_raw":[823],"fu_device_setup":[224],"fu_device_sleep_with_progress":[225],"fu_device_to_string":[226],"fu_device_unbind_driver":[227],"fu_device_uninhibit":[228],"fu_device_write_firmware":[229],"fu_dfu_firmare_version_atmel_avr":[534],"fu_dfu_firmare_version_dfu_1_0":[535],"fu_dfu_firmare_version_dfu_1_1":[536],"fu_dfu_firmare_version_dfuse":[537],"fu_dfu_firmare_version_unknown":[538],"fu_dfu_firmware_get_pid":[247],"fu_dfu_firmware_get_release":[248],"fu_dfu_firmware_get_version":[249],"fu_dfu_firmware_get_vid":[250],"fu_dfu_firmware_new":[246],"fu_dfu_firmware_set_pid":[251],"fu_dfu_firmware_set_release":[252],"fu_dfu_firmware_set_version":[253],"fu_dfu_firmware_set_vid":[254],"fu_dfuse_firmware_new":[256],"fu_efi_signature_get_kind":[258],"fu_efi_signature_get_owner":[259],"fu_efi_signature_guid_microsoft":[539],"fu_efi_signature_guid_ovmf":[540],"fu_efi_signature_guid_ovmf_legacy":[541],"fu_efi_signature_guid_zero":[542],"fu_efi_signature_kind_to_string":[260],"fu_efi_signature_list_new":[262],"fu_efivar_attr_append_write":[543],"fu_efivar_attr_authenticated_write_access":[544],"fu_efivar_attr_bootservice_access":[545],"fu_efivar_attr_hardware_error_record":[546],"fu_efivar_attr_non_volatile":[547],"fu_efivar_attr_runtime_access":[548],"fu_efivar_attr_time_based_authenticated_write_access":[549],"fu_efivar_delete":[748],"fu_efivar_delete_with_glob":[749],"fu_efivar_exists":[750],"fu_efivar_get_data":[751],"fu_efivar_get_data_bytes":[752],"fu_efivar_get_monitor":[753],"fu_efivar_get_names":[754],"fu_efivar_guid_efi_global":[550],"fu_efivar_guid_fwupdate":[551],"fu_efivar_guid_security_database":[552],"fu_efivar_guid_ux_capsule":[553],"fu_efivar_secure_boot_enabled":[755],"fu_efivar_secure_boot_enabled_full":[756],"fu_efivar_set_data":[757],"fu_efivar_set_data_bytes":[758],"fu_efivar_space_used":[759],"fu_efivar_supported":[760],"fu_firmware_add_chunk":[267],"fu_firmware_add_flag":[268],"fu_firmware_add_image":[269],"fu_firmware_alignment_1":[554],"fu_firmware_alignment_128":[555],"fu_firmware_alignment_128k":[556],"fu_firmware_alignment_128m":[557],"fu_firmware_alignment_16":[558],"fu_firmware_alignment_16k":[559],"fu_firmware_alignment_16m":[560],"fu_firmware_alignment_1g":[561],"fu_firmware_alignment_1k":[562],"fu_firmware_alignment_1m":[563],"fu_firmware_alignment_2":[564],"fu_firmware_alignment_256":[565],"fu_firmware_alignment_256k":[566],"fu_firmware_alignment_256m":[567],"fu_firmware_alignment_2g":[568],"fu_firmware_alignment_2k":[569],"fu_firmware_alignment_2m":[570],"fu_firmware_alignment_32":[571],"fu_firmware_alignment_32k":[572],"fu_firmware_alignment_32m":[573],"fu_firmware_alignment_4":[574],"fu_firmware_alignment_4g":[575],"fu_firmware_alignment_4k":[576],"fu_firmware_alignment_4m":[577],"fu_firmware_alignment_512":[578],"fu_firmware_alignment_512k":[579],"fu_firmware_alignment_512m":[580],"fu_firmware_alignment_64":[581],"fu_firmware_alignment_64k":[582],"fu_firmware_alignment_64m":[583],"fu_firmware_alignment_8":[584],"fu_firmware_alignment_8k":[585],"fu_firmware_alignment_8m":[586],"fu_firmware_build":[270],"fu_firmware_build_from_xml":[271],"fu_firmware_export":[272],"fu_firmware_export_flag_ascii_data":[587],"fu_firmware_export_flag_include_debug":[588],"fu_firmware_export_flag_none":[589],"fu_firmware_export_to_xml":[273],"fu_firmware_flag_dedupe_id":[590],"fu_firmware_flag_dedupe_idx":[591],"fu_firmware_flag_from_string":[314],"fu_firmware_flag_has_checksum":[592],"fu_firmware_flag_has_vid_pid":[593],"fu_firmware_flag_none":[594],"fu_firmware_flag_to_string":[315],"fu_firmware_get_addr":[274],"fu_firmware_get_alignment":[275],"fu_firmware_get_bytes":[276],"fu_firmware_get_checksum":[277],"fu_firmware_get_chunks":[278],"fu_firmware_get_filename":[279],"fu_firmware_get_id":[280],"fu_firmware_get_idx":[281],"fu_firmware_get_image_by_checksum":[282],"fu_firmware_get_image_by_id":[283],"fu_firmware_get_image_by_id_bytes":[284],"fu_firmware_get_image_by_idx":[285],"fu_firmware_get_image_by_idx_bytes":[286],"fu_firmware_get_images":[287],"fu_firmware_get_offset":[288],"fu_firmware_get_size":[289],"fu_firmware_get_version":[290],"fu_firmware_get_version_raw":[291],"fu_firmware_has_flag":[292],"fu_firmware_id_header":[595],"fu_firmware_id_payload":[596],"fu_firmware_id_signature":[597],"fu_firmware_new":[264],"fu_firmware_new_from_byt":[301],"fu_firmware_new_from_bytes":[265],"fu_firmware_new_from_gtypes":[266],"fu_firmware_parse":[293],"fu_firmware_parse_file":[294],"fu_firmware_parse_full":[295],"fu_firmware_remove_image":[296],"fu_firmware_remove_image_by_id":[297],"fu_firmware_remove_image_by_idx":[298],"fu_firmware_set_addr":[299],"fu_firmware_set_alignment":[300],"fu_firmware_set_bytes":[301],"fu_firmware_set_filename":[302],"fu_firmware_set_id":[303],"fu_firmware_set_idx":[304],"fu_firmware_set_offset":[305],"fu_firmware_set_size":[306],"fu_firmware_set_version":[307],"fu_firmware_set_version_raw":[308],"fu_firmware_strparse_uint16_safe":[316],"fu_firmware_strparse_uint24_safe":[317],"fu_firmware_strparse_uint32_safe":[318],"fu_firmware_strparse_uint4_safe":[319],"fu_firmware_strparse_uint8_safe":[320],"fu_firmware_to_string":[309],"fu_firmware_tokenize":[310],"fu_firmware_writ":[180,289,306],"fu_firmware_write":[311],"fu_firmware_write_chunk":[312],"fu_firmware_write_file":[313],"fu_fmap_firmware_new":[328],"fu_fmap_firmware_strlen":[598],"fu_hid_device_add_flag":[331],"fu_hid_device_get_interface":[332],"fu_hid_device_get_report":[333],"fu_hid_device_new":[330],"fu_hid_device_set_interface":[334],"fu_hid_device_set_report":[8,335],"fu_hwids_add_smbios_override":[339],"fu_hwids_get_guid":[340],"fu_hwids_get_guids":[341],"fu_hwids_get_keys":[342],"fu_hwids_get_replace_keys":[343],"fu_hwids_get_replace_values":[344],"fu_hwids_get_value":[345],"fu_hwids_has_guid":[346],"fu_hwids_key_baseboard_manufacturer":[599],"fu_hwids_key_baseboard_product":[600],"fu_hwids_key_bios_major_release":[601],"fu_hwids_key_bios_minor_release":[602],"fu_hwids_key_bios_vendor":[603],"fu_hwids_key_bios_version":[604],"fu_hwids_key_enclosure_kind":[605],"fu_hwids_key_family":[606],"fu_hwids_key_firmware_major_release":[607],"fu_hwids_key_firmware_minor_release":[608],"fu_hwids_key_manufacturer":[609],"fu_hwids_key_product_name":[610],"fu_hwids_key_product_sku":[611],"fu_hwids_new":[338],"fu_hwids_setup":[347],"fu_i2c_device_get_bus_number":[349],"fu_i2c_device_read":[350],"fu_i2c_device_write":[351],"fu_ihex_firmware_get_records":[355],"fu_ihex_firmware_new":[354],"fu_ihex_firmware_record_type_data":[612],"fu_ihex_firmware_record_type_eof":[613],"fu_ihex_firmware_record_type_extended_linear":[614],"fu_ihex_firmware_record_type_extended_segment":[615],"fu_ihex_firmware_record_type_signature":[616],"fu_ihex_firmware_record_type_start_linear":[617],"fu_ihex_firmware_record_type_start_segment":[618],"fu_ihex_firmware_set_padding_value":[356],"fu_io_channel_new_file":[358],"fu_io_channel_read_byte_array":[360],"fu_io_channel_read_bytes":[361],"fu_io_channel_read_raw":[362],"fu_io_channel_shutdown":[363],"fu_io_channel_unix_get_fd":[364],"fu_io_channel_unix_new":[359],"fu_io_channel_write_byte_array":[365],"fu_io_channel_write_bytes":[366],"fu_io_channel_write_raw":[367],"fu_kenv_get_string":[761],"fu_memcpy_safe":[762],"fu_memdup_safe":[763],"fu_plugin_add_device_gtype":[370],"fu_plugin_add_firmware_gtype":[371],"fu_plugin_add_flag":[824],"fu_plugin_add_report_metadata":[372],"fu_plugin_add_rule":[373],"fu_plugin_alloc_data":[374],"fu_plugin_cache_add":[375],"fu_plugin_cache_lookup":[376],"fu_plugin_cache_remove":[377],"fu_plugin_device_add":[378,379,434],"fu_plugin_device_register":[379],"fu_plugin_device_remov":[386],"fu_plugin_device_remove":[380],"fu_plugin_get_build_hash":[381],"fu_plugin_get_config_value":[382],"fu_plugin_get_config_value_boolean":[383],"fu_plugin_get_context":[384],"fu_plugin_get_data":[385],"fu_plugin_get_devices":[386],"fu_plugin_get_flags":[825],"fu_plugin_get_name":[387],"fu_plugin_get_order":[388],"fu_plugin_get_priority":[389],"fu_plugin_get_report_metadata":[390],"fu_plugin_get_rules":[391],"fu_plugin_guess_name_from_fn":[426],"fu_plugin_has_custom_flag":[392],"fu_plugin_has_flag":[826],"fu_plugin_has_rule":[393],"fu_plugin_initi":[660],"fu_plugin_is_open":[394],"fu_plugin_name_compare":[395],"fu_plugin_new":[369],"fu_plugin_open":[396],"fu_plugin_order_compare":[397],"fu_plugin_remove_flag":[827],"fu_plugin_runner_activate":[398],"fu_plugin_runner_add_security_attrs":[399],"fu_plugin_runner_backend_device_added":[400],"fu_plugin_runner_backend_device_changed":[401],"fu_plugin_runner_clear_results":[402],"fu_plugin_runner_coldplug":[403],"fu_plugin_runner_coldplug_cleanup":[404],"fu_plugin_runner_coldplug_prepare":[405],"fu_plugin_runner_composite_cleanup":[406],"fu_plugin_runner_composite_prepare":[407],"fu_plugin_runner_device_added":[408],"fu_plugin_runner_device_created":[409],"fu_plugin_runner_device_register":[410],"fu_plugin_runner_device_removed":[411],"fu_plugin_runner_get_results":[412],"fu_plugin_runner_startup":[413],"fu_plugin_runner_unlock":[414],"fu_plugin_runner_update":[415],"fu_plugin_runner_update_attach":[416],"fu_plugin_runner_update_cleanup":[417],"fu_plugin_runner_update_detach":[418],"fu_plugin_runner_update_prepare":[419],"fu_plugin_runner_update_reload":[420],"fu_plugin_runner_verify":[421],"fu_plugin_set_build_hash":[422],"fu_plugin_set_name":[423],"fu_plugin_set_order":[424],"fu_plugin_set_priority":[425],"fu_quirks_add_possible_key":[441],"fu_quirks_battery_threshold":[619],"fu_quirks_branch":[620],"fu_quirks_children":[621],"fu_quirks_counterpart_guid":[622],"fu_quirks_firmware_size":[623],"fu_quirks_firmware_size_max":[624],"fu_quirks_firmware_size_min":[625],"fu_quirks_flags":[626],"fu_quirks_gtype":[627],"fu_quirks_guid":[628],"fu_quirks_icon":[629],"fu_quirks_install_duration":[630],"fu_quirks_load":[442],"fu_quirks_lookup_by_id":[443],"fu_quirks_lookup_by_id_iter":[444],"fu_quirks_name":[631],"fu_quirks_new":[440],"fu_quirks_parent_guid":[632],"fu_quirks_plugin":[633],"fu_quirks_priority":[634],"fu_quirks_protocol":[635],"fu_quirks_proxy_guid":[636],"fu_quirks_remove_delay":[637],"fu_quirks_summary":[638],"fu_quirks_update_image":[639],"fu_quirks_update_message":[640],"fu_quirks_vendor":[641],"fu_quirks_vendor_id":[642],"fu_quirks_version":[643],"fu_quirks_version_format":[644],"fu_security_attrs_append":[447],"fu_security_attrs_calculate_hsi":[448],"fu_security_attrs_depsolve":[449],"fu_security_attrs_get_all":[450],"fu_security_attrs_new":[446],"fu_security_attrs_remove_all":[451],"fu_security_attrs_to_variant":[452],"fu_smbios_get_data":[455],"fu_smbios_get_integer":[456],"fu_smbios_get_string":[457],"fu_smbios_new":[454],"fu_smbios_setup":[458],"fu_smbios_setup_from_file":[459],"fu_smbios_setup_from_path":[460],"fu_smbios_structure_type_baseboard":[645],"fu_smbios_structure_type_bios":[646],"fu_smbios_structure_type_chassis":[647],"fu_smbios_structure_type_last":[648],"fu_smbios_structure_type_system":[649],"fu_smbios_to_string":[461],"fu_srec_firmware_get_record":[310,325],"fu_srec_firmware_get_records":[464],"fu_srec_firmware_new":[463],"fu_udev_device_emit_changed":[467],"fu_udev_device_get_dev":[468],"fu_udev_device_get_device_file":[469],"fu_udev_device_get_devtype":[470],"fu_udev_device_get_driver":[471],"fu_udev_device_get_fd":[472],"fu_udev_device_get_model":[473],"fu_udev_device_get_number":[474],"fu_udev_device_get_parent_name":[475],"fu_udev_device_get_revision":[476],"fu_udev_device_get_siblings_with_subsystem":[477],"fu_udev_device_get_slot_depth":[478],"fu_udev_device_get_subsystem":[479],"fu_udev_device_get_subsystem_model":[480],"fu_udev_device_get_subsystem_vendor":[481],"fu_udev_device_get_sysfs_attr":[482],"fu_udev_device_get_sysfs_path":[483],"fu_udev_device_get_vendor":[484],"fu_udev_device_ioctl":[485],"fu_udev_device_new":[466],"fu_udev_device_pread":[486],"fu_udev_device_pread_full":[487],"fu_udev_device_pwrite":[488],"fu_udev_device_pwrite_full":[489],"fu_udev_device_set_fd":[490],"fu_udev_device_set_flags":[491],"fu_udev_device_set_logical_id":[492],"fu_udev_device_set_physical_id":[493],"fu_udev_device_set_readonly":[494],"fu_udev_device_write_sysfs":[495],"fu_usb_device_find_udev_device":[503],"fu_usb_device_get_dev":[504],"fu_usb_device_get_pid":[505],"fu_usb_device_get_platform_id":[506],"fu_usb_device_get_spec":[507],"fu_usb_device_get_vid":[508],"fu_usb_device_is_open":[509],"fu_usb_device_new":[502],"fu_usb_device_set_dev":[510],"fu_version_string":[764],"fu_volume_check_free_space":[513],"fu_volume_get_id":[514],"fu_volume_get_id_type":[515],"fu_volume_get_mount_point":[516],"fu_volume_is_encrypted":[517],"fu_volume_is_internal":[518],"fu_volume_is_mounted":[519],"fu_volume_kind_bdp":[650],"fu_volume_kind_esp":[651],"fu_volume_locker":[520],"fu_volume_mount":[521],"fu_volume_unmount":[522],"fu_xmlb_builder_insert_kb":[765],"fu_xmlb_builder_insert_kv":[766],"fu_xmlb_builder_insert_kx":[767],"fuappflags":[3],"fuarchive":[19],"fuarchiveflags":[4],"fubackend":[23],"fubatterystate":[652],"fubluezdevice":[42],"fucabinet":[51],"fucabinetexportflags":[653],"fucabinetparseflags":[654],"fucabinetsignflags":[655],"fuchunk":[61],"fucontext":[80],"fucpuvendor":[656],"fudevic":[439],"fudevice":[115],"fudevice->cleanup":[130],"fudevice->prepar":[176],"fudevice->write_firmwar":[130,176],"fudeviceinstanceflags":[5],"fudeviceinternalflags":[6],"fudevicelocker":[241],"fudfufirmware":[245],"fudfusefirmware":[255],"fudumpflags":[7],"fuefisignature":[257],"fuefisignaturekind":[657],"fuefisignaturelist":[261],"fuendiantype":[0],"fufirmaresrecrecordkind":[658],"fufirmware":[263],"fufirmwareexportflags":[1],"fufirmwareflags":[2],"fufmapfirmware":[327],"fuhiddevice":[329],"fuhiddeviceflags":[8],"fuhwids":[337],"fui2cdevice":[348],"fuihexfirmware":[353],"fuiochannel":[357],"fuiochannelflags":[9],"full":[123,190,215,243,295,487,489,671,684,687,733,756],"fulli":[652],"fully_charged":[652],"func":[13,15,16],"function":[21,24,34,40,41,67,132,136,153,159,174,188,189,190,192,227,242,244,270,271,310,321,325,334,339,356,449,672,711,713,715,716,742,744,746,747,762,763,765,766,767],"fupathkind":[659],"fuplugin":[368],"fuplugindata":[828],"fupluginrule":[660],"fupluginverifyflags":[661],"fuquirks":[439],"fuquirksloadflags":[10],"fusecurityattrs":[445],"fusecurityattrsflags":[11],"fusmbios":[453],"fusmbioschassiskind":[662],"fusrecfirmware":[462],"fuudevdevice":[465],"fuudevdeviceflags":[12],"fuusbdevice":[501],"fuvolume":[512],"fw.builder.xml":[270,271,321],"fwupd":[195,196,368,373,439],"fwupd-specif":[702],"fwupd_guid_hash_str":[119,121],"g_bytes_get_data":[672],"g_clear_object":[242,243],"gbyte":[665,679],"gbytearrai":[670,671],"gener":[135,270,271,321,381],"get":[12,28,29,30,31,32,55,56,64,65,66,67,68,69,70,87,88,89,90,91,92,93,94,95,96,97,98,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,244,247,248,249,250,258,259,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,312,323,331,332,333,340,341,342,343,344,345,349,355,364,381,382,383,384,385,386,387,388,389,390,391,393,412,439,450,455,456,457,464,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,503,504,505,506,507,508,514,515,516,672,689,695,696,697,698,699,700,701,702,703,704,705,732,751,752,753,754,759,761,764,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,825],"getreport":[333],"given":[21,478,486,487,488,489,672,681,682,683,684,685,725,727,732],"glob":[691,694,749],"go":[162,356],"goe":[241],"gone":[181],"group":[749],"gtype":[83,90,91,164,266,370,371,621,627],"guess":[83,282,371,426,518,738],"guid":[6,92,99,103,119,121,122,125,132,147,154,160,167,169,187,217,259,340,341,346,444,622,628,632,636,650,651,706,754,779,780],"gven":[225],"ha":[24,25,26,27,40,99,132,140,166,167,168,169,173,179,181,188,190,197,211,228,289,292,339,346,378,385,392,393,490,533,592,593,640,726,802,803,804,805,826],"hand_held":[662],"handl":[126,130,176,188,190,244,439,529,530,531],"handler":[17,126],"happen":[693],"hard":[439],"hardwar":[92,93,95,97,99,100,102,103,129,175,179,187,212,227,333,335,337,346,347,378,439,442,443,444,458,528],"hardwareid":[344],"hash":[203,381,422,657],"have":[104,114,119,131,132,170,177,203,218,224,263,270,271,276,321,379,434,449,477],"header":[276,455,595,658],"here":[203,337,372],"heurist":[707,738],"hex":[353,355,724,739],"hid":[8,329,330,332,334,492],"hidden":[759],"higher":[152,157,209,213,388,389,424,425],"higher-prior":[378],"histori":[6],"hole":[355,464],"hopefulli":[759],"host":[445,693],"how":[478],"hsi":[11,104,114,127,448],"https://www.dmtf.org/sites/default/files/standards/documents/dsp0134_3.1.1.pdf":[96,97,456,457],"hub":[532],"huge":[439],"human":[329,533],"hwid":[92,93,94,99,337,341,342,392,599,600,601,602,603,604,605,606,607,608,609,610,611],"hwinfo":[100],"i.":[67],"i2c":[348],"icon":[6,629,769,781],"id":[5,6,12,32,90,91,92,93,102,103,119,122,123,132,135,136,137,138,144,148,155,193,194,199,203,204,211,232,236,238,247,248,250,251,254,269,280,283,284,297,303,337,378,391,393,443,444,445,492,493,506,514,515,590,593,595,596,597,642,772,775,782,784,794,803,805],"idea":[439],"idl":[3,660],"idtyp":[515],"idx":[69,73,281,285,286,298,304,591],"ie":[659],"ignor":[4,10,126,173,228,378,379,434],"ignore_path":[4],"ihex":[353,354],"imag":[134,245,255,263,265,267,269,270,271,274,276,278,279,280,281,282,283,284,285,286,287,288,289,293,294,295,296,297,298,299,301,302,304,305,306,311,312,313,321,326,327,353,355,378,462,464,639,817],"img":[590,591],"implic":[439],"import":[125,174],"in-memori":[19],"includ":[270,271,276,321,372,439,455,588,709],"incomplet":[356],"incorpor":[170,171,172],"index":[61,69,73,281,285,286,298,304],"indic":[25,26,27],"inform":[100,104,114,153,210,439,588],"inherit":[6],"inherit_activation":[6],"inhibit":[173,228,660],"inhibitor":[228],"inhibits_idle":[660],"initi":[174],"input":[9,282,740],"insert":[726,765,766,767],"insid":[693],"instal":[152,209,439,630,659,764,783,811],"instanc":[5,6,23,122,123,132,153,159,179,210,216,379,434,492,493,702,784,803],"instead":[122,140,276,289,370],"integ":[96,151,207,456,531,666,667,668,669,722,724,730,767],"intel":[353,656],"intention":[763],"interact":[5],"interfac":[178,224,329,332,334,336],"intern":[6,124,131,168,174,183,207,230,231,518,592],"interv":[212],"invalid":[179,208,334],"invok":[131,174],"involv":[218],"io":[9,357],"ioctl":[485],"iot_gateway":[662],"is_feature":[8],"is_open":[6],"issu":[131,174],"it'":[30,382,383,439],"item":[149,150,151,184,205,206,207,726],"iter":[13,14,16,17,18,21,103,373,444],"itself":[532],"i\u00b2c":[348,349,350,351],"jail":[693],"jcat":[58,60],"join":[147,726],"just":[181,218,242,243,439,677,739],"kb":[721,765],"kei":[10,30,84,93,94,261,340,342,343,344,345,382,383,441,599,600,601,602,603,604,605,606,607,608,609,610,611,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,721,722,723,724,753],"kek":[261],"kenv":[761],"kernel":[8,129,227,708,759,760,761],"kind":[258,260,605,657,658,659,662,705],"kit":[659],"known":[343],"ku":[722],"kv":[723,766],"kx":[724,767],"laptop":[88,106,662],"larger":[312],"last":[131,188,190,648,727],"lead":[729],"leaf":[681],"leak":[124,168,183],"left":[778,810],"length":[282,316,317,318,319,320,664],"less":[76,77,78,218,225,759],"let":[160],"level":[87,105,110,139,195,196,233,526],"libfwupdplugin":[764],"librari":[764],"like":[177,211,356,706],"limit":[177,763],"line":[355,720],"linear":[77,78,355,464],"link":[118,125,136,137,192,193],"linux":[138,194,465,761],"list":[126,156,169,261,355,373,378,380,390,464,477,754],"live":[707],"load":[3,4,10,100,101,442,654],"local":[166,659],"localstatedir":[659],"localstatedir_pkg":[659],"locat":[516,659,693],"lock":[520,659,708],"lockdir":[659],"lockdown":[708],"locker":[15,241,244,520],"logic":[6,115,118,125,135,141,148,153,163,204,210,211,236,492],"long":[726],"long-term":[439],"longer":[218],"look":[102,103,443,444,659,692,706],"lookup":[14,22,32,102,103,376,443,444],"loss":[117],"lot":[166],"low":[195,196],"low-level":[485],"low_profile_desktop":[662],"lower":[152,209,388,424],"lowest":[223,799,800,822],"lunch_box":[662],"magic":[439,533],"mai":[104,114,125,134,136,137,138,141,147,153,163,166,174,192,193,197,210,217,373,379,434,672,759,764],"main_server":[662],"major":[601,607],"make":[225],"malici":[711,713,715,716,742,744,746,747,762,763],"manag":[48,244],"manifest":[270,271,321],"manual":[132,242,243,244,270,271,321,379,434],"map":[439],"mark":[154,422,449],"match":[5,6,119,125,134,136,154,160,169,198,297,298,337,503,691,694,739,740,754],"max":[59,145,201],"maximum":[59,145,162,201,624,727],"md_set_icon":[6],"md_set_name":[6],"md_set_name_category":[6],"md_set_verfmt":[6],"mean":[117,129,136,227,491],"media":[707],"member":[766,767],"memcpi":[762],"memdup":[763],"memori":[20,76,77,78,180,674,682,683,684,685,701,706,711,713,715,716,742,744,746,747,762,763],"merg":[270,271,321],"messag":[147,331,640,818],"metadata":[6,56,149,150,151,184,185,186,205,206,207,226,372,379,390,434,439,660],"metadata_source":[660],"metainfo":[56],"method":[43,44,83,84,86,131,174,179,212,370,371],"microsoft":[337],"might":[125,355,464],"min":[146,202],"mini_pc":[662],"mini_tower":[662],"minimum":[146,202,625,679],"minor":[602,608],"mkdir":[709],"mmap":[67],"mode":[119,128,133,162,181,218,494,528],"model":[473,480],"modif":[739],"modifi":[439,672,785,812],"modul":[396],"moment":[67],"monitor":[753],"more":[125,166,276],"most":[291,334,439,492],"motherboard":[599,600,645],"mount":[514,516,519,520,521,523],"mous":[492,493],"multi_system":[662],"multipl":[131,155,174,179,211,334,725],"must":[422],"mutabl":[61,67,76],"name":[6,31,36,83,84,126,156,208,371,373,387,395,423,426,441,475,610,631,633,641,754,786],"namespac":[84,441],"necessari":[670],"need":[132,178,439,529,530,531,711,713,715,716,742,744,746,747,762,763],"nest":[270,271,272,273,321,322],"never":[762],"new":[20,52,62,63,76,77,78,81,116,117,242,243,246,256,262,264,265,266,328,330,338,354,358,359,369,439,440,446,454,463,466,502,678],"next":[179,212],"no_auto_instance_ids":[6],"no_cache":[10],"no_idle_sources":[3],"no_kernel_rebind":[8],"no_kernel_unbind":[8],"no_verify":[10],"node":[270,271,321,469,765,766,767],"non-fat":[188,190],"non-volatil":[659],"nonblock":[12],"none":[3,4,5,6,7,8,9,10,11,12,653,654,655,661],"nor":[711,713,715,716,742,744,746,747,762,763],"normal":[31,117,129,179,227],"note":[174,218,242,243,337,373,696,763],"notebook":[662],"notif":[43,44],"notifi":[43,44],"nul":[670],"number":[6,131,134,152,157,174,180,188,190,209,213,316,317,318,319,320,332,334,348,349,352,388,389,424,425,474,733,734,735,736,737,738,739],"nvram":[748,749,751,752,757,758],"o_nonblock":[12],"o_rdonli":[491,494],"o_rdwr":[491,494],"object":[48,80,136,153,159,170,171,178,224,241,242,243,264,265,270,271,272,273,309,321,322,358,359,370,375,376,377,440,450,451,452,454,467,490,764],"object-specif":[131,174],"obsolet":[449],"obvious":[439],"occur":[117],"offlin":[659],"offline_trigger":[659],"offset":[288,305,486,487,488,489,678,762],"often":[439],"on":[9,94,125,161,225,276,345,726],"onc":[179,449],"onli":[5,6,9,83,84,86,117,131,132,174,179,192,308,370,371,449,465,711,713,715,716,738,742,744,746,747,762,763],"only_quirks":[5],"only_supported":[6],"open":[6,8,12,15,174,178,197,224,242,243,394,396,472,490,491,494,509],"open_nonblock":[12],"open_read":[12],"open_write":[12],"oper":[355,464,725],"option":[61,131,135,153,174,177,188,189,190,197,210,270,271,278,279,290,302,307,308,321,726],"or":[439],"order":[125,152,209,266,281,304,373,388,397,424,660],"origin":[674],"other":[228,379,434,449,529,530,531,662],"out":[67,99,167,241,346,509,720,764],"output":[17,720],"outputhandler":[17],"over":[21,492,493],"overflow":[762],"overly-compl":[373],"overrid":[339],"overridden":[702],"owner":[259],"ownership":[242,243],"pack":[311,313,326],"packag":[76,77,78,659],"packet":[61,62,63,75,76,77,78,79],"pad":[275,300,312,356,679],"page":[61,70,74],"paramet":[123,178,224,491],"parent":[12,125,153,154,163,169,210,237,475,632,709,719],"pars":[20,57,177,262,266,270,271,293,294,295,316,317,318,319,320,321,324,454,461,654,730,739],"parser":[51],"part":[100,208,270,271,321],"partial":[174],"partit":[705],"pass":[67],"past":[762],"path":[4,138,194,460,483,514,523,659,692,699,700,702,717],"pattern":[691,694],"payload":[276,277,323,596],"pci":[119,479,493],"pend":[9,188,190],"per-devic":[439],"per-plugin":[374,375,376,377,385,392,439],"percent":[87,89,105,107,619],"percentag":[436],"perform":[140,159,195,196,216,639,711,713,715,716,725,742,744,746,747,762,763],"period":[212],"peripheral":[662],"permiss":[700],"persist":[10],"physic":[6,115,135,138,148,155,194,204,211,238,493,701],"pid":[247,251,505],"piec":[727],"pizza_box":[662],"pk":[261],"plain":[344],"platform":[138,194,506,659,698,699],"plausibl":[706],"pleas":[242],"plug":[203],"plugin":[80,83,84,86,98,108,109,126,130,131,132,153,156,160,174,176,192,198,203,210,270,271,321,355,368,370,371,373,378,379,381,384,385,386,387,388,389,391,393,394,395,396,397,399,400,401,403,404,405,406,407,408,409,410,411,413,416,417,418,419,422,423,424,425,426,434,439,441,442,464,492,493,528,529,530,531,633,659,660,661,738,787,813,824,825,826,827,828],"plugin'":[398,402,412,414,415,421],"plugin-alloc":[828],"plugin-specif":[134,180,229],"plugindir_pkg":[659],"point":[34,41,514,516],"pointer":[672],"polici":[659],"polkit_actions":[659],"poll":[175,212],"portable":[662],"posit":[275,300,664,673],"possibl":[84,126,156,189,441,648,734,738],"post":[185],"potenti":[276],"power":[88,106,275,300,664,673],"pre":[186],"pread":[486,487],"prefix":[730,739],"prepar":[176,177,405,407,419],"present":[269],"press":[218,533],"prevent":[173],"previous":[32],"primari":[118,125,136,137,192,193],"print":[212,226,309,728],"prioriti":[157,213,389,425,634],"privat":[124,168,183,374,385,828],"probe":[178,179,197],"problem":[372],"process":[17,188,190],"procf":[659],"procfs":[659],"product":[247,251,505,593,600,609,610,611],"program":[692],"programm":[134],"progress":[158,214,215,225,239],"progressbar":[225],"properli":[244],"properti":[43,44,170,172],"protocol":[635,770,788,804],"provid":[265,477,762],"proxi":[49,159,160,216,217,240,524,525,636],"psmous":[471],"public":[626],"pwrite":[488,489],"quad":[644],"queri":[175],"quickli":[225],"quirk":[5,10,18,84,101,102,103,119,126,143,156,166,177,198,392,439,440,441,442,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644],"quirksiter":[18],"rack_mount":[662],"raid":[662],"rang":[316,317,318,319,320,356],"rather":[355,464,491],"raw":[134,215,291,308,355,362,367,464,676,687,688,797,800,801,821,822,823],"re-ad":[187],"re-enumer":[218,532],"re-plug":[533],"reach":[727],"read":[8,9,12,45,46,96,134,180,347,350,357,358,359,360,361,362,455,456,457,458,459,460,482,486,487,695,696,710,711,712,713,714,715,716,762],"read-onli":[12],"readi":[6,34,41,521],"readonli":[10,494],"readonly_fs":[10],"realpath":[717],"reason":[439,762],"rebind":[8],"recogn":[138],"record":[310,325,355,464,658],"recoveri":[189,191],"recurs":[700,718],"redund":[682,683,684,685],"refcount":[153,159],"referenc":[22,96,97,456,457],"reflect":[141,153,163,210],"regist":[86,379,410,429,434,529,530,531,681],"releas":[58,161,226,227,248,252,439,771],"relev":[492],"reload":[181,420],"remaind":[727],"remov":[27,34,39,41,125,162,182,183,184,208,211,218,296,297,298,377,380,386,411,430,435,451,532,533,637,718,729,748,749,827],"replac":[93,269,343,344,439,490,725],"replug":[6,162,179,533],"replug_match_guid":[6],"report":[185,186,331,333,335,372,390,660,759],"repres":[56,80,155,203,211,263,279,290,291,302,307,308,445],"represent":[75,79,260],"request":[173,179,228,312,378,485],"requir":[98,203,220,221,223,224,312,439,449,513,520,623,671,689,709,719,733],"rescan":[187],"reserv":[658],"reset":[188,189,190,218,532],"resourc":[241],"restrict":[247,248,250],"result":[337,402,412,691,726],"retri":[6,8,16,188,189,190,191],"retry_failure":[8],"retry_open":[6],"return":[21,30,31,67,90,91,92,131,136,139,140,153,158,159,162,163,165,178,180,188,189,190,203,212,218,224,227,258,259,277,287,312,316,317,318,319,320,323,341,342,355,382,383,385,386,390,392,464,470,475,515,672,673,674,681,682,683,684,685,691,700,701,726,731,732,735,736,737,738,739,753],"revis":[476,507],"rmtree":[718],"root":[163],"routin":[398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421],"rule":[373,391,393,431,437,660],"run":[24,40,131,132,174,388,391,393,399,403,404,405,406,407,413,416,417,418,419,420,424,693,707,720],"run_after":[660],"run_before":[660],"runner":[398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421],"runtim":[85,109,119,659,764],"s0_header":[658],"s1_data_16":[658],"s2_data_24":[658],"s3_data_32":[658],"s4_reserved":[658],"s5_count_16":[658],"s6_count_24":[658],"s7_count_32":[658],"s8_termination_24":[658],"s9_termination_16":[658],"safe":[316,317,318,319,320,528,672,711,713,715,716,728,742,744,746,747,762,763],"same":[67,119,131,138,148,173,174,194,203,204,269,289,306,672],"sanit":[220,221,223],"saniti":[291],"save":[10],"scan":[21],"scheme":[732],"scope":[241],"screen":[686,687,688],"script":[693],"sealed_case_pc":[662],"search":[125,169,725],"second":[225,630,637],"section":[270,271,276,321,455],"secur":[11,104,113,114,127,399,439,445,659,755,756],"see":[23,42,51,115,241,245,255,257,261,263,327,329,337,348,353,368,439,453,462,465,501],"self":[477],"semant":[6],"semver":[734],"sens":[225],"sent":[372],"separ":[6,726],"serial":[134,180,452,789,814],"server":[372],"session":[693],"set":[3,4,5,6,7,8,9,10,11,12,31,33,34,41,58,59,71,72,73,74,82,85,105,106,107,108,109,118,123,125,132,135,136,138,148,155,160,170,174,177,178,189,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,242,251,252,253,254,265,269,280,289,299,300,301,302,303,304,305,306,307,308,331,334,335,339,356,372,379,422,423,424,425,434,445,490,491,492,493,494,510,589,594,653,654,655,661,670,671,672,691,693,719,738,754,757,758,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823],"setreport":[335],"setup":[34,41,224,347,458,459,460],"sever":[218,439,693],"sha1":[203],"sha256":[422,657],"share":[80,155,211,241],"should":[34,41,67,84,117,122,134,178,179,180,203,218,224,270,271,276,306,321,378,379,391,393,434,441,449,492,493,532,533,621,672,711,713,715,716,738,742,744,746,747,762,763],"show":[7,195,196,225,689],"show_addresses":[7],"show_ascii":[7],"shown":[92,93,639,640],"shutdown":[363,660],"sibl":[477],"sign":[60,655],"signal":[25,26,27,467],"signatur":[257,258,259,260,261,597,657],"signifi":[526],"significantli":[218],"silo":[53,56,680],"similar":[203],"simpl":[355,439,464],"singl":[155,350,351,726],"single_shot":[9],"size":[59,68,76,77,78,145,146,177,200,201,202,289,306,312,623,624,625,670,671,672,701,759,762,763],"sku":[611],"sleep":[225],"slot":[203,478],"slow":[532,533],"small":[759],"smaller":[312],"smbio":[95,96,97,339,347,453,454,455,456,457,458,459,460,461,645,646,647,648,649,662],"so":[125,203,225,227,339,378,379,434],"solv":[373],"some":[118,125,136,137,187,192,193,759,762,763],"somehow":[764],"someth":[211,533,728],"sort":[373,449,691,733],"sourc":[3,279,302,660,762],"space":[513,759],"space_saving":[662],"spawn":[17,720],"spec":[507],"special":[164],"specif":[76,77,78,82,85,92,93,94,96,97,131,167,171,174,188,190,268,270,271,292,321,340,345,439,456,457,460,691,696,705,753],"specifi":[83,270,271,321,371,373,531,703,704,710,711,712,713,714,715,741,742,743,744,745,746],"spi":[134],"split":[166,291,727],"srec":[462,463,464,658],"st":[537],"stai":[124,168,183],"standard":[534,535,536,537,538,720],"start":[43,373,439],"startnotifi":[43],"startup":[6,413],"startup.sh":[693],"state":[33,80,88,104,106,111,114,445,652,659,663,792,819],"static":[270,271,321],"statu":[6,165,175,219,438],"stick_pc":[662],"still":[174],"stop":[44],"stopnotifi":[44],"store":[206,207,659],"str":[147],"straight":[188,189,190],"string":[11,46,75,79,96,97,102,147,166,169,198,203,207,220,221,223,226,230,231,260,282,291,309,314,315,316,317,318,319,320,443,448,456,457,461,507,587,595,596,597,663,694,721,722,723,724,725,726,727,728,729,730,731,735,736,737,739,761,764,766],"strjoin":[726],"strnsplit":[727],"strpars":[316,317,318,319,320],"strsafe":[728],"strstrip":[729],"strtoull":[730],"structur":[96,456,457,645,646,647,648,649],"strwidth":[731],"stuck":[528],"sub":[246,256,328,354],"sub_notebook":[662],"subchassis":[662],"subclass":[24,31,34,40,41,180,212,270,271,321],"subclass-specif":[310,325],"subdirectori":[700],"subprocess":[720],"subsect":[356,678],"subsystem":[86,98,477,479,480,481,492,493,498],"success":[159,216,227],"successfulli":[6,131,174],"such":[241],"suggest":[218],"suitabl":[94,345],"summari":[638,790,815],"superset":[56],"supertyp":[242],"support":[6,270,271,321,427,432,439,739,760],"sure":[711,713,715,716,742,744,746,747,762,763],"switch":[117],"sync":[720,764],"sysconfdir":[659],"sysconfdir_pkg":[659],"sysf":[138,194,211,482,483,495,659],"sysfsdir_drivers":[659],"sysfsdir_fw":[659],"sysfsdir_security":[659],"sysfsdir_tpm":[659],"system":[80,87,88,89,92,93,105,106,107,143,166,198,211,337,339,445,453,518,649,662,702],"sz":[68],"tabl":[96,456,457,659],"tablet":[662],"taint":[422],"take":[129,532,533,733],"temporari":[693],"termin":[658],"test":[168,592,750],"test.fw":[270,271,321],"text":[260,270,271,321],"than":[125,218,225,276,312,355,464,491,660,759],"them":[726],"themselv":[378],"theshold":[619],"thing":[177,693],"think":[242,243],"threshold":[89,107,112,140,196,234],"thunderbolt":[528],"time":[6,8,108,131,174,179,188,190,218,225],"to":[275,300,357,664,673],"togeth":[726],"token":[310,325,355,464,727],"too":[195,196],"tool":[141,153,163,210,693],"top-level":[609,610,611],"total":[289,306,759],"tower":[662],"tpm":[659],"trail":[729],"transact":[640],"transfer":[76,77,78],"tree":[453,492,493],"tri":[266,426],"trigger":[659],"true":[206],"truncat":[8],"trust":[58],"try":[180,188,190],"tty":[9,360,361,362,365,366,367],"two":[395,397],"tyical":[126],"type":[0,119,164,242,246,256,282,328,354,463,470,515,530,645,646,647,648,649,659,663,705],"typic":[34,41,119,138,156,175,194,197,242,243,261,270,271,280,289,293,294,295,308,310,311,313,321,325,326,392,422,465],"udev":[12,23,86,98,465,470,482,492,493,499,503],"udisk":[512,699],"uefi":[257,261,529,530,531,751,752,757,758],"uint16":[316,666,710,711,735,741,742],"uint24":[317],"uint32":[318,667,712,713,736,743,744],"uint4":[319],"uint64":[668,714,715,737,745,746],"uint8":[320,669,716,747],"unbind":[8,227],"unchang":[664,673],"under":[140,270,271,321,700],"uninhibit":[228],"unix":[359,364,699],"unknown":[538,652,656,657,662],"unless":[385,730],"unlock":[414],"unmount":[520,522],"unplug":[533],"unset":[138,526],"unsign":[531,722],"untar":[693],"until":[188,190,212],"unus":[661],"up":[6,8,34,41,88,102,103,106,117,130,160,224,244,443,444,478,664,673,693],"updat":[130,140,159,173,176,185,186,195,196,216,217,228,368,415,416,417,418,419,420,529,530,531,639,640,791,792,816,817,818,819],"update_attach":[416],"update_cleanup":[417],"update_detach":[418],"update_prepar":[419],"uri":[732],"us":[3,4,5,6,7,8,9,10,11,12,15,24,34,40,41,58,60,67,72,83,84,86,90,92,93,102,103,119,121,122,125,131,132,134,140,147,155,159,174,177,180,185,186,188,190,197,198,211,215,216,226,227,242,243,244,270,271,272,273,276,281,282,283,284,285,286,289,291,304,308,309,310,312,321,322,325,331,334,355,356,368,370,371,373,378,379,386,434,439,441,442,443,444,453,464,485,490,491,494,510,512,521,522,532,533,653,654,655,659,660,661,672,674,693,697,699,707,710,711,712,713,714,715,716,727,739,741,742,743,744,745,746,747,759,762,763],"usabl":[192],"usb":[23,119,138,179,194,332,334,492,493,501,507,509,511,532],"use_blocking_io":[9],"use_config":[12],"user":[218,372,439,533,689,707],"user-configur":[180],"userspac":[227,759],"usi":[732],"usual":[439,595,596,597],"utf-8":[587],"uuid":[43,44,45,46,47],"valid":[6,94,119,121,122,345],"valu":[30,93,94,96,102,103,138,140,171,180,206,215,218,225,339,343,344,345,347,356,382,383,443,444,456,458,459,460,526,658,673,674,682,683,684,685,710,711,712,713,714,715,716,721,723,726,730,741,742,743,744,745,746,747,765,766,767],"variabl":[692,702,748,749,750,751,752,757,758,759,760],"variant":[452],"variou":[442,702,707],"vendor":[12,250,254,481,484,508,593,599,603,609,641,642,656,697,772,793,794,805,820],"vendor_from_parent":[12],"vercmp":[733],"veri":[439],"verifi":[67,153,210,270,271,321,421,661,740],"version":[6,11,82,85,108,109,117,153,210,220,221,222,223,249,253,290,291,307,308,439,531,534,535,536,537,538,601,602,604,607,608,643,644,733,734,735,736,737,738,739,740,764,795,796,797,798,799,800,801,821,822,823],"vfunc":[131,134,174,177,180,229,270,271,321],"vid":[250,254,508],"virtual":[132],"volum":[512,513,515,516,517,519,520,521,522,703,704,705],"wai":[118,125,136,137,192,193,439,711,713,715,716,742,744,746,747,762,763],"wait":[9,720],"warn":[67,195,196,212],"watch":[86],"we":[439],"well":[343],"what":[165,203,219],"when":[3,4,5,7,8,9,10,11,12,15,83,117,131,132,162,174,179,189,206,211,241,242,243,291,370,371,373,379,390,434,439,449,490,491,494,520,529,530,531,532,533,588,653,654,655,659,661,672,696,711,713,715,716,742,744,746,747,762,763],"whenev":[738],"where":[6,84,152,157,209,213,275,300,334,388,389,424,425,441,664,673,689,730,754],"whether":[706],"which":[31,34,41,58,83,117,129,140,147,148,155,160,177,189,197,211,227,263,270,271,276,281,289,304,306,321,357,368,370,371,455,491,672,678],"whitespac":[729],"whole":[225,649,720],"why":[439],"width":[731],"window":[337,761],"wish":[379,434],"with":[381],"within":[263],"without":[131,174,188,190,227,439,739],"work":[242,439,761],"would":[185,186,218,270,271,321,439,491],"writabl":[67],"write":[8,9,12,47,229,311,312,313,326,351,358,359,365,366,367,488,489,495,587,719,741,742,743,744,745,746,747],"write-onli":[12],"writer":[51],"written":[357],"wvalu":[8],"x509":[657],"xml":[270,271,272,273,321,322,765,766,767],"xmlb":[765,766,767],"yet":[386],"you":[270,271,321,339,711,713,715,716,742,744,746,747,762,763],"you'r":[711,713,715,716,742,744,746,747,762,763],"yyyymmdd":[739],"zero":[356,664,672,673],"zero-length":[672]}}