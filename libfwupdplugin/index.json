{"meta":{"ns":"FwupdPlugin","version":"1.0","generator":"gi-docgen","generator-version":"2022.1"},"symbols":[{"type":"alias","name":"DeviceInternalFlags","ctype":"FuDeviceInternalFlags","summary":"The device internal flags."},{"type":"alias","name":"EndianType","ctype":"FuEndianType","summary":"The endian type, e.g. %G_LITTLE_ENDIAN"},{"type":"alias","name":"FirmwareExportFlags","ctype":"FuFirmwareExportFlags","summary":"The firmware export flags."},{"type":"alias","name":"FirmwareFlags","ctype":"FuFirmwareFlags","summary":"The firmware flags."},{"type":"alias","name":"ProgressFlags","ctype":"FuProgressFlags","summary":"The progress internal flags."},{"type":"bitfield","name":"ArchiveFlags","ctype":"FuArchiveFlags","summary":"The flags to use when loading the archive."},{"type":"bitfield","name":"DeviceInstanceFlags","ctype":"FuDeviceInstanceFlags","summary":"The flags to use when interacting with a device instance"},{"type":"bitfield","name":"DumpFlags","ctype":"FuDumpFlags","summary":"The flags to use when configuring debugging"},{"type":"bitfield","name":"HidDeviceFlags","ctype":"FuHidDeviceFlags","summary":"Flags used when calling fu_hid_device_get_report() and fu_hid_device_set_report()."},{"type":"bitfield","name":"IOChannelFlags","ctype":"FuIOChannelFlags","summary":"The flags used when reading data from the TTY."},{"type":"bitfield","name":"IfdAccess","ctype":"FuIfdAccess","summary":"The flags to use for IFD access permissions."},{"type":"bitfield","name":"QuirksLoadFlags","ctype":"FuQuirksLoadFlags","summary":"The flags to use when loading quirks."},{"type":"bitfield","name":"SecurityAttrsFlags","ctype":"FuSecurityAttrsFlags","summary":"The flags to use when calculating an HSI version."},{"type":"bitfield","name":"UdevDeviceFlags","ctype":"FuUdevDeviceFlags","summary":"Flags used when opening the device using fu_device_open()."},{"type":"callback","name":"ArchiveIterateFunc","ctype":"FuArchiveIterateFunc","summary":"The archive iteration callback."},{"type":"callback","name":"ContextLookupIter","ctype":"FuContextLookupIter","summary":"The context lookup iteration callback."},{"type":"callback","name":"DeviceLockerFunc","ctype":"FuDeviceLockerFunc","summary":"Callback to use when opening and closing using [ctor@DeviceLocker.new_full]."},{"type":"callback","name":"DeviceRetryFunc","ctype":"FuDeviceRetryFunc","summary":"The device retry iteration callback."},{"type":"callback","name":"QuirksIter","ctype":"FuQuirksIter","summary":"The quirks iteration callback."},{"type":"callback","name":"StrsplitFunc","ctype":"FuStrsplitFunc","summary":"The fu_strsplit_full() iteration callback."},{"type":"class","name":"Archive","ctype":"FuArchive","summary":"An in-memory archive decompressor"},{"type":"class","name":"ArchiveFirmware","ctype":"FuArchiveFirmware","summary":"An archive firmware image, typically for nested firmware volumes. ..."},{"type":"class","name":"Backend","ctype":"FuBackend","summary":"An device discovery backend, for instance USB, BlueZ or ..."},{"type":"class","name":"BluezDevice","ctype":"FuBluezDevice","summary":"A BlueZ Bluetooth device.  See also: [class@FuDevice]"},{"type":"class","name":"Cabinet","ctype":"FuCabinet","summary":"Cabinet archive parser and writer.  See also: [class@FuArchive]"},{"type":"class","name":"CfiDevice","ctype":"FuCfiDevice","summary":"A chip conforming to the Common Flash Memory Interface, ..."},{"type":"class","name":"CfuOffer","ctype":"FuCfuOffer","summary":"A CFU offer. This is a 16 byte blob ..."},{"type":"class","name":"CfuPayload","ctype":"FuCfuPayload","summary":"A CFU payload. This contains of a variable number ..."},{"type":"class","name":"Chunk","ctype":"FuChunk","summary":"A optionally mutable packet of chunked data with address, ..."},{"type":"class","name":"Context","ctype":"FuContext","summary":"A context that represents the shared system state. This ..."},{"type":"class","name":"CoswidFirmware","ctype":"FuCoswidFirmware","summary":"A coSWID SWID section.  See also: [class@FuUswidFirmware]"},{"type":"class","name":"Device","ctype":"FuDevice","summary":"A physical or logical device that is exported to ..."},{"type":"class","name":"DeviceLocker","ctype":"FuDeviceLocker","summary":"Easily close a shared resource (such as a device) ..."},{"type":"class","name":"DfuFirmware","ctype":"FuDfuFirmware","summary":"A DFU firmware image.  See also: [class@FuFirmware]"},{"type":"class","name":"DfuseFirmware","ctype":"FuDfuseFirmware","summary":"A DfuSe firmware image.  See also: [class@FuDfuFirmware]"},{"type":"class","name":"EfiFirmwareFile","ctype":"FuEfiFirmwareFile","summary":"A UEFI file.  See also: [class@FuFirmware]"},{"type":"class","name":"EfiFirmwareFilesystem","ctype":"FuEfiFirmwareFilesystem","summary":"A UEFI filesystem.  See also: [class@FuFirmware]"},{"type":"class","name":"EfiFirmwareSection","ctype":"FuEfiFirmwareSection","summary":"A UEFI firmware section.  See also: [class@FuFirmware]"},{"type":"class","name":"EfiFirmwareVolume","ctype":"FuEfiFirmwareVolume","summary":"A UEFI file volume.  See also: [class@FuFirmware]"},{"type":"class","name":"EfiSignature","ctype":"FuEfiSignature","summary":"A UEFI Signature as found in an `EFI_SIGNATURE_LIST`.  ..."},{"type":"class","name":"EfiSignatureList","ctype":"FuEfiSignatureList","summary":"A UEFI signature list typically found in the `PK` ..."},{"type":"class","name":"FdtFirmware","ctype":"FuFdtFirmware","summary":"A Flattened DeviceTree firmware image.  Documented: https://devicetree-specification.readthedocs.io/en/latest/chapter5-flattened-format.html  ..."},{"type":"class","name":"FdtImage","ctype":"FuFdtImage","summary":"A Flattened DeviceTree firmware image.  See also: [class@FuFdtFirmware]"},{"type":"class","name":"Firmware","ctype":"FuFirmware","summary":"A firmware file which can have children which represent ..."},{"type":"class","name":"FitFirmware","ctype":"FuFitFirmware","summary":"A Flat Image Tree.  Documented: https://github.com/u-boot/u-boot/blob/master/doc/uImage.FIT/source_file_format.txt  See ..."},{"type":"class","name":"FmapFirmware","ctype":"FuFmapFirmware","summary":"A FMAP firmware image.  See also: [class@FuFirmware]"},{"type":"class","name":"HidDevice","ctype":"FuHidDevice","summary":"A Human Interface Device (HID) device.  See also: ..."},{"type":"class","name":"Hwids","ctype":"FuHwids","summary":"A the hardware IDs on the system.  Note, ..."},{"type":"class","name":"I2cDevice","ctype":"FuI2cDevice","summary":"A I\u00b2C device with an assigned bus number.  ..."},{"type":"class","name":"IOChannel","ctype":"FuIOChannel","summary":"A bidirectional IO channel which can be read from ..."},{"type":"class","name":"IfdBios","ctype":"FuIfdBios","summary":"An Intel BIOS section.  See also: [class@FuFirmware]"},{"type":"class","name":"IfdFirmware","ctype":"FuIfdFirmware","summary":"An Intel Flash Descriptor.  See also: [class@FuFirmware]"},{"type":"class","name":"IfdImage","ctype":"FuIfdImage","summary":"An Intel Flash Descriptor image, e.g. BIOS.  See ..."},{"type":"class","name":"IfwiCpdFirmware","ctype":"FuIfwiCpdFirmware","summary":"An Intel Code Partition Directory (aka CPD) can be ..."},{"type":"class","name":"IfwiFptFirmware","ctype":"FuIfwiFptFirmware","summary":"An Intel Flash Program Tool (aka FPT) header can ..."},{"type":"class","name":"IhexFirmware","ctype":"FuIhexFirmware","summary":"A Intel hex (ihex) firmware image.  See also: [class@FuFirmware]"},{"type":"class","name":"LinearFirmware","ctype":"FuLinearFirmware","summary":"A firmware made up of concatenated blobs of a ..."},{"type":"class","name":"MeiDevice","ctype":"FuMeiDevice","summary":"The Intel proprietary Management Engine Interface.  See also: #FuUdevDevice"},{"type":"class","name":"OpromFirmware","ctype":"FuOpromFirmware","summary":"An OptionROM can be found in nearly every PCI ..."},{"type":"class","name":"Plugin","ctype":"FuPlugin","summary":"A plugin which is used by fwupd to enumerate ..."},{"type":"class","name":"Progress","ctype":"FuProgress","summary":"Objects can use fu_progress_set_percentage() if the absolute percentage is ..."},{"type":"class","name":"Quirks","ctype":"FuQuirks","summary":"Quirks can be used to modify device behavior. When ..."},{"type":"class","name":"SecurityAttrs","ctype":"FuSecurityAttrs","summary":"A set of Host Security ID attributes that represents ..."},{"type":"class","name":"Smbios","ctype":"FuSmbios","summary":"Enumerate the SMBIOS data on the system, either using ..."},{"type":"class","name":"SrecFirmware","ctype":"FuSrecFirmware","summary":"A SREC firmware image.  See also: [class@FuFirmware]"},{"type":"class","name":"UdevDevice","ctype":"FuUdevDevice","summary":"A UDev device, typically only available on Linux.  ..."},{"type":"class","name":"UsbDevice","ctype":"FuUsbDevice","summary":"A USB device.  See also: [class@FuDevice], [class@FuHidDevice]"},{"type":"class","name":"UswidFirmware","ctype":"FuUswidFirmware","summary":"A uSWID header with multiple optionally-compressed coSWID CBOR sections. ..."},{"type":"class","name":"Volume","ctype":"FuVolume","summary":"Volume abstraction that uses UDisks"},{"type":"constant","name":"BUILD_HASH","ident":"FU_BUILD_HASH","summary":"No description available."},{"type":"constant","name":"CFU_DEVICE_FLAG_FIRST_BLOCK","ident":"FU_CFU_DEVICE_FLAG_FIRST_BLOCK","summary":"No description available."},{"type":"constant","name":"CFU_DEVICE_FLAG_LAST_BLOCK","ident":"FU_CFU_DEVICE_FLAG_LAST_BLOCK","summary":"No description available."},{"type":"constant","name":"CFU_DEVICE_OFFER_ACCEPT","ident":"FU_CFU_DEVICE_OFFER_ACCEPT","summary":"No description available."},{"type":"constant","name":"CFU_DEVICE_OFFER_BUSY","ident":"FU_CFU_DEVICE_OFFER_BUSY","summary":"No description available."},{"type":"constant","name":"CFU_DEVICE_OFFER_COMMAND","ident":"FU_CFU_DEVICE_OFFER_COMMAND","summary":"No description available."},{"type":"constant","name":"CFU_DEVICE_OFFER_NOT_SUPPORTED","ident":"FU_CFU_DEVICE_OFFER_NOT_SUPPORTED","summary":"No description available."},{"type":"constant","name":"CFU_DEVICE_OFFER_REJECT","ident":"FU_CFU_DEVICE_OFFER_REJECT","summary":"No description available."},{"type":"constant","name":"CFU_DEVICE_OFFER_SKIP","ident":"FU_CFU_DEVICE_OFFER_SKIP","summary":"No description available."},{"type":"constant","name":"CFU_DEVICE_REJECT_DEBUG_SAME_VERSION","ident":"FU_CFU_DEVICE_REJECT_DEBUG_SAME_VERSION","summary":"No description available."},{"type":"constant","name":"CFU_DEVICE_REJECT_INV_COMPONENT","ident":"FU_CFU_DEVICE_REJECT_INV_COMPONENT","summary":"No description available."},{"type":"constant","name":"CFU_DEVICE_REJECT_OLD_FIRMWARE","ident":"FU_CFU_DEVICE_REJECT_OLD_FIRMWARE","summary":"No description available."},{"type":"constant","name":"CFU_DEVICE_REJECT_SIGN_RULE","ident":"FU_CFU_DEVICE_REJECT_SIGN_RULE","summary":"No description available."},{"type":"constant","name":"CFU_DEVICE_REJECT_SWAP_PENDING","ident":"FU_CFU_DEVICE_REJECT_SWAP_PENDING","summary":"No description available."},{"type":"constant","name":"CFU_DEVICE_REJECT_VER_RELEASE_DEBUG","ident":"FU_CFU_DEVICE_REJECT_VER_RELEASE_DEBUG","summary":"No description available."},{"type":"constant","name":"CFU_DEVICE_REJECT_WRONG_BANK","ident":"FU_CFU_DEVICE_REJECT_WRONG_BANK","summary":"No description available."},{"type":"constant","name":"CFU_DEVICE_STATUS_ERROR_COMPLETE","ident":"FU_CFU_DEVICE_STATUS_ERROR_COMPLETE","summary":"No description available."},{"type":"constant","name":"CFU_DEVICE_STATUS_ERROR_CRC","ident":"FU_CFU_DEVICE_STATUS_ERROR_CRC","summary":"No description available."},{"type":"constant","name":"CFU_DEVICE_STATUS_ERROR_INVALID","ident":"FU_CFU_DEVICE_STATUS_ERROR_INVALID","summary":"No description available."},{"type":"constant","name":"CFU_DEVICE_STATUS_ERROR_INVALID_ADDR","ident":"FU_CFU_DEVICE_STATUS_ERROR_INVALID_ADDR","summary":"No description available."},{"type":"constant","name":"CFU_DEVICE_STATUS_ERROR_NO_OFFER","ident":"FU_CFU_DEVICE_STATUS_ERROR_NO_OFFER","summary":"No description available."},{"type":"constant","name":"CFU_DEVICE_STATUS_ERROR_PREPARE","ident":"FU_CFU_DEVICE_STATUS_ERROR_PREPARE","summary":"No description available."},{"type":"constant","name":"CFU_DEVICE_STATUS_ERROR_SIGNATURE","ident":"FU_CFU_DEVICE_STATUS_ERROR_SIGNATURE","summary":"No description available."},{"type":"constant","name":"CFU_DEVICE_STATUS_ERROR_VERIFY","ident":"FU_CFU_DEVICE_STATUS_ERROR_VERIFY","summary":"No description available."},{"type":"constant","name":"CFU_DEVICE_STATUS_ERROR_VERSION","ident":"FU_CFU_DEVICE_STATUS_ERROR_VERSION","summary":"No description available."},{"type":"constant","name":"CFU_DEVICE_STATUS_ERROR_WRITE","ident":"FU_CFU_DEVICE_STATUS_ERROR_WRITE","summary":"No description available."},{"type":"constant","name":"CFU_DEVICE_STATUS_SUCCESS","ident":"FU_CFU_DEVICE_STATUS_SUCCESS","summary":"No description available."},{"type":"constant","name":"CFU_DEVICE_STATUS_SWAP_PENDING","ident":"FU_CFU_DEVICE_STATUS_SWAP_PENDING","summary":"No description available."},{"type":"constant","name":"DEVICE_INTERNAL_AUTO_PAUSE_POLLING","ident":"FU_DEVICE_INTERNAL_AUTO_PAUSE_POLLING","summary":"Pause polling when reading or writing to the device"},{"type":"constant","name":"DEVICE_INTERNAL_FLAG_ATTACH_EXTRA_RESET","ident":"FU_DEVICE_INTERNAL_FLAG_ATTACH_EXTRA_RESET","summary":"Device needs resetting twice for attach after the firmware update."},{"type":"constant","name":"DEVICE_INTERNAL_FLAG_AUTO_PARENT_CHILDREN","ident":"FU_DEVICE_INTERNAL_FLAG_AUTO_PARENT_CHILDREN","summary":"Automatically assign the parent for children of this device."},{"type":"constant","name":"DEVICE_INTERNAL_FLAG_ENSURE_SEMVER","ident":"FU_DEVICE_INTERNAL_FLAG_ENSURE_SEMVER","summary":"Ensure the version is a valid semantic version, e.g. ..."},{"type":"constant","name":"DEVICE_INTERNAL_FLAG_INHERIT_ACTIVATION","ident":"FU_DEVICE_INTERNAL_FLAG_INHERIT_ACTIVATION","summary":"Inherit activation status from the history database on startup."},{"type":"constant","name":"DEVICE_INTERNAL_FLAG_INHIBIT_CHILDREN","ident":"FU_DEVICE_INTERNAL_FLAG_INHIBIT_CHILDREN","summary":"Children of the device are inhibited by the parent."},{"type":"constant","name":"DEVICE_INTERNAL_FLAG_IS_OPEN","ident":"FU_DEVICE_INTERNAL_FLAG_IS_OPEN","summary":"The device opened successfully and ready to use."},{"type":"constant","name":"DEVICE_INTERNAL_FLAG_MD_SET_ICON","ident":"FU_DEVICE_INTERNAL_FLAG_MD_SET_ICON","summary":"Set the device icon from the metadata if available."},{"type":"constant","name":"DEVICE_INTERNAL_FLAG_MD_SET_NAME","ident":"FU_DEVICE_INTERNAL_FLAG_MD_SET_NAME","summary":"Set the device name from the metadata `name` if available."},{"type":"constant","name":"DEVICE_INTERNAL_FLAG_MD_SET_NAME_CATEGORY","ident":"FU_DEVICE_INTERNAL_FLAG_MD_SET_NAME_CATEGORY","summary":"Set the device name from the metadata `category` if available."},{"type":"constant","name":"DEVICE_INTERNAL_FLAG_MD_SET_SIGNED","ident":"FU_DEVICE_INTERNAL_FLAG_MD_SET_SIGNED","summary":"Set the signed/unsigned payload from the metadata if available."},{"type":"constant","name":"DEVICE_INTERNAL_FLAG_MD_SET_VENDOR","ident":"FU_DEVICE_INTERNAL_FLAG_MD_SET_VENDOR","summary":"Set the device vendor from the metadata `developer_name` if available."},{"type":"constant","name":"DEVICE_INTERNAL_FLAG_MD_SET_VERFMT","ident":"FU_DEVICE_INTERNAL_FLAG_MD_SET_VERFMT","summary":"Set the device version format from the metadata if available."},{"type":"constant","name":"DEVICE_INTERNAL_FLAG_NONE","ident":"FU_DEVICE_INTERNAL_FLAG_NONE","summary":"No flags set."},{"type":"constant","name":"DEVICE_INTERNAL_FLAG_NO_AUTO_INSTANCE_IDS","ident":"FU_DEVICE_INTERNAL_FLAG_NO_AUTO_INSTANCE_IDS","summary":"Do not add instance IDs from the device baseclass."},{"type":"constant","name":"DEVICE_INTERNAL_FLAG_NO_AUTO_REMOVE","ident":"FU_DEVICE_INTERNAL_FLAG_NO_AUTO_REMOVE","summary":"The device is not auto removed.  Since 1.7.3"},{"type":"constant","name":"DEVICE_INTERNAL_FLAG_NO_AUTO_REMOVE_CHILDREN","ident":"FU_DEVICE_INTERNAL_FLAG_NO_AUTO_REMOVE_CHILDREN","summary":"Do not auto-remove clildren in the device list."},{"type":"constant","name":"DEVICE_INTERNAL_FLAG_NO_LID_CLOSED","ident":"FU_DEVICE_INTERNAL_FLAG_NO_LID_CLOSED","summary":"Do not allow updating when the laptop lid is closed."},{"type":"constant","name":"DEVICE_INTERNAL_FLAG_NO_PROBE","ident":"FU_DEVICE_INTERNAL_FLAG_NO_PROBE","summary":"Do not probe this device."},{"type":"constant","name":"DEVICE_INTERNAL_FLAG_NO_SERIAL_NUMBER","ident":"FU_DEVICE_INTERNAL_FLAG_NO_SERIAL_NUMBER","summary":"Do not attempt to read the device serial number."},{"type":"constant","name":"DEVICE_INTERNAL_FLAG_ONLY_SUPPORTED","ident":"FU_DEVICE_INTERNAL_FLAG_ONLY_SUPPORTED","summary":"Only devices supported in the metadata will be opened"},{"type":"constant","name":"DEVICE_INTERNAL_FLAG_ONLY_WAIT_FOR_REPLUG","ident":"FU_DEVICE_INTERNAL_FLAG_ONLY_WAIT_FOR_REPLUG","summary":"Only use the device removal delay when explicitly waiting ..."},{"type":"constant","name":"DEVICE_INTERNAL_FLAG_REPLUG_MATCH_GUID","ident":"FU_DEVICE_INTERNAL_FLAG_REPLUG_MATCH_GUID","summary":"Match GUIDs on device replug where the physical and ..."},{"type":"constant","name":"DEVICE_INTERNAL_FLAG_RETRY_OPEN","ident":"FU_DEVICE_INTERNAL_FLAG_RETRY_OPEN","summary":"Retry the device open up to 5 times if ..."},{"type":"constant","name":"DEVICE_INTERNAL_FLAG_USE_PARENT_FOR_BATTERY","ident":"FU_DEVICE_INTERNAL_FLAG_USE_PARENT_FOR_BATTERY","summary":"Use parent for the battery level and threshold."},{"type":"constant","name":"DEVICE_INTERNAL_FLAG_USE_PARENT_FOR_OPEN","ident":"FU_DEVICE_INTERNAL_FLAG_USE_PARENT_FOR_OPEN","summary":"Use parent to open and close the device."},{"type":"constant","name":"DEVICE_INTERNAL_FLAG_USE_PROXY_FALLBACK","ident":"FU_DEVICE_INTERNAL_FLAG_USE_PROXY_FALLBACK","summary":"Use parent for the battery level and threshold."},{"type":"constant","name":"DEVICE_METADATA_TBT_IS_SAFE_MODE","ident":"FU_DEVICE_METADATA_TBT_IS_SAFE_MODE","summary":"If the Thunderbolt hardware is stuck in safe mode. ..."},{"type":"constant","name":"DEVICE_METADATA_UEFI_CAPSULE_FLAGS","ident":"FU_DEVICE_METADATA_UEFI_CAPSULE_FLAGS","summary":"The capsule flags for the UEFI device, e.g. %EFI_CAPSULE_HEADER_FLAGS_PERSIST_ACROSS_RESET ..."},{"type":"constant","name":"DEVICE_METADATA_UEFI_DEVICE_KIND","ident":"FU_DEVICE_METADATA_UEFI_DEVICE_KIND","summary":"The type of UEFI device, e.g. \"system-firmware\" or \"device-firmware\" ..."},{"type":"constant","name":"DEVICE_METADATA_UEFI_FW_VERSION","ident":"FU_DEVICE_METADATA_UEFI_FW_VERSION","summary":"The firmware version of the UEFI device specified as ..."},{"type":"constant","name":"DEVICE_REMOVE_DELAY_RE_ENUMERATE","ident":"FU_DEVICE_REMOVE_DELAY_RE_ENUMERATE","summary":"The default removal delay for device re-enumeration taking into ..."},{"type":"constant","name":"DEVICE_REMOVE_DELAY_USER_REPLUG","ident":"FU_DEVICE_REMOVE_DELAY_USER_REPLUG","summary":"The default removal delay for device re-plug taking into ..."},{"type":"constant","name":"DFU_FIRMARE_VERSION_ATMEL_AVR","ident":"FU_DFU_FIRMARE_VERSION_ATMEL_AVR","summary":"The Atmel AVR version of the DFU standard in ..."},{"type":"constant","name":"DFU_FIRMARE_VERSION_DFUSE","ident":"FU_DFU_FIRMARE_VERSION_DFUSE","summary":"The DfuSe version of the DFU standard in BCD ..."},{"type":"constant","name":"DFU_FIRMARE_VERSION_DFU_1_0","ident":"FU_DFU_FIRMARE_VERSION_DFU_1_0","summary":"The 1.0 version of the DFU standard in BCD format."},{"type":"constant","name":"DFU_FIRMARE_VERSION_DFU_1_1","ident":"FU_DFU_FIRMARE_VERSION_DFU_1_1","summary":"The 1.1 version of the DFU standard in BCD format."},{"type":"constant","name":"DFU_FIRMARE_VERSION_UNKNOWN","ident":"FU_DFU_FIRMARE_VERSION_UNKNOWN","summary":"Unknown version of the DFU standard in BCD format."},{"type":"constant","name":"EFIVAR_ATTR_APPEND_WRITE","ident":"FU_EFIVAR_ATTR_APPEND_WRITE","summary":"No description available."},{"type":"constant","name":"EFIVAR_ATTR_AUTHENTICATED_WRITE_ACCESS","ident":"FU_EFIVAR_ATTR_AUTHENTICATED_WRITE_ACCESS","summary":"No description available."},{"type":"constant","name":"EFIVAR_ATTR_BOOTSERVICE_ACCESS","ident":"FU_EFIVAR_ATTR_BOOTSERVICE_ACCESS","summary":"No description available."},{"type":"constant","name":"EFIVAR_ATTR_HARDWARE_ERROR_RECORD","ident":"FU_EFIVAR_ATTR_HARDWARE_ERROR_RECORD","summary":"No description available."},{"type":"constant","name":"EFIVAR_ATTR_NON_VOLATILE","ident":"FU_EFIVAR_ATTR_NON_VOLATILE","summary":"No description available."},{"type":"constant","name":"EFIVAR_ATTR_RUNTIME_ACCESS","ident":"FU_EFIVAR_ATTR_RUNTIME_ACCESS","summary":"No description available."},{"type":"constant","name":"EFIVAR_ATTR_TIME_BASED_AUTHENTICATED_WRITE_ACCESS","ident":"FU_EFIVAR_ATTR_TIME_BASED_AUTHENTICATED_WRITE_ACCESS","summary":"No description available."},{"type":"constant","name":"EFIVAR_GUID_EFI_CAPSULE_REPORT","ident":"FU_EFIVAR_GUID_EFI_CAPSULE_REPORT","summary":"No description available."},{"type":"constant","name":"EFIVAR_GUID_EFI_GLOBAL","ident":"FU_EFIVAR_GUID_EFI_GLOBAL","summary":"No description available."},{"type":"constant","name":"EFIVAR_GUID_FWUPDATE","ident":"FU_EFIVAR_GUID_FWUPDATE","summary":"No description available."},{"type":"constant","name":"EFIVAR_GUID_SECURITY_DATABASE","ident":"FU_EFIVAR_GUID_SECURITY_DATABASE","summary":"No description available."},{"type":"constant","name":"EFIVAR_GUID_UX_CAPSULE","ident":"FU_EFIVAR_GUID_UX_CAPSULE","summary":"No description available."},{"type":"constant","name":"EFI_FIRMWARE_FILE_BIOS_GUARD","ident":"FU_EFI_FIRMWARE_FILE_BIOS_GUARD","summary":"No description available."},{"type":"constant","name":"EFI_FIRMWARE_FILE_FV_IMAGE","ident":"FU_EFI_FIRMWARE_FILE_FV_IMAGE","summary":"No description available."},{"type":"constant","name":"EFI_FIRMWARE_FILE_MICROCODE","ident":"FU_EFI_FIRMWARE_FILE_MICROCODE","summary":"No description available."},{"type":"constant","name":"EFI_FIRMWARE_SECTION_ACPI1_TABLE","ident":"FU_EFI_FIRMWARE_SECTION_ACPI1_TABLE","summary":"No description available."},{"type":"constant","name":"EFI_FIRMWARE_SECTION_ACPI2_TABLE","ident":"FU_EFI_FIRMWARE_SECTION_ACPI2_TABLE","summary":"No description available."},{"type":"constant","name":"EFI_FIRMWARE_SECTION_ESRT_TABLE","ident":"FU_EFI_FIRMWARE_SECTION_ESRT_TABLE","summary":"No description available."},{"type":"constant","name":"EFI_FIRMWARE_SECTION_LZMA_COMPRESS","ident":"FU_EFI_FIRMWARE_SECTION_LZMA_COMPRESS","summary":"No description available."},{"type":"constant","name":"EFI_FIRMWARE_SECTION_SMBIOS_TABLE","ident":"FU_EFI_FIRMWARE_SECTION_SMBIOS_TABLE","summary":"No description available."},{"type":"constant","name":"EFI_FIRMWARE_SECTION_TIANO_COMPRESS","ident":"FU_EFI_FIRMWARE_SECTION_TIANO_COMPRESS","summary":"No description available."},{"type":"constant","name":"EFI_FIRMWARE_VOLUME_GUID_APPLE_BOOT","ident":"FU_EFI_FIRMWARE_VOLUME_GUID_APPLE_BOOT","summary":"No description available."},{"type":"constant","name":"EFI_FIRMWARE_VOLUME_GUID_FFS1","ident":"FU_EFI_FIRMWARE_VOLUME_GUID_FFS1","summary":"No description available."},{"type":"constant","name":"EFI_FIRMWARE_VOLUME_GUID_FFS2","ident":"FU_EFI_FIRMWARE_VOLUME_GUID_FFS2","summary":"No description available."},{"type":"constant","name":"EFI_FIRMWARE_VOLUME_GUID_FFS3","ident":"FU_EFI_FIRMWARE_VOLUME_GUID_FFS3","summary":"No description available."},{"type":"constant","name":"EFI_FIRMWARE_VOLUME_GUID_NVRAM_EVSA","ident":"FU_EFI_FIRMWARE_VOLUME_GUID_NVRAM_EVSA","summary":"No description available."},{"type":"constant","name":"EFI_FIRMWARE_VOLUME_GUID_NVRAM_EVSA2","ident":"FU_EFI_FIRMWARE_VOLUME_GUID_NVRAM_EVSA2","summary":"No description available."},{"type":"constant","name":"EFI_FIRMWARE_VOLUME_GUID_NVRAM_NVAR","ident":"FU_EFI_FIRMWARE_VOLUME_GUID_NVRAM_NVAR","summary":"No description available."},{"type":"constant","name":"EFI_FIRMWARE_VOLUME_GUID_PFH1","ident":"FU_EFI_FIRMWARE_VOLUME_GUID_PFH1","summary":"No description available."},{"type":"constant","name":"EFI_FIRMWARE_VOLUME_GUID_PFH2","ident":"FU_EFI_FIRMWARE_VOLUME_GUID_PFH2","summary":"No description available."},{"type":"constant","name":"EFI_SIGNATURE_GUID_MICROSOFT","ident":"FU_EFI_SIGNATURE_GUID_MICROSOFT","summary":"No description available."},{"type":"constant","name":"EFI_SIGNATURE_GUID_OVMF","ident":"FU_EFI_SIGNATURE_GUID_OVMF","summary":"No description available."},{"type":"constant","name":"EFI_SIGNATURE_GUID_OVMF_LEGACY","ident":"FU_EFI_SIGNATURE_GUID_OVMF_LEGACY","summary":"No description available."},{"type":"constant","name":"EFI_SIGNATURE_GUID_ZERO","ident":"FU_EFI_SIGNATURE_GUID_ZERO","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_1","ident":"FU_FIRMWARE_ALIGNMENT_1","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_128","ident":"FU_FIRMWARE_ALIGNMENT_128","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_128K","ident":"FU_FIRMWARE_ALIGNMENT_128K","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_128M","ident":"FU_FIRMWARE_ALIGNMENT_128M","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_16","ident":"FU_FIRMWARE_ALIGNMENT_16","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_16K","ident":"FU_FIRMWARE_ALIGNMENT_16K","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_16M","ident":"FU_FIRMWARE_ALIGNMENT_16M","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_1G","ident":"FU_FIRMWARE_ALIGNMENT_1G","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_1K","ident":"FU_FIRMWARE_ALIGNMENT_1K","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_1M","ident":"FU_FIRMWARE_ALIGNMENT_1M","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_2","ident":"FU_FIRMWARE_ALIGNMENT_2","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_256","ident":"FU_FIRMWARE_ALIGNMENT_256","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_256K","ident":"FU_FIRMWARE_ALIGNMENT_256K","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_256M","ident":"FU_FIRMWARE_ALIGNMENT_256M","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_2G","ident":"FU_FIRMWARE_ALIGNMENT_2G","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_2K","ident":"FU_FIRMWARE_ALIGNMENT_2K","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_2M","ident":"FU_FIRMWARE_ALIGNMENT_2M","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_32","ident":"FU_FIRMWARE_ALIGNMENT_32","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_32K","ident":"FU_FIRMWARE_ALIGNMENT_32K","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_32M","ident":"FU_FIRMWARE_ALIGNMENT_32M","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_4","ident":"FU_FIRMWARE_ALIGNMENT_4","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_4G","ident":"FU_FIRMWARE_ALIGNMENT_4G","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_4K","ident":"FU_FIRMWARE_ALIGNMENT_4K","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_4M","ident":"FU_FIRMWARE_ALIGNMENT_4M","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_512","ident":"FU_FIRMWARE_ALIGNMENT_512","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_512K","ident":"FU_FIRMWARE_ALIGNMENT_512K","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_512M","ident":"FU_FIRMWARE_ALIGNMENT_512M","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_64","ident":"FU_FIRMWARE_ALIGNMENT_64","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_64K","ident":"FU_FIRMWARE_ALIGNMENT_64K","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_64M","ident":"FU_FIRMWARE_ALIGNMENT_64M","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_8","ident":"FU_FIRMWARE_ALIGNMENT_8","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_8K","ident":"FU_FIRMWARE_ALIGNMENT_8K","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_8M","ident":"FU_FIRMWARE_ALIGNMENT_8M","summary":"No description available."},{"type":"constant","name":"FIRMWARE_EXPORT_FLAG_ASCII_DATA","ident":"FU_FIRMWARE_EXPORT_FLAG_ASCII_DATA","summary":"Write the data as UTF-8 strings."},{"type":"constant","name":"FIRMWARE_EXPORT_FLAG_INCLUDE_DEBUG","ident":"FU_FIRMWARE_EXPORT_FLAG_INCLUDE_DEBUG","summary":"Include debug information when exporting."},{"type":"constant","name":"FIRMWARE_EXPORT_FLAG_NONE","ident":"FU_FIRMWARE_EXPORT_FLAG_NONE","summary":"No flags set."},{"type":"constant","name":"FIRMWARE_FLAG_DEDUPE_ID","ident":"FU_FIRMWARE_FLAG_DEDUPE_ID","summary":"Dedupe imges by ID."},{"type":"constant","name":"FIRMWARE_FLAG_DEDUPE_IDX","ident":"FU_FIRMWARE_FLAG_DEDUPE_IDX","summary":"Dedupe imges by IDX."},{"type":"constant","name":"FIRMWARE_FLAG_DONE_PARSE","ident":"FU_FIRMWARE_FLAG_DONE_PARSE","summary":"The firmware object has been used by fu_firmware_parse_full()."},{"type":"constant","name":"FIRMWARE_FLAG_HAS_CHECKSUM","ident":"FU_FIRMWARE_FLAG_HAS_CHECKSUM","summary":"Has a CRC or checksum to test internal consistency."},{"type":"constant","name":"FIRMWARE_FLAG_HAS_STORED_SIZE","ident":"FU_FIRMWARE_FLAG_HAS_STORED_SIZE","summary":"Encodes the image size in the firmware."},{"type":"constant","name":"FIRMWARE_FLAG_HAS_VID_PID","ident":"FU_FIRMWARE_FLAG_HAS_VID_PID","summary":"Has a vendor or product ID in the firmware."},{"type":"constant","name":"FIRMWARE_FLAG_NONE","ident":"FU_FIRMWARE_FLAG_NONE","summary":"No flags set."},{"type":"constant","name":"FIRMWARE_ID_HEADER","ident":"FU_FIRMWARE_ID_HEADER","summary":"The usual firmware ID string for the header."},{"type":"constant","name":"FIRMWARE_ID_PAYLOAD","ident":"FU_FIRMWARE_ID_PAYLOAD","summary":"The usual firmware ID string for the payload."},{"type":"constant","name":"FIRMWARE_ID_SIGNATURE","ident":"FU_FIRMWARE_ID_SIGNATURE","summary":"The usual firmware ID string for the signature."},{"type":"constant","name":"FIT_FIRMWARE_ATTR_ALGO","ident":"FU_FIT_FIRMWARE_ATTR_ALGO","summary":"The checksum algorithm for the FIT image, typically a ..."},{"type":"constant","name":"FIT_FIRMWARE_ATTR_COMPATIBLE","ident":"FU_FIT_FIRMWARE_ATTR_COMPATIBLE","summary":"The compatible metadata for the FIT image, typically a ..."},{"type":"constant","name":"FIT_FIRMWARE_ATTR_DATA","ident":"FU_FIT_FIRMWARE_ATTR_DATA","summary":"The raw data for the FIT image, typically a blob."},{"type":"constant","name":"FIT_FIRMWARE_ATTR_DATA_OFFSET","ident":"FU_FIT_FIRMWARE_ATTR_DATA_OFFSET","summary":"The external data offset after the FIT image, typically ..."},{"type":"constant","name":"FIT_FIRMWARE_ATTR_DATA_SIZE","ident":"FU_FIT_FIRMWARE_ATTR_DATA_SIZE","summary":"The data size of the external image, typically a uint32."},{"type":"constant","name":"FIT_FIRMWARE_ATTR_SKIP_OFFSET","ident":"FU_FIT_FIRMWARE_ATTR_SKIP_OFFSET","summary":"The offset to skip when writing the FIT image, ..."},{"type":"constant","name":"FIT_FIRMWARE_ATTR_STORE_OFFSET","ident":"FU_FIT_FIRMWARE_ATTR_STORE_OFFSET","summary":"The store offset for the FIT image, typically a uint32."},{"type":"constant","name":"FIT_FIRMWARE_ATTR_TIMESTAMP","ident":"FU_FIT_FIRMWARE_ATTR_TIMESTAMP","summary":"The creation timestamp of FIT image, typically a uint32."},{"type":"constant","name":"FIT_FIRMWARE_ATTR_VALUE","ident":"FU_FIT_FIRMWARE_ATTR_VALUE","summary":"The value of the checksum, which is typically a blob."},{"type":"constant","name":"FIT_FIRMWARE_ATTR_VERSION","ident":"FU_FIT_FIRMWARE_ATTR_VERSION","summary":"The version of the FIT image, typically a string, ..."},{"type":"constant","name":"FIT_FIRMWARE_ID_CONFIGURATIONS","ident":"FU_FIT_FIRMWARE_ID_CONFIGURATIONS","summary":"The usual firmware ID string for the configurations."},{"type":"constant","name":"FIT_FIRMWARE_ID_IMAGES","ident":"FU_FIT_FIRMWARE_ID_IMAGES","summary":"The usual firmware ID string for the images."},{"type":"constant","name":"FMAP_FIRMWARE_STRLEN","ident":"FU_FMAP_FIRMWARE_STRLEN","summary":"No description available."},{"type":"constant","name":"HWIDS_KEY_BASEBOARD_MANUFACTURER","ident":"FU_HWIDS_KEY_BASEBOARD_MANUFACTURER","summary":"The HwID key for the baseboard (motherboard) vendor."},{"type":"constant","name":"HWIDS_KEY_BASEBOARD_PRODUCT","ident":"FU_HWIDS_KEY_BASEBOARD_PRODUCT","summary":"The HwID key for baseboard (motherboard) product."},{"type":"constant","name":"HWIDS_KEY_BIOS_MAJOR_RELEASE","ident":"FU_HWIDS_KEY_BIOS_MAJOR_RELEASE","summary":"The HwID key for the BIOS major version."},{"type":"constant","name":"HWIDS_KEY_BIOS_MINOR_RELEASE","ident":"FU_HWIDS_KEY_BIOS_MINOR_RELEASE","summary":"The HwID key for the BIOS minor version."},{"type":"constant","name":"HWIDS_KEY_BIOS_VENDOR","ident":"FU_HWIDS_KEY_BIOS_VENDOR","summary":"The HwID key for the BIOS vendor."},{"type":"constant","name":"HWIDS_KEY_BIOS_VERSION","ident":"FU_HWIDS_KEY_BIOS_VERSION","summary":"The HwID key for the BIOS version."},{"type":"constant","name":"HWIDS_KEY_ENCLOSURE_KIND","ident":"FU_HWIDS_KEY_ENCLOSURE_KIND","summary":"The HwID key for the enclosure kind."},{"type":"constant","name":"HWIDS_KEY_FAMILY","ident":"FU_HWIDS_KEY_FAMILY","summary":"The HwID key for the deice family."},{"type":"constant","name":"HWIDS_KEY_FIRMWARE_MAJOR_RELEASE","ident":"FU_HWIDS_KEY_FIRMWARE_MAJOR_RELEASE","summary":"The HwID key for the firmware major version."},{"type":"constant","name":"HWIDS_KEY_FIRMWARE_MINOR_RELEASE","ident":"FU_HWIDS_KEY_FIRMWARE_MINOR_RELEASE","summary":"The HwID key for the firmware minor version."},{"type":"constant","name":"HWIDS_KEY_MANUFACTURER","ident":"FU_HWIDS_KEY_MANUFACTURER","summary":"The HwID key for the top-level product vendor."},{"type":"constant","name":"HWIDS_KEY_PRODUCT_NAME","ident":"FU_HWIDS_KEY_PRODUCT_NAME","summary":"The HwID key for the top-level product product name."},{"type":"constant","name":"HWIDS_KEY_PRODUCT_SKU","ident":"FU_HWIDS_KEY_PRODUCT_SKU","summary":"The HwID key for the top-level product SKU."},{"type":"constant","name":"IFWI_CPD_FIRMWARE_IDX_MANIFEST","ident":"FU_IFWI_CPD_FIRMWARE_IDX_MANIFEST","summary":"The index for the IFWI manifest image."},{"type":"constant","name":"IFWI_CPD_FIRMWARE_IDX_METADATA","ident":"FU_IFWI_CPD_FIRMWARE_IDX_METADATA","summary":"The index for the IFWI metadata image."},{"type":"constant","name":"IFWI_CPD_FIRMWARE_IDX_MODULEDATA_IDX","ident":"FU_IFWI_CPD_FIRMWARE_IDX_MODULEDATA_IDX","summary":"The index for the IFWI module data image."},{"type":"constant","name":"IFWI_FPT_FIRMWARE_IDX_CKSM","ident":"FU_IFWI_FPT_FIRMWARE_IDX_CKSM","summary":"The index for the IFWI checksum image."},{"type":"constant","name":"IFWI_FPT_FIRMWARE_IDX_FWIM","ident":"FU_IFWI_FPT_FIRMWARE_IDX_FWIM","summary":"The index for the IFWI firmware image."},{"type":"constant","name":"IFWI_FPT_FIRMWARE_IDX_IMGI","ident":"FU_IFWI_FPT_FIRMWARE_IDX_IMGI","summary":"The index for the IFWI image instance."},{"type":"constant","name":"IFWI_FPT_FIRMWARE_IDX_INFO","ident":"FU_IFWI_FPT_FIRMWARE_IDX_INFO","summary":"The index for the IFWI info image."},{"type":"constant","name":"IFWI_FPT_FIRMWARE_IDX_SDTA","ident":"FU_IFWI_FPT_FIRMWARE_IDX_SDTA","summary":"The index for the IFWI firmware data image."},{"type":"constant","name":"IHEX_FIRMWARE_RECORD_TYPE_DATA","ident":"FU_IHEX_FIRMWARE_RECORD_TYPE_DATA","summary":"No description available."},{"type":"constant","name":"IHEX_FIRMWARE_RECORD_TYPE_EOF","ident":"FU_IHEX_FIRMWARE_RECORD_TYPE_EOF","summary":"No description available."},{"type":"constant","name":"IHEX_FIRMWARE_RECORD_TYPE_EXTENDED_LINEAR","ident":"FU_IHEX_FIRMWARE_RECORD_TYPE_EXTENDED_LINEAR","summary":"No description available."},{"type":"constant","name":"IHEX_FIRMWARE_RECORD_TYPE_EXTENDED_SEGMENT","ident":"FU_IHEX_FIRMWARE_RECORD_TYPE_EXTENDED_SEGMENT","summary":"No description available."},{"type":"constant","name":"IHEX_FIRMWARE_RECORD_TYPE_SIGNATURE","ident":"FU_IHEX_FIRMWARE_RECORD_TYPE_SIGNATURE","summary":"No description available."},{"type":"constant","name":"IHEX_FIRMWARE_RECORD_TYPE_START_LINEAR","ident":"FU_IHEX_FIRMWARE_RECORD_TYPE_START_LINEAR","summary":"No description available."},{"type":"constant","name":"IHEX_FIRMWARE_RECORD_TYPE_START_SEGMENT","ident":"FU_IHEX_FIRMWARE_RECORD_TYPE_START_SEGMENT","summary":"No description available."},{"type":"constant","name":"MAJOR_VERSION","ident":"FU_MAJOR_VERSION","summary":"The compile-time major version"},{"type":"constant","name":"MICRO_VERSION","ident":"FU_MICRO_VERSION","summary":"The compile-time micro version"},{"type":"constant","name":"MINOR_VERSION","ident":"FU_MINOR_VERSION","summary":"The compile-time minor version"},{"type":"constant","name":"OPROM_FIRMWARE_COMPRESSION_TYPE_NONE","ident":"FU_OPROM_FIRMWARE_COMPRESSION_TYPE_NONE","summary":"No compression."},{"type":"constant","name":"OPROM_FIRMWARE_MACHINE_TYPE_X64","ident":"FU_OPROM_FIRMWARE_MACHINE_TYPE_X64","summary":"AMD64 machine type."},{"type":"constant","name":"OPROM_FIRMWARE_SUBSYSTEM_EFI_BOOT_SRV_DRV","ident":"FU_OPROM_FIRMWARE_SUBSYSTEM_EFI_BOOT_SRV_DRV","summary":"EFI boot."},{"type":"constant","name":"PROGRESS_FLAG_CHILD_FINISHED","ident":"FU_PROGRESS_FLAG_CHILD_FINISHED","summary":"The child completed all the expected steps."},{"type":"constant","name":"PROGRESS_FLAG_GUESSED","ident":"FU_PROGRESS_FLAG_GUESSED","summary":"The steps have not been measured on real hardware ..."},{"type":"constant","name":"PROGRESS_FLAG_NONE","ident":"FU_PROGRESS_FLAG_NONE","summary":"No flags set."},{"type":"constant","name":"PROGRESS_FLAG_NO_PROFILE","ident":"FU_PROGRESS_FLAG_NO_PROFILE","summary":"The steps cannot be accurate enough for a profile result."},{"type":"constant","name":"PROGRESS_FLAG_NO_TRACEBACK","ident":"FU_PROGRESS_FLAG_NO_TRACEBACK","summary":"The steps should not be shown in the traceback."},{"type":"constant","name":"QUIRKS_BATTERY_THRESHOLD","ident":"FU_QUIRKS_BATTERY_THRESHOLD","summary":"The quirk key for the battery threshold in percent."},{"type":"constant","name":"QUIRKS_BRANCH","ident":"FU_QUIRKS_BRANCH","summary":"The quirk key for the firmware branch."},{"type":"constant","name":"QUIRKS_CFI_DEVICE_BLOCK_SIZE","ident":"FU_QUIRKS_CFI_DEVICE_BLOCK_SIZE","summary":"The quirk key to set the CFI block size."},{"type":"constant","name":"QUIRKS_CFI_DEVICE_CMD_BLOCK_ERASE","ident":"FU_QUIRKS_CFI_DEVICE_CMD_BLOCK_ERASE","summary":"The quirk key to set the CFI block erase command."},{"type":"constant","name":"QUIRKS_CFI_DEVICE_CMD_CHIP_ERASE","ident":"FU_QUIRKS_CFI_DEVICE_CMD_CHIP_ERASE","summary":"The quirk key to set the CFI chip erase command."},{"type":"constant","name":"QUIRKS_CFI_DEVICE_CMD_PAGE_PROG","ident":"FU_QUIRKS_CFI_DEVICE_CMD_PAGE_PROG","summary":"The quirk key to set the CFI page program command."},{"type":"constant","name":"QUIRKS_CFI_DEVICE_CMD_READ_DATA","ident":"FU_QUIRKS_CFI_DEVICE_CMD_READ_DATA","summary":"The quirk key to set the CFI read data command."},{"type":"constant","name":"QUIRKS_CFI_DEVICE_CMD_READ_ID","ident":"FU_QUIRKS_CFI_DEVICE_CMD_READ_ID","summary":"The quirk key to set the CFI read ID command."},{"type":"constant","name":"QUIRKS_CFI_DEVICE_CMD_READ_ID_SZ","ident":"FU_QUIRKS_CFI_DEVICE_CMD_READ_ID_SZ","summary":"The quirk key to set the CFI read ID size."},{"type":"constant","name":"QUIRKS_CFI_DEVICE_CMD_READ_STATUS","ident":"FU_QUIRKS_CFI_DEVICE_CMD_READ_STATUS","summary":"The quirk key to set the CFI read status command."},{"type":"constant","name":"QUIRKS_CFI_DEVICE_CMD_SECTOR_ERASE","ident":"FU_QUIRKS_CFI_DEVICE_CMD_SECTOR_ERASE","summary":"The quirk key to set the CFI sector erase command."},{"type":"constant","name":"QUIRKS_CFI_DEVICE_CMD_WRITE_EN","ident":"FU_QUIRKS_CFI_DEVICE_CMD_WRITE_EN","summary":"The quirk key to set the CFI write en command."},{"type":"constant","name":"QUIRKS_CFI_DEVICE_CMD_WRITE_STATUS","ident":"FU_QUIRKS_CFI_DEVICE_CMD_WRITE_STATUS","summary":"The quirk key to set the CFI write status command."},{"type":"constant","name":"QUIRKS_CFI_DEVICE_PAGE_SIZE","ident":"FU_QUIRKS_CFI_DEVICE_PAGE_SIZE","summary":"The quirk key to set the CFI page size."},{"type":"constant","name":"QUIRKS_CFI_DEVICE_SECTOR_SIZE","ident":"FU_QUIRKS_CFI_DEVICE_SECTOR_SIZE","summary":"The quirk key to set the CFI sector size."},{"type":"constant","name":"QUIRKS_CHILDREN","ident":"FU_QUIRKS_CHILDREN","summary":"The quirk key for the children. This should contain ..."},{"type":"constant","name":"QUIRKS_COUNTERPART_GUID","ident":"FU_QUIRKS_COUNTERPART_GUID","summary":"The quirk key for the counterpart GUID."},{"type":"constant","name":"QUIRKS_FIRMWARE_GTYPE","ident":"FU_QUIRKS_FIRMWARE_GTYPE","summary":"The quirk key for the custom firmware GType."},{"type":"constant","name":"QUIRKS_FIRMWARE_SIZE","ident":"FU_QUIRKS_FIRMWARE_SIZE","summary":"The quirk key for the exact required firmware size ..."},{"type":"constant","name":"QUIRKS_FIRMWARE_SIZE_MAX","ident":"FU_QUIRKS_FIRMWARE_SIZE_MAX","summary":"The quirk key for the maximum firmware size in bytes."},{"type":"constant","name":"QUIRKS_FIRMWARE_SIZE_MIN","ident":"FU_QUIRKS_FIRMWARE_SIZE_MIN","summary":"The quirk key for the minimum firmware size in bytes."},{"type":"constant","name":"QUIRKS_FLAGS","ident":"FU_QUIRKS_FLAGS","summary":"The quirk key for the public flags."},{"type":"constant","name":"QUIRKS_GTYPE","ident":"FU_QUIRKS_GTYPE","summary":"The quirk key for the custom GType."},{"type":"constant","name":"QUIRKS_GUID","ident":"FU_QUIRKS_GUID","summary":"The quirk key for the GUID."},{"type":"constant","name":"QUIRKS_ICON","ident":"FU_QUIRKS_ICON","summary":"The quirk key for the icon."},{"type":"constant","name":"QUIRKS_INHIBIT","ident":"FU_QUIRKS_INHIBIT","summary":"The quirk key to inhibit the UPDATABLE flag and ..."},{"type":"constant","name":"QUIRKS_INSTALL_DURATION","ident":"FU_QUIRKS_INSTALL_DURATION","summary":"The quirk key for the install duration in seconds."},{"type":"constant","name":"QUIRKS_ISSUE","ident":"FU_QUIRKS_ISSUE","summary":"The quirk key to add security issues affecting a ..."},{"type":"constant","name":"QUIRKS_NAME","ident":"FU_QUIRKS_NAME","summary":"The quirk key for the name."},{"type":"constant","name":"QUIRKS_PARENT_GUID","ident":"FU_QUIRKS_PARENT_GUID","summary":"The quirk key for the parent GUID."},{"type":"constant","name":"QUIRKS_PLUGIN","ident":"FU_QUIRKS_PLUGIN","summary":"The quirk key for the plugin name."},{"type":"constant","name":"QUIRKS_PRIORITY","ident":"FU_QUIRKS_PRIORITY","summary":"The quirk key for the device priority."},{"type":"constant","name":"QUIRKS_PROTOCOL","ident":"FU_QUIRKS_PROTOCOL","summary":"The quirk key for the protocol, e.g. `org.usb.dfu`."},{"type":"constant","name":"QUIRKS_PROXY_GUID","ident":"FU_QUIRKS_PROXY_GUID","summary":"The quirk key for the proxy GUID."},{"type":"constant","name":"QUIRKS_REMOVE_DELAY","ident":"FU_QUIRKS_REMOVE_DELAY","summary":"The quirk key for the device removal delay in milliseconds."},{"type":"constant","name":"QUIRKS_SUMMARY","ident":"FU_QUIRKS_SUMMARY","summary":"The quirk key for the summary."},{"type":"constant","name":"QUIRKS_UPDATE_IMAGE","ident":"FU_QUIRKS_UPDATE_IMAGE","summary":"The quirk key for the update image shown before ..."},{"type":"constant","name":"QUIRKS_UPDATE_MESSAGE","ident":"FU_QUIRKS_UPDATE_MESSAGE","summary":"The quirk key for the update message shown after ..."},{"type":"constant","name":"QUIRKS_VENDOR","ident":"FU_QUIRKS_VENDOR","summary":"The quirk key for the vendor name."},{"type":"constant","name":"QUIRKS_VENDOR_ID","ident":"FU_QUIRKS_VENDOR_ID","summary":"The quirk key for the vendor ID."},{"type":"constant","name":"QUIRKS_VERSION","ident":"FU_QUIRKS_VERSION","summary":"The quirk key for the version."},{"type":"constant","name":"QUIRKS_VERSION_FORMAT","ident":"FU_QUIRKS_VERSION_FORMAT","summary":"The quirk key for the version format, e.g. `quad`."},{"type":"constant","name":"SMBIOS_STRUCTURE_TYPE_BASEBOARD","ident":"FU_SMBIOS_STRUCTURE_TYPE_BASEBOARD","summary":"The SMBIOS structure type for the baseboard (motherboard)."},{"type":"constant","name":"SMBIOS_STRUCTURE_TYPE_BIOS","ident":"FU_SMBIOS_STRUCTURE_TYPE_BIOS","summary":"The SMBIOS structure type for the BIOS."},{"type":"constant","name":"SMBIOS_STRUCTURE_TYPE_CHASSIS","ident":"FU_SMBIOS_STRUCTURE_TYPE_CHASSIS","summary":"The SMBIOS structure type for the chassis."},{"type":"constant","name":"SMBIOS_STRUCTURE_TYPE_LAST","ident":"FU_SMBIOS_STRUCTURE_TYPE_LAST","summary":"The last possible SMBIOS structure type."},{"type":"constant","name":"SMBIOS_STRUCTURE_TYPE_SYSTEM","ident":"FU_SMBIOS_STRUCTURE_TYPE_SYSTEM","summary":"The SMBIOS structure type for the system as a whole."},{"type":"constant","name":"VOLUME_KIND_BDP","ident":"FU_VOLUME_KIND_BDP","summary":"The GUID for the BDP."},{"type":"constant","name":"VOLUME_KIND_ESP","ident":"FU_VOLUME_KIND_ESP","summary":"The GUID for the ESP."},{"type":"content","name":"Untitled document 'env.md'","href":"env.html","summary":" When running fwupd reads some variables from your ..."},{"type":"content","name":"Untitled document 'hsi.md'","href":"hsi.html","summary":" **WARNING: This specification is still in active development: ..."},{"type":"content","name":"Untitled document 'tutorial.md'","href":"tutorial.html","summary":" ## Introduction  At the heart of fwupd ..."},{"type":"ctor","name":"bytes_new","type_name":"Chunk","ident":"fu_chunk_bytes_new","summary":"Creates a new packet of data."},{"type":"ctor","name":"new","type_name":"Archive","ident":"fu_archive_new","summary":"Parses @data as an archive and decompresses all files ..."},{"type":"ctor","name":"new","type_name":"ArchiveFirmware","ident":"fu_archive_firmware_new","summary":"Creates a new archive #FuFirmware"},{"type":"ctor","name":"new","type_name":"Cabinet","ident":"fu_cabinet_new","summary":"No description available."},{"type":"ctor","name":"new","type_name":"CfiDevice","ident":"fu_cfi_device_new","summary":"Creates a new #FuCfiDevice."},{"type":"ctor","name":"new","type_name":"CfuOffer","ident":"fu_cfu_offer_new","summary":"Creates a new #FuFirmware for a CFU offer"},{"type":"ctor","name":"new","type_name":"CfuPayload","ident":"fu_cfu_payload_new","summary":"Creates a new #FuFirmware for a CFU payload"},{"type":"ctor","name":"new","type_name":"Chunk","ident":"fu_chunk_new","summary":"Creates a new packet of chunked data."},{"type":"ctor","name":"new","type_name":"Context","ident":"fu_context_new","summary":"Creates a new #FuContext"},{"type":"ctor","name":"new","type_name":"CoswidFirmware","ident":"fu_coswid_firmware_new","summary":"Creates a new #FuFirmware of sub type coSWID"},{"type":"ctor","name":"new","type_name":"Device","ident":"fu_device_new","summary":"Creates a new #Fudevice"},{"type":"ctor","name":"new","type_name":"DeviceLocker","ident":"fu_device_locker_new","summary":"Opens the device for use. When the #FuDeviceLocker is ..."},{"type":"ctor","name":"new","type_name":"DfuFirmware","ident":"fu_dfu_firmware_new","summary":"Creates a new #FuFirmware of sub type Dfu"},{"type":"ctor","name":"new","type_name":"DfuseFirmware","ident":"fu_dfuse_firmware_new","summary":"Creates a new #FuFirmware of sub type DfuSe"},{"type":"ctor","name":"new","type_name":"EfiFirmwareFile","ident":"fu_efi_firmware_file_new","summary":"Creates a new #FuFirmware"},{"type":"ctor","name":"new","type_name":"EfiFirmwareFilesystem","ident":"fu_efi_firmware_filesystem_new","summary":"Creates a new #FuFirmware"},{"type":"ctor","name":"new","type_name":"EfiFirmwareSection","ident":"fu_efi_firmware_section_new","summary":"Creates a new #FuFirmware"},{"type":"ctor","name":"new","type_name":"EfiFirmwareVolume","ident":"fu_efi_firmware_volume_new","summary":"Creates a new #FuFirmware"},{"type":"ctor","name":"new","type_name":"EfiSignatureList","ident":"fu_efi_signature_list_new","summary":"Creates a new #FuFirmware that can parse an EFI_SIGNATURE_LIST"},{"type":"ctor","name":"new","type_name":"FdtFirmware","ident":"fu_fdt_firmware_new","summary":"Creates a new #FuFirmware of sub type FDT"},{"type":"ctor","name":"new","type_name":"FdtImage","ident":"fu_fdt_image_new","summary":"Creates a new #FuFirmware of sub type FDT image"},{"type":"ctor","name":"new","type_name":"Firmware","ident":"fu_firmware_new","summary":"Creates an empty firmware object."},{"type":"ctor","name":"new","type_name":"FitFirmware","ident":"fu_fit_firmware_new","summary":"Creates a new #FuFirmware of sub type FIT"},{"type":"ctor","name":"new","type_name":"FmapFirmware","ident":"fu_fmap_firmware_new","summary":"Creates a new #FuFirmware of sub type fmap"},{"type":"ctor","name":"new","type_name":"HidDevice","ident":"fu_hid_device_new","summary":"Creates a new HID device."},{"type":"ctor","name":"new","type_name":"Hwids","ident":"fu_hwids_new","summary":"Creates a new #FuHwids"},{"type":"ctor","name":"new","type_name":"IfdBios","ident":"fu_ifd_bios_new","summary":"Creates a new #FuFirmware"},{"type":"ctor","name":"new","type_name":"IfdFirmware","ident":"fu_ifd_firmware_new","summary":"Creates a new #FuFirmware of sub type Ifd"},{"type":"ctor","name":"new","type_name":"IfdImage","ident":"fu_ifd_image_new","summary":"Creates a new #FuFirmware"},{"type":"ctor","name":"new","type_name":"IfwiCpdFirmware","ident":"fu_ifwi_cpd_firmware_new","summary":"Creates a new #FuFirmware of Intel Code Partition Directory format"},{"type":"ctor","name":"new","type_name":"IfwiFptFirmware","ident":"fu_ifwi_fpt_firmware_new","summary":"Creates a new #FuFirmware of Intel Flash Program Tool format"},{"type":"ctor","name":"new","type_name":"IhexFirmware","ident":"fu_ihex_firmware_new","summary":"Creates a new #FuFirmware of sub type Ihex"},{"type":"ctor","name":"new","type_name":"LinearFirmware","ident":"fu_linear_firmware_new","summary":"Creates a new #FuFirmware made up of concatenated images."},{"type":"ctor","name":"new","type_name":"OpromFirmware","ident":"fu_oprom_firmware_new","summary":"Creates a new #FuFirmware of OptionROM format"},{"type":"ctor","name":"new","type_name":"Plugin","ident":"fu_plugin_new","summary":"Creates a new #FuPlugin"},{"type":"ctor","name":"new","type_name":"Progress","ident":"fu_progress_new","summary":"No description available."},{"type":"ctor","name":"new","type_name":"Quirks","ident":"fu_quirks_new","summary":"Creates a new quirks object."},{"type":"ctor","name":"new","type_name":"SecurityAttrs","ident":"fu_security_attrs_new","summary":"No description available."},{"type":"ctor","name":"new","type_name":"Smbios","ident":"fu_smbios_new","summary":"Creates a new object to parse SMBIOS data."},{"type":"ctor","name":"new","type_name":"SrecFirmware","ident":"fu_srec_firmware_new","summary":"Creates a new #FuFirmware of type SREC"},{"type":"ctor","name":"new","type_name":"UdevDevice","ident":"fu_udev_device_new","summary":"Creates a new #FuUdevDevice."},{"type":"ctor","name":"new","type_name":"UsbDevice","ident":"fu_usb_device_new","summary":"Creates a new #FuUsbDevice."},{"type":"ctor","name":"new","type_name":"UswidFirmware","ident":"fu_uswid_firmware_new","summary":"Creates a new #FuFirmware of sub type uSWID"},{"type":"ctor","name":"new_by_device","type_name":"Volume","ident":"fu_volume_new_by_device","summary":"Finds the first volume from the specified device."},{"type":"ctor","name":"new_by_devnum","type_name":"Volume","ident":"fu_volume_new_by_devnum","summary":"Finds the first volume from the specified device."},{"type":"ctor","name":"new_esp_default","type_name":"Volume","ident":"fu_volume_new_esp_default","summary":"Gets the platform default ESP"},{"type":"ctor","name":"new_esp_for_path","type_name":"Volume","ident":"fu_volume_new_esp_for_path","summary":"Gets the platform ESP using a UNIX or UDisks path"},{"type":"ctor","name":"new_file","type_name":"IOChannel","ident":"fu_io_channel_new_file","summary":"Creates a new object to write and read from."},{"type":"ctor","name":"new_from_bytes","type_name":"Firmware","ident":"fu_firmware_new_from_bytes","summary":"Creates a firmware object with the provided image set ..."},{"type":"ctor","name":"new_from_gtypes","type_name":"Firmware","ident":"fu_firmware_new_from_gtypes","summary":"Tries to parse the firmware with each #GType in order."},{"type":"ctor","name":"new_full","type_name":"DeviceLocker","ident":"fu_device_locker_new_full","summary":"Opens the device for use. When the #FuDeviceLocker is ..."},{"type":"ctor","name":"unix_new","type_name":"IOChannel","ident":"fu_io_channel_unix_new","summary":"Creates a new object to write and read from."},{"type":"enum","name":"ArchiveCompression","ctype":"FuArchiveCompression","summary":"The archive compression."},{"type":"enum","name":"ArchiveFormat","ctype":"FuArchiveFormat","summary":"The archive format."},{"type":"enum","name":"BatteryState","ctype":"FuBatteryState","summary":"The device battery state."},{"type":"enum","name":"CabinetExportFlags","ctype":"FuCabinetExportFlags","summary":"The flags to use when exporting the archive."},{"type":"enum","name":"CabinetParseFlags","ctype":"FuCabinetParseFlags","summary":"The flags to use when loading the cabinet."},{"type":"enum","name":"CabinetSignFlags","ctype":"FuCabinetSignFlags","summary":"The flags to use when signing the archive."},{"type":"enum","name":"CfiDeviceCmd","ctype":"FuCfiDeviceCmd","summary":"Commands used when calling fu_cfi_device_get_cmd()."},{"type":"enum","name":"CpuVendor","ctype":"FuCpuVendor","summary":"The CPU vendor."},{"type":"enum","name":"EfiSignatureKind","ctype":"FuEfiSignatureKind","summary":"The kind of EFI signature."},{"type":"enum","name":"FirmareSrecRecordKind","ctype":"FuFirmareSrecRecordKind","summary":"The kind of SREC record kind."},{"type":"enum","name":"IfdRegion","ctype":"FuIfdRegion","summary":"The IFD region."},{"type":"enum","name":"LidState","ctype":"FuLidState","summary":"The device lid state."},{"type":"enum","name":"PathKind","ctype":"FuPathKind","summary":"Path types to use when dynamically determining a path ..."},{"type":"enum","name":"PluginRule","ctype":"FuPluginRule","summary":"The rules used for ordering plugins. Plugins are expected ..."},{"type":"enum","name":"PluginVerifyFlags","ctype":"FuPluginVerifyFlags","summary":"Flags used when verifying, currently unused."},{"type":"enum","name":"SmbiosChassisKind","ctype":"FuSmbiosChassisKind","summary":"The system chassis kind."},{"type":"function","name":"battery_state_to_string","ident":"fu_battery_state_to_string","summary":"Converts an enumerated type to a string."},{"type":"function","name":"byte_array_align_up","ident":"fu_byte_array_align_up","summary":"Align a byte array length to a power of ..."},{"type":"function","name":"byte_array_append_bytes","ident":"fu_byte_array_append_bytes","summary":"Adds the contents of a GBytes to a byte array."},{"type":"function","name":"byte_array_append_uint16","ident":"fu_byte_array_append_uint16","summary":"Adds a 16 bit integer to a byte array."},{"type":"function","name":"byte_array_append_uint32","ident":"fu_byte_array_append_uint32","summary":"Adds a 32 bit integer to a byte array."},{"type":"function","name":"byte_array_append_uint64","ident":"fu_byte_array_append_uint64","summary":"Adds a 64 bit integer to a byte array."},{"type":"function","name":"byte_array_append_uint8","ident":"fu_byte_array_append_uint8","summary":"Adds a 8 bit integer to a byte array."},{"type":"function","name":"byte_array_compare","ident":"fu_byte_array_compare","summary":"Compares two buffers for equality."},{"type":"function","name":"byte_array_set_size","ident":"fu_byte_array_set_size","summary":"Sets the size of the GByteArray, expanding with @data ..."},{"type":"function","name":"bytes_align","ident":"fu_bytes_align","summary":"Aligns a block of memory to @blksize using the ..."},{"type":"function","name":"bytes_compare","ident":"fu_bytes_compare","summary":"Compares the buffers for equality."},{"type":"function","name":"bytes_get_contents","ident":"fu_bytes_get_contents","summary":"Reads a blob of data from a file."},{"type":"function","name":"bytes_get_contents_fd","ident":"fu_bytes_get_contents_fd","summary":"Reads a blob from a specific file descriptor.  ..."},{"type":"function","name":"bytes_get_contents_stream","ident":"fu_bytes_get_contents_stream","summary":"Reads a blob from a specific input stream."},{"type":"function","name":"bytes_get_data_safe","ident":"fu_bytes_get_data_safe","summary":"Get the byte data in the #GBytes. This data ..."},{"type":"function","name":"bytes_is_empty","ident":"fu_bytes_is_empty","summary":"Checks if a byte array are just empty (0xff) bytes."},{"type":"function","name":"bytes_new_offset","ident":"fu_bytes_new_offset","summary":"Creates a #GBytes which is a subsection of another #GBytes."},{"type":"function","name":"bytes_pad","ident":"fu_bytes_pad","summary":"Pads a GBytes to a minimum @sz with `0xff`."},{"type":"function","name":"bytes_set_contents","ident":"fu_bytes_set_contents","summary":"Writes a blob of data to a filename, creating ..."},{"type":"function","name":"cfu_device_offer_to_string","ident":"fu_cfu_device_offer_to_string","summary":"Converts an enumerated offer type to a string."},{"type":"function","name":"cfu_device_reject_to_string","ident":"fu_cfu_device_reject_to_string","summary":"Converts an enumerated reject type to a string."},{"type":"function","name":"cfu_device_status_to_string","ident":"fu_cfu_device_status_to_string","summary":"Converts an enumerated status type to a string."},{"type":"function","name":"common_align_up","ident":"fu_common_align_up","summary":"Align a value to a power of 2 boundary, ..."},{"type":"function","name":"common_check_full_disk_encryption","ident":"fu_common_check_full_disk_encryption","summary":"Checks that all FDE volumes are not going to ..."},{"type":"function","name":"common_get_memory_size","ident":"fu_common_get_memory_size","summary":"Returns the size of physical memory."},{"type":"function","name":"common_guid_is_plausible","ident":"fu_common_guid_is_plausible","summary":"Checks whether a chunk of memory looks like it ..."},{"type":"function","name":"common_is_live_media","ident":"fu_common_is_live_media","summary":"Checks if the user is running from a live ..."},{"type":"function","name":"cpu_get_vendor","ident":"fu_cpu_get_vendor","summary":"Uses CPUID to discover the CPU vendor."},{"type":"function","name":"cpuid","ident":"fu_cpuid","summary":"Calls CPUID and returns the registers for the given leaf."},{"type":"function","name":"crc16","ident":"fu_crc16","summary":"Returns the CRC-16-IBM cyclic redundancy value for the given ..."},{"type":"function","name":"crc16_full","ident":"fu_crc16_full","summary":"Returns the cyclic redundancy check value for the given ..."},{"type":"function","name":"crc32","ident":"fu_crc32","summary":"Returns the cyclic redundancy check value for the given ..."},{"type":"function","name":"crc32_full","ident":"fu_crc32_full","summary":"Returns the cyclic redundancy check value for the given ..."},{"type":"function","name":"crc8","ident":"fu_crc8","summary":"Returns the cyclic redundancy check value for the given ..."},{"type":"function","name":"crc8_full","ident":"fu_crc8_full","summary":"Returns the cyclic redundancy check value for the given ..."},{"type":"function","name":"dump_bytes","ident":"fu_dump_bytes","summary":"Dumps a byte buffer to the screen."},{"type":"function","name":"dump_full","ident":"fu_dump_full","summary":"Dumps a raw buffer to the screen."},{"type":"function","name":"dump_raw","ident":"fu_dump_raw","summary":"Dumps a raw buffer to the screen."},{"type":"function","name":"efi_guid_to_name","ident":"fu_efi_guid_to_name","summary":"Converts a GUID to the known nice name."},{"type":"function","name":"efivar_delete","ident":"fu_efivar_delete","summary":"Removes a variable from NVRAM"},{"type":"function","name":"efivar_delete_with_glob","ident":"fu_efivar_delete_with_glob","summary":"Removes a group of variables from NVRAM"},{"type":"function","name":"efivar_exists","ident":"fu_efivar_exists","summary":"Test if a variable exists"},{"type":"function","name":"efivar_get_data","ident":"fu_efivar_get_data","summary":"Gets the data from a UEFI variable in NVRAM"},{"type":"function","name":"efivar_get_data_bytes","ident":"fu_efivar_get_data_bytes","summary":"Gets the data from a UEFI variable in NVRAM"},{"type":"function","name":"efivar_get_monitor","ident":"fu_efivar_get_monitor","summary":"Returns a file monitor for a specific key."},{"type":"function","name":"efivar_get_names","ident":"fu_efivar_get_names","summary":"Gets the list of names where the GUID matches. ..."},{"type":"function","name":"efivar_secure_boot_enabled","ident":"fu_efivar_secure_boot_enabled","summary":"Determines if secure boot was enabled"},{"type":"function","name":"efivar_set_data","ident":"fu_efivar_set_data","summary":"Sets the data to a UEFI variable in NVRAM"},{"type":"function","name":"efivar_set_data_bytes","ident":"fu_efivar_set_data_bytes","summary":"Sets the data to a UEFI variable in NVRAM"},{"type":"function","name":"efivar_space_used","ident":"fu_efivar_space_used","summary":"Gets the total size used by all EFI variables. ..."},{"type":"function","name":"efivar_supported","ident":"fu_efivar_supported","summary":"Determines if the kernel supports EFI variables"},{"type":"function","name":"ifd_access_to_string","ident":"fu_ifd_access_to_string","summary":"Converts a #FuIfdAccess to a string."},{"type":"function","name":"ifd_region_to_access","ident":"fu_ifd_region_to_access","summary":"Converts a #FuIfdRegion to an access level."},{"type":"function","name":"ifd_region_to_name","ident":"fu_ifd_region_to_name","summary":"Converts a #FuIfdRegion to a name the user might recognize."},{"type":"function","name":"ifd_region_to_string","ident":"fu_ifd_region_to_string","summary":"Converts a #FuIfdRegion to a string."},{"type":"function","name":"kenv_get_string","ident":"fu_kenv_get_string","summary":"Gets a BSD kernel environment string. This will not ..."},{"type":"function","name":"kernel_check_version","ident":"fu_kernel_check_version","summary":"Determines if the system is running at least a ..."},{"type":"function","name":"kernel_get_firmware_search_path","ident":"fu_kernel_get_firmware_search_path","summary":"Reads the FU_PATH_KIND_FIRMWARE_SEARCH and returns its contents"},{"type":"function","name":"kernel_locked_down","ident":"fu_kernel_locked_down","summary":"Determines if kernel lockdown in effect"},{"type":"function","name":"kernel_reset_firmware_search_path","ident":"fu_kernel_reset_firmware_search_path","summary":"Resets the FU_PATH_KIND_FIRMWARE_SEARCH to an empty string"},{"type":"function","name":"kernel_set_firmware_search_path","ident":"fu_kernel_set_firmware_search_path","summary":"Writes path to the FU_PATH_KIND_FIRMWARE_SEARCH"},{"type":"function","name":"lid_state_to_string","ident":"fu_lid_state_to_string","summary":"Converts an enumerated type to a string."},{"type":"function","name":"memcmp_safe","ident":"fu_memcmp_safe","summary":"Compares the buffers for equality."},{"type":"function","name":"memcpy_safe","ident":"fu_memcpy_safe","summary":"Copies some memory using memcpy in a safe way. ..."},{"type":"function","name":"memdup_safe","ident":"fu_memdup_safe","summary":"Duplicates some memory using memdup in a safe way. ..."},{"type":"function","name":"memmem_safe","ident":"fu_memmem_safe","summary":"Finds a block of memory in another block of ..."},{"type":"function","name":"memread_uint16","ident":"fu_memread_uint16","summary":"Read a value from a buffer using a specified endian."},{"type":"function","name":"memread_uint16_safe","ident":"fu_memread_uint16_safe","summary":"Read a value from a buffer using a specified ..."},{"type":"function","name":"memread_uint24","ident":"fu_memread_uint24","summary":"Read a value from a buffer using a specified endian."},{"type":"function","name":"memread_uint32","ident":"fu_memread_uint32","summary":"Read a value from a buffer using a specified endian."},{"type":"function","name":"memread_uint32_safe","ident":"fu_memread_uint32_safe","summary":"Read a value from a buffer using a specified ..."},{"type":"function","name":"memread_uint64","ident":"fu_memread_uint64","summary":"Read a value from a buffer using a specified endian."},{"type":"function","name":"memread_uint64_safe","ident":"fu_memread_uint64_safe","summary":"Read a value from a buffer using a specified ..."},{"type":"function","name":"memread_uint8_safe","ident":"fu_memread_uint8_safe","summary":"Read a value from a buffer in a safe ..."},{"type":"function","name":"memwrite_uint16","ident":"fu_memwrite_uint16","summary":"Writes a value to a buffer using a specified endian."},{"type":"function","name":"memwrite_uint16_safe","ident":"fu_memwrite_uint16_safe","summary":"Write a value to a buffer using a specified ..."},{"type":"function","name":"memwrite_uint24","ident":"fu_memwrite_uint24","summary":"Writes a value to a buffer using a specified endian."},{"type":"function","name":"memwrite_uint32","ident":"fu_memwrite_uint32","summary":"Writes a value to a buffer using a specified endian."},{"type":"function","name":"memwrite_uint32_safe","ident":"fu_memwrite_uint32_safe","summary":"Write a value to a buffer using a specified ..."},{"type":"function","name":"memwrite_uint64","ident":"fu_memwrite_uint64","summary":"Writes a value to a buffer using a specified endian."},{"type":"function","name":"memwrite_uint64_safe","ident":"fu_memwrite_uint64_safe","summary":"Write a value to a buffer using a specified ..."},{"type":"function","name":"memwrite_uint8_safe","ident":"fu_memwrite_uint8_safe","summary":"Write a value to a buffer in a safe ..."},{"type":"function","name":"path_find_program","ident":"fu_path_find_program","summary":"Looks for a program in the PATH variable"},{"type":"function","name":"path_fnmatch","ident":"fu_path_fnmatch","summary":"Matches a string against a glob pattern."},{"type":"function","name":"path_from_kind","ident":"fu_path_from_kind","summary":"Gets a fwupd-specific system path. These can be overridden ..."},{"type":"function","name":"path_get_files","ident":"fu_path_get_files","summary":"Returns every file found under @directory, and any subdirectory. ..."},{"type":"function","name":"path_glob","ident":"fu_path_glob","summary":"Returns all the filenames that match a specific glob ..."},{"type":"function","name":"path_mkdir","ident":"fu_path_mkdir","summary":"Creates any required directories, including any parent directories."},{"type":"function","name":"path_mkdir_parent","ident":"fu_path_mkdir_parent","summary":"Creates any required directories, including any parent directories."},{"type":"function","name":"path_rmtree","ident":"fu_path_rmtree","summary":"Recursively removes a directory."},{"type":"function","name":"string_append","ident":"fu_string_append","summary":"Appends a key and string value to a string"},{"type":"function","name":"string_append_kb","ident":"fu_string_append_kb","summary":"Appends a key and boolean value to a string"},{"type":"function","name":"string_append_ku","ident":"fu_string_append_ku","summary":"Appends a key and unsigned integer to a string"},{"type":"function","name":"string_append_kx","ident":"fu_string_append_kx","summary":"Appends a key and hex integer to a string"},{"type":"function","name":"string_replace","ident":"fu_string_replace","summary":"Performs multiple search and replace operations on the given string."},{"type":"function","name":"strjoin","ident":"fu_strjoin","summary":"Joins an array of strings together to form one ..."},{"type":"function","name":"strsafe","ident":"fu_strsafe","summary":"Converts a string into something that can be safely printed."},{"type":"function","name":"strsplit","ident":"fu_strsplit","summary":"Splits a string into a maximum of @max_tokens pieces, ..."},{"type":"function","name":"strsplit_full","ident":"fu_strsplit_full","summary":"Splits the string, calling the given function for each ..."},{"type":"function","name":"strstrip","ident":"fu_strstrip","summary":"Removes leading and trailing whitespace from a constant string."},{"type":"function","name":"strtobool","ident":"fu_strtobool","summary":"Converts a string value to a boolean. Only `true` ..."},{"type":"function","name":"strtoull","ident":"fu_strtoull","summary":"Converts a string value to an integer. Values are ..."},{"type":"function","name":"strwidth","ident":"fu_strwidth","summary":"Returns the width of the string in displayed characters ..."},{"type":"function","name":"sum16","ident":"fu_sum16","summary":"Returns the arithmetic sum of all bytes in @buf, ..."},{"type":"function","name":"sum16_bytes","ident":"fu_sum16_bytes","summary":"Returns the arithmetic sum of all bytes in @blob, ..."},{"type":"function","name":"sum16w","ident":"fu_sum16w","summary":"Returns the arithmetic sum of all bytes in @buf, ..."},{"type":"function","name":"sum16w_bytes","ident":"fu_sum16w_bytes","summary":"Returns the arithmetic sum of all bytes in @blob, ..."},{"type":"function","name":"sum32","ident":"fu_sum32","summary":"Returns the arithmetic sum of all bytes in @buf, ..."},{"type":"function","name":"sum32_bytes","ident":"fu_sum32_bytes","summary":"Returns the arithmetic sum of all bytes in @blob, ..."},{"type":"function","name":"sum32w","ident":"fu_sum32w","summary":"Returns the arithmetic sum of all bytes in @buf, ..."},{"type":"function","name":"sum32w_bytes","ident":"fu_sum32w_bytes","summary":"Returns the arithmetic sum of all bytes in @blob, ..."},{"type":"function","name":"sum8","ident":"fu_sum8","summary":"Returns the arithmetic sum of all bytes in @buf."},{"type":"function","name":"sum8_bytes","ident":"fu_sum8_bytes","summary":"Returns the arithmetic sum of all bytes in @blob."},{"type":"function","name":"version_compare","ident":"fu_version_compare","summary":"Compares version numbers for sorting taking into account the ..."},{"type":"function","name":"version_ensure_semver","ident":"fu_version_ensure_semver","summary":"Builds a semver from the possibly crazy version number. ..."},{"type":"function","name":"version_from_uint16","ident":"fu_version_from_uint16","summary":"Returns a dotted decimal version string from a 16 ..."},{"type":"function","name":"version_from_uint32","ident":"fu_version_from_uint32","summary":"Returns a dotted decimal version string from a 32 ..."},{"type":"function","name":"version_from_uint64","ident":"fu_version_from_uint64","summary":"Returns a dotted decimal version string from a 64 ..."},{"type":"function","name":"version_guess_format","ident":"fu_version_guess_format","summary":"Guesses the version format from the version number. This ..."},{"type":"function","name":"version_parse_from_format","ident":"fu_version_parse_from_format","summary":"Returns a dotted decimal version string from a version ..."},{"type":"function","name":"version_string","ident":"fu_version_string","summary":"Gets the libfwupdplugin installed runtime version.  This may ..."},{"type":"function","name":"version_verify_format","ident":"fu_version_verify_format","summary":"Verifies if a version matches the input format."},{"type":"function","name":"xmlb_builder_insert_kb","ident":"fu_xmlb_builder_insert_kb","summary":"Convenience function to add an XML node with a ..."},{"type":"function","name":"xmlb_builder_insert_kv","ident":"fu_xmlb_builder_insert_kv","summary":"Convenience function to add an XML node with a ..."},{"type":"function","name":"xmlb_builder_insert_kx","ident":"fu_xmlb_builder_insert_kx","summary":"Convenience function to add an XML node with an ..."},{"type":"function_macro","name":"CHECK_VERSION","ident":"FU_CHECK_VERSION","summary":"Check whether a fwupd version equal to or greater ..."},{"type":"function_macro","name":"IFD_FREG_BASE","ident":"FU_IFD_FREG_BASE","summary":"No description available."},{"type":"function_macro","name":"IFD_FREG_LIMIT","ident":"FU_IFD_FREG_LIMIT","summary":"No description available."},{"type":"function_macro","name":"device_add_checksum","ident":"fu_device_add_checksum","summary":"No description available."},{"type":"function_macro","name":"device_add_icon","ident":"fu_device_add_icon","summary":"No description available."},{"type":"function_macro","name":"device_add_issue","ident":"fu_device_add_issue","summary":"No description available."},{"type":"function_macro","name":"device_add_protocol","ident":"fu_device_add_protocol","summary":"No description available."},{"type":"function_macro","name":"device_add_release","ident":"fu_device_add_release","summary":"No description available."},{"type":"function_macro","name":"device_add_vendor_id","ident":"fu_device_add_vendor_id","summary":"No description available."},{"type":"function_macro","name":"device_get_branch","ident":"fu_device_get_branch","summary":"No description available."},{"type":"function_macro","name":"device_get_checksums","ident":"fu_device_get_checksums","summary":"No description available."},{"type":"function_macro","name":"device_get_composite_id","ident":"fu_device_get_composite_id","summary":"No description available."},{"type":"function_macro","name":"device_get_created","ident":"fu_device_get_created","summary":"No description available."},{"type":"function_macro","name":"device_get_flags","ident":"fu_device_get_flags","summary":"No description available."},{"type":"function_macro","name":"device_get_flashes_left","ident":"fu_device_get_flashes_left","summary":"No description available."},{"type":"function_macro","name":"device_get_guid_default","ident":"fu_device_get_guid_default","summary":"No description available."},{"type":"function_macro","name":"device_get_guids","ident":"fu_device_get_guids","summary":"No description available."},{"type":"function_macro","name":"device_get_icons","ident":"fu_device_get_icons","summary":"No description available."},{"type":"function_macro","name":"device_get_id","ident":"fu_device_get_id","summary":"No description available."},{"type":"function_macro","name":"device_get_install_duration","ident":"fu_device_get_install_duration","summary":"No description available."},{"type":"function_macro","name":"device_get_instance_ids","ident":"fu_device_get_instance_ids","summary":"No description available."},{"type":"function_macro","name":"device_get_issues","ident":"fu_device_get_issues","summary":"No description available."},{"type":"function_macro","name":"device_get_modified","ident":"fu_device_get_modified","summary":"No description available."},{"type":"function_macro","name":"device_get_name","ident":"fu_device_get_name","summary":"No description available."},{"type":"function_macro","name":"device_get_plugin","ident":"fu_device_get_plugin","summary":"No description available."},{"type":"function_macro","name":"device_get_protocols","ident":"fu_device_get_protocols","summary":"No description available."},{"type":"function_macro","name":"device_get_serial","ident":"fu_device_get_serial","summary":"No description available."},{"type":"function_macro","name":"device_get_summary","ident":"fu_device_get_summary","summary":"No description available."},{"type":"function_macro","name":"device_get_update_error","ident":"fu_device_get_update_error","summary":"No description available."},{"type":"function_macro","name":"device_get_update_image","ident":"fu_device_get_update_image","summary":"No description available."},{"type":"function_macro","name":"device_get_update_message","ident":"fu_device_get_update_message","summary":"No description available."},{"type":"function_macro","name":"device_get_update_state","ident":"fu_device_get_update_state","summary":"No description available."},{"type":"function_macro","name":"device_get_vendor","ident":"fu_device_get_vendor","summary":"No description available."},{"type":"function_macro","name":"device_get_vendor_ids","ident":"fu_device_get_vendor_ids","summary":"No description available."},{"type":"function_macro","name":"device_get_version","ident":"fu_device_get_version","summary":"No description available."},{"type":"function_macro","name":"device_get_version_bootloader","ident":"fu_device_get_version_bootloader","summary":"No description available."},{"type":"function_macro","name":"device_get_version_bootloader_raw","ident":"fu_device_get_version_bootloader_raw","summary":"No description available."},{"type":"function_macro","name":"device_get_version_build_date","ident":"fu_device_get_version_build_date","summary":"No description available."},{"type":"function_macro","name":"device_get_version_format","ident":"fu_device_get_version_format","summary":"No description available."},{"type":"function_macro","name":"device_get_version_lowest","ident":"fu_device_get_version_lowest","summary":"No description available."},{"type":"function_macro","name":"device_get_version_lowest_raw","ident":"fu_device_get_version_lowest_raw","summary":"No description available."},{"type":"function_macro","name":"device_get_version_raw","ident":"fu_device_get_version_raw","summary":"No description available."},{"type":"function_macro","name":"device_has_flag","ident":"fu_device_has_flag","summary":"No description available."},{"type":"function_macro","name":"device_has_icon","ident":"fu_device_has_icon","summary":"No description available."},{"type":"function_macro","name":"device_has_instance_id","ident":"fu_device_has_instance_id","summary":"No description available."},{"type":"function_macro","name":"device_has_protocol","ident":"fu_device_has_protocol","summary":"No description available."},{"type":"function_macro","name":"device_has_vendor_id","ident":"fu_device_has_vendor_id","summary":"No description available."},{"type":"function_macro","name":"device_set_branch","ident":"fu_device_set_branch","summary":"No description available."},{"type":"function_macro","name":"device_set_created","ident":"fu_device_set_created","summary":"No description available."},{"type":"function_macro","name":"device_set_description","ident":"fu_device_set_description","summary":"No description available."},{"type":"function_macro","name":"device_set_flags","ident":"fu_device_set_flags","summary":"No description available."},{"type":"function_macro","name":"device_set_flashes_left","ident":"fu_device_set_flashes_left","summary":"No description available."},{"type":"function_macro","name":"device_set_install_duration","ident":"fu_device_set_install_duration","summary":"No description available."},{"type":"function_macro","name":"device_set_modified","ident":"fu_device_set_modified","summary":"No description available."},{"type":"function_macro","name":"device_set_plugin","ident":"fu_device_set_plugin","summary":"No description available."},{"type":"function_macro","name":"device_set_serial","ident":"fu_device_set_serial","summary":"No description available."},{"type":"function_macro","name":"device_set_summary","ident":"fu_device_set_summary","summary":"No description available."},{"type":"function_macro","name":"device_set_update_error","ident":"fu_device_set_update_error","summary":"No description available."},{"type":"function_macro","name":"device_set_update_image","ident":"fu_device_set_update_image","summary":"No description available."},{"type":"function_macro","name":"device_set_update_message","ident":"fu_device_set_update_message","summary":"No description available."},{"type":"function_macro","name":"device_set_version_bootloader_raw","ident":"fu_device_set_version_bootloader_raw","summary":"No description available."},{"type":"function_macro","name":"device_set_version_build_date","ident":"fu_device_set_version_build_date","summary":"No description available."},{"type":"function_macro","name":"device_set_version_lowest_raw","ident":"fu_device_set_version_lowest_raw","summary":"No description available."},{"type":"function_macro","name":"device_set_version_raw","ident":"fu_device_set_version_raw","summary":"No description available."},{"type":"function_macro","name":"plugin_add_flag","ident":"fu_plugin_add_flag","summary":"No description available."},{"type":"function_macro","name":"plugin_get_flags","ident":"fu_plugin_get_flags","summary":"No description available."},{"type":"function_macro","name":"plugin_has_flag","ident":"fu_plugin_has_flag","summary":"No description available."},{"type":"function_macro","name":"plugin_remove_flag","ident":"fu_plugin_remove_flag","summary":"No description available."},{"type":"method","name":"activate","type_name":"Device","ident":"fu_device_activate","summary":"Activates up a device, which normally means the device ..."},{"type":"method","name":"add_child","type_name":"Device","ident":"fu_device_add_child","summary":"Sets any child device. An child device is logically ..."},{"type":"method","name":"add_chunk","type_name":"Firmware","ident":"fu_firmware_add_chunk","summary":"Adds a chunk to the image."},{"type":"method","name":"add_compile_version","type_name":"Context","ident":"fu_context_add_compile_version","summary":"Sets a compile-time version of a specific dependency."},{"type":"method","name":"add_counterpart_guid","type_name":"Device","ident":"fu_device_add_counterpart_guid","summary":"Adds a GUID to the device. If the @guid ..."},{"type":"method","name":"add_device_gtype","type_name":"Plugin","ident":"fu_plugin_add_device_gtype","summary":"Adds the device #GType which is used when creating ..."},{"type":"method","name":"add_entry","type_name":"Archive","ident":"fu_archive_add_entry","summary":"Adds, or replaces an entry to an archive."},{"type":"method","name":"add_file","type_name":"Cabinet","ident":"fu_cabinet_add_file","summary":"Adds a file to the silo."},{"type":"method","name":"add_firmware_gtype","type_name":"Context","ident":"fu_context_add_firmware_gtype","summary":"Adds a firmware #GType which is used when creating ..."},{"type":"method","name":"add_firmware_gtype","type_name":"Plugin","ident":"fu_plugin_add_firmware_gtype","summary":"Adds a firmware #GType which is used when creating ..."},{"type":"method","name":"add_flag","type_name":"Device","ident":"fu_device_add_flag","summary":"Adds a device flag to the device."},{"type":"method","name":"add_flag","type_name":"Firmware","ident":"fu_firmware_add_flag","summary":"Adds a specific firmware flag to the firmware."},{"type":"method","name":"add_flag","type_name":"HidDevice","ident":"fu_hid_device_add_flag","summary":"Adds a flag to be used for all set ..."},{"type":"method","name":"add_flag","type_name":"Progress","ident":"fu_progress_add_flag","summary":"Adds a flag."},{"type":"method","name":"add_guid","type_name":"Device","ident":"fu_device_add_guid","summary":"Adds a GUID to the device. If the @guid ..."},{"type":"method","name":"add_guid_full","type_name":"Device","ident":"fu_device_add_guid_full","summary":"Adds a GUID to the device. If the @guid ..."},{"type":"method","name":"add_image","type_name":"Firmware","ident":"fu_firmware_add_image","summary":"Adds an image to the firmware.  If %FU_FIRMWARE_FLAG_DEDUPE_ID ..."},{"type":"method","name":"add_instance_id","type_name":"Device","ident":"fu_device_add_instance_id","summary":"Adds an instance ID to the device. If the ..."},{"type":"method","name":"add_instance_id_full","type_name":"Device","ident":"fu_device_add_instance_id_full","summary":"Adds an instance ID with all parameters set"},{"type":"method","name":"add_instance_str","type_name":"Device","ident":"fu_device_add_instance_str","summary":"Assign a value for the @key."},{"type":"method","name":"add_instance_strsafe","type_name":"Device","ident":"fu_device_add_instance_strsafe","summary":"Assign a sanitized value for the @key."},{"type":"method","name":"add_instance_strup","type_name":"Device","ident":"fu_device_add_instance_strup","summary":"Assign a uppercase value for the @key."},{"type":"method","name":"add_instance_u16","type_name":"Device","ident":"fu_device_add_instance_u16","summary":"Assign a value to the @key, which is padded ..."},{"type":"method","name":"add_instance_u32","type_name":"Device","ident":"fu_device_add_instance_u32","summary":"Assign a value to the @key, which is padded ..."},{"type":"method","name":"add_instance_u4","type_name":"Device","ident":"fu_device_add_instance_u4","summary":"Assign a value to the @key, which is padded ..."},{"type":"method","name":"add_instance_u8","type_name":"Device","ident":"fu_device_add_instance_u8","summary":"Assign a value to the @key, which is padded ..."},{"type":"method","name":"add_interface","type_name":"UsbDevice","ident":"fu_usb_device_add_interface","summary":"Adds an interface that will be claimed on `->open()` ..."},{"type":"method","name":"add_internal_flag","type_name":"Device","ident":"fu_device_add_internal_flag","summary":"Adds a private flag that stays internal to the ..."},{"type":"method","name":"add_parent_guid","type_name":"Device","ident":"fu_device_add_parent_guid","summary":"Sets any parent device using a GUID. An parent ..."},{"type":"method","name":"add_parent_physical_id","type_name":"Device","ident":"fu_device_add_parent_physical_id","summary":"Sets any parent device using the physical ID. An ..."},{"type":"method","name":"add_patch","type_name":"Firmware","ident":"fu_firmware_add_patch","summary":"Adds a byte patch at a specific offset. If ..."},{"type":"method","name":"add_possible_key","type_name":"Quirks","ident":"fu_quirks_add_possible_key","summary":"Adds a possible quirk key. If added by a ..."},{"type":"method","name":"add_possible_plugin","type_name":"Device","ident":"fu_device_add_possible_plugin","summary":"Adds a plugin name to the list of plugins ..."},{"type":"method","name":"add_private_flag","type_name":"Device","ident":"fu_device_add_private_flag","summary":"Adds a private flag that can be used by ..."},{"type":"method","name":"add_problem","type_name":"Device","ident":"fu_device_add_problem","summary":"Prevent the device from being updated, changing it from ..."},{"type":"method","name":"add_quirk_key","type_name":"Context","ident":"fu_context_add_quirk_key","summary":"Adds a possible quirk key. If added by a ..."},{"type":"method","name":"add_report_metadata","type_name":"Plugin","ident":"fu_plugin_add_report_metadata","summary":"Sets any additional metadata to be included in the ..."},{"type":"method","name":"add_rule","type_name":"Plugin","ident":"fu_plugin_add_rule","summary":"If the plugin name is found, the rule will ..."},{"type":"method","name":"add_runtime_version","type_name":"Context","ident":"fu_context_add_runtime_version","summary":"Sets a runtime version of a specific dependency."},{"type":"method","name":"add_security_attrs","type_name":"Device","ident":"fu_device_add_security_attrs","summary":"Adds HSI security attributes."},{"type":"method","name":"add_smbios_override","type_name":"Hwids","ident":"fu_hwids_add_smbios_override","summary":"Sets SMBIOS override values so you can emulate another ..."},{"type":"method","name":"add_step","type_name":"Progress","ident":"fu_progress_add_step","summary":"This sets the step weighting, which you will want ..."},{"type":"method","name":"add_string","type_name":"Device","ident":"fu_device_add_string","summary":"Add daemon-specific device metadata to an existing string."},{"type":"method","name":"add_udev_subsystem","type_name":"Context","ident":"fu_context_add_udev_subsystem","summary":"Registers the udev subsystem to be watched by the ..."},{"type":"method","name":"add_udev_subsystem","type_name":"Plugin","ident":"fu_plugin_add_udev_subsystem","summary":"Registers the udev subsystem to be watched by the ..."},{"type":"method","name":"alloc_data","type_name":"Plugin","ident":"fu_plugin_alloc_data","summary":"Allocates the per-plugin allocated private data."},{"type":"method","name":"append","type_name":"SecurityAttrs","ident":"fu_security_attrs_append","summary":"Adds a #FwupdSecurityAttr to the array."},{"type":"method","name":"append_internal","type_name":"SecurityAttrs","ident":"fu_security_attrs_append_internal","summary":"Adds a #FwupdSecurityAttr to the array with no sanity checks."},{"type":"method","name":"attach","type_name":"Device","ident":"fu_device_attach","summary":"Attaches a device from the bootloader into application mode."},{"type":"method","name":"attach_full","type_name":"Device","ident":"fu_device_attach_full","summary":"Attaches a device from the bootloader into application mode."},{"type":"method","name":"bind_driver","type_name":"Device","ident":"fu_device_bind_driver","summary":"Binds a driver to the device, which normally means ..."},{"type":"method","name":"build","type_name":"Firmware","ident":"fu_firmware_build","summary":"Builds a firmware from an XML manifest. The manifest ..."},{"type":"method","name":"build_from_xml","type_name":"Firmware","ident":"fu_firmware_build_from_xml","summary":"Builds a firmware from an XML manifest. The manifest ..."},{"type":"method","name":"build_instance_id","type_name":"Device","ident":"fu_device_build_instance_id","summary":"Creates an instance ID from a prefix and some ..."},{"type":"method","name":"build_instance_id_quirk","type_name":"Device","ident":"fu_device_build_instance_id_quirk","summary":"Creates an quirk-only instance ID from a prefix and ..."},{"type":"method","name":"cache_add","type_name":"Plugin","ident":"fu_plugin_cache_add","summary":"Adds an object to the per-plugin cache."},{"type":"method","name":"cache_lookup","type_name":"Plugin","ident":"fu_plugin_cache_lookup","summary":"Finds an object in the per-plugin cache."},{"type":"method","name":"cache_remove","type_name":"Plugin","ident":"fu_plugin_cache_remove","summary":"Removes an object from the per-plugin cache."},{"type":"method","name":"calculate_hsi","type_name":"SecurityAttrs","ident":"fu_security_attrs_calculate_hsi","summary":"Calculates the HSI string from the appended attributes."},{"type":"method","name":"check_free_space","type_name":"Volume","ident":"fu_volume_check_free_space","summary":"Checks the volume for required space."},{"type":"method","name":"check_jedec_cmd","type_name":"IfdFirmware","ident":"fu_ifd_firmware_check_jedec_cmd","summary":"Checks a JEDEC command to see if it has ..."},{"type":"method","name":"chip_select","type_name":"CfiDevice","ident":"fu_cfi_device_chip_select","summary":"Sets the chip select value."},{"type":"method","name":"chip_select_locker_new","type_name":"CfiDevice","ident":"fu_cfi_device_chip_select_locker_new","summary":"Creates a custom device locker that asserts and deasserts ..."},{"type":"method","name":"cleanup","type_name":"Device","ident":"fu_device_cleanup","summary":"Cleans up a device after an update. A different ..."},{"type":"method","name":"close","type_name":"Device","ident":"fu_device_close","summary":"Closes a device, optionally running a object-specific vfunc.  ..."},{"type":"method","name":"close","type_name":"DeviceLocker","ident":"fu_device_locker_close","summary":"Closes the locker before it gets cleaned up.  ..."},{"type":"method","name":"coldplug","type_name":"Backend","ident":"fu_backend_coldplug","summary":"Adds devices using the subclassed backend. If [method@FuBackend.setup] has ..."},{"type":"method","name":"connect","type_name":"MeiDevice","ident":"fu_mei_device_connect","summary":"Connects to the MEI device for a specific GUID."},{"type":"method","name":"convert_instance_ids","type_name":"Device","ident":"fu_device_convert_instance_ids","summary":"Converts all the Device instance IDs added using fu_device_add_instance_id() ..."},{"type":"method","name":"depsolve","type_name":"SecurityAttrs","ident":"fu_security_attrs_depsolve","summary":"Marks any attributes with %FWUPD_SECURITY_ATTR_FLAG_OBSOLETED that have been defined ..."},{"type":"method","name":"detach","type_name":"Device","ident":"fu_device_detach","summary":"Detaches a device from the application into bootloader mode."},{"type":"method","name":"detach_full","type_name":"Device","ident":"fu_device_detach_full","summary":"Detaches a device from the application into bootloader mode."},{"type":"method","name":"device_add","type_name":"Plugin","ident":"fu_plugin_device_add","summary":"Asks the daemon to add a device to the ..."},{"type":"method","name":"device_added","type_name":"Backend","ident":"fu_backend_device_added","summary":"Emits a signal that indicates the device has been added."},{"type":"method","name":"device_changed","type_name":"Backend","ident":"fu_backend_device_changed","summary":"Emits a signal that indicates the device has been changed."},{"type":"method","name":"device_register","type_name":"Plugin","ident":"fu_plugin_device_register","summary":"Registers the device with other plugins so they can ..."},{"type":"method","name":"device_remove","type_name":"Plugin","ident":"fu_plugin_device_remove","summary":"Asks the daemon to remove a device from the ..."},{"type":"method","name":"device_removed","type_name":"Backend","ident":"fu_backend_device_removed","summary":"Emits a signal that indicates the device has been removed."},{"type":"method","name":"dump_firmware","type_name":"Device","ident":"fu_device_dump_firmware","summary":"Reads the raw firmware image from the device by ..."},{"type":"method","name":"emit_changed","type_name":"UdevDevice","ident":"fu_udev_device_emit_changed","summary":"Emits the ::changed signal for the object."},{"type":"method","name":"emit_request","type_name":"Device","ident":"fu_device_emit_request","summary":"Emit a request from a plugin to the client."},{"type":"method","name":"ensure_id","type_name":"Device","ident":"fu_device_ensure_id","summary":"If not already set, generates a device ID with ..."},{"type":"method","name":"export","type_name":"Cabinet","ident":"fu_cabinet_export","summary":"Exports the cabinet archive."},{"type":"method","name":"export","type_name":"Firmware","ident":"fu_firmware_export","summary":"This allows us to build an XML object for ..."},{"type":"method","name":"export_to_xml","type_name":"Firmware","ident":"fu_firmware_export_to_xml","summary":"This allows us to build an XML object for ..."},{"type":"method","name":"find_udev_device","type_name":"UsbDevice","ident":"fu_usb_device_find_udev_device","summary":"Gets the matching #GUdevDevice for the #GUsbDevice."},{"type":"method","name":"finished","type_name":"Progress","ident":"fu_progress_finished","summary":"Called when the step_now sub-task wants to finish early ..."},{"type":"method","name":"get_access","type_name":"IfdImage","ident":"fu_ifd_image_get_access","summary":"Gets the access control for a specific reason."},{"type":"method","name":"get_addr","type_name":"Firmware","ident":"fu_firmware_get_addr","summary":"Gets the base address of the image."},{"type":"method","name":"get_address","type_name":"Chunk","ident":"fu_chunk_get_address","summary":"Gets the address of the chunk."},{"type":"method","name":"get_alignment","type_name":"Firmware","ident":"fu_firmware_get_alignment","summary":"Gets the alignment of the firmware.  This allows ..."},{"type":"method","name":"get_all","type_name":"SecurityAttrs","ident":"fu_security_attrs_get_all","summary":"Gets all the attributes in the object."},{"type":"method","name":"get_alternate","type_name":"Device","ident":"fu_device_get_alternate","summary":"Gets any alternate device. An alternate device may be ..."},{"type":"method","name":"get_alternate_id","type_name":"Device","ident":"fu_device_get_alternate_id","summary":"Gets any alternate device ID. An alternate device may ..."},{"type":"method","name":"get_attr","type_name":"FdtImage","ident":"fu_fdt_image_get_attr","summary":"Gets a attribute from the image."},{"type":"method","name":"get_attr_str","type_name":"FdtImage","ident":"fu_fdt_image_get_attr_str","summary":"Gets a string attribute from the image. @val is ..."},{"type":"method","name":"get_attr_strlist","type_name":"FdtImage","ident":"fu_fdt_image_get_attr_strlist","summary":"Gets a stringlist attribute from the image. @val is ..."},{"type":"method","name":"get_attr_u32","type_name":"FdtImage","ident":"fu_fdt_image_get_attr_u32","summary":"Gets a uint32 attribute from the image."},{"type":"method","name":"get_attr_u64","type_name":"FdtImage","ident":"fu_fdt_image_get_attr_u64","summary":"Gets a uint64 attribute from the image."},{"type":"method","name":"get_attrs","type_name":"FdtImage","ident":"fu_fdt_image_get_attrs","summary":"Gets all the attributes stored on the image."},{"type":"method","name":"get_backend_id","type_name":"Device","ident":"fu_device_get_backend_id","summary":"Gets the ID set for the device as recognized ..."},{"type":"method","name":"get_bank","type_name":"CfuOffer","ident":"fu_cfu_offer_get_bank","summary":"Gets the bank register, used if multiple banks are supported."},{"type":"method","name":"get_battery_level","type_name":"Context","ident":"fu_context_get_battery_level","summary":"Gets the system battery level in percent."},{"type":"method","name":"get_battery_level","type_name":"Device","ident":"fu_device_get_battery_level","summary":"Returns the battery level."},{"type":"method","name":"get_battery_state","type_name":"Context","ident":"fu_context_get_battery_state","summary":"Gets if the system is on battery power, e.g. ..."},{"type":"method","name":"get_battery_threshold","type_name":"Context","ident":"fu_context_get_battery_threshold","summary":"Gets the system battery threshold in percent."},{"type":"method","name":"get_battery_threshold","type_name":"Device","ident":"fu_device_get_battery_threshold","summary":"Returns the battery threshold under which a firmware update ..."},{"type":"method","name":"get_bind_id","type_name":"UdevDevice","ident":"fu_udev_device_get_bind_id","summary":"Gets the device ID used for binding the device, ..."},{"type":"method","name":"get_block_size","type_name":"CfiDevice","ident":"fu_cfi_device_get_block_size","summary":"Gets the chip block size. This is typically the ..."},{"type":"method","name":"get_build_hash","type_name":"Plugin","ident":"fu_plugin_get_build_hash","summary":"Gets the build hash a plugin was generated with."},{"type":"method","name":"get_bus_number","type_name":"I2cDevice","ident":"fu_i2c_device_get_bus_number","summary":"Gets the I\u00b2C bus number."},{"type":"method","name":"get_by_appstream_id","type_name":"SecurityAttrs","ident":"fu_security_attrs_get_by_appstream_id","summary":"Gets a specific #FwupdSecurityAttr from the array."},{"type":"method","name":"get_bytes","type_name":"Chunk","ident":"fu_chunk_get_bytes","summary":"Gets the data of the chunk."},{"type":"method","name":"get_bytes","type_name":"Firmware","ident":"fu_firmware_get_bytes","summary":"Gets the firmware payload, which does not have any ..."},{"type":"method","name":"get_bytes_with_patches","type_name":"Firmware","ident":"fu_firmware_get_bytes_with_patches","summary":"Gets the firmware payload, with any defined patches applied."},{"type":"method","name":"get_checksum","type_name":"Firmware","ident":"fu_firmware_get_checksum","summary":"Returns a checksum of the payload data."},{"type":"method","name":"get_child","type_name":"Progress","ident":"fu_progress_get_child","summary":"Monitor a child and proxy back up to the ..."},{"type":"method","name":"get_children","type_name":"Device","ident":"fu_device_get_children","summary":"Gets any child devices. A child device is logically ..."},{"type":"method","name":"get_children_with_subsystem","type_name":"UdevDevice","ident":"fu_udev_device_get_children_with_subsystem","summary":"Get a list of devices that are children of ..."},{"type":"method","name":"get_chunks","type_name":"Firmware","ident":"fu_firmware_get_chunks","summary":"Gets the optional image chunks."},{"type":"method","name":"get_cmd","type_name":"CfiDevice","ident":"fu_cfi_device_get_cmd","summary":"Gets the self vendor code."},{"type":"method","name":"get_component_id","type_name":"CfuOffer","ident":"fu_cfu_offer_get_component_id","summary":"Gets the component in the device to apply the ..."},{"type":"method","name":"get_compression","type_name":"ArchiveFirmware","ident":"fu_archive_firmware_get_compression","summary":"Returns the compression."},{"type":"method","name":"get_compression_type","type_name":"OpromFirmware","ident":"fu_oprom_firmware_get_compression_type","summary":"Gets the machine type."},{"type":"method","name":"get_config_value","type_name":"Plugin","ident":"fu_plugin_get_config_value","summary":"Return the value of a key if it's been configured"},{"type":"method","name":"get_config_value_boolean","type_name":"Plugin","ident":"fu_plugin_get_config_value_boolean","summary":"Return the boolean value of a key if it's ..."},{"type":"method","name":"get_context","type_name":"Backend","ident":"fu_backend_get_context","summary":"Gets the context for a backend."},{"type":"method","name":"get_context","type_name":"Device","ident":"fu_device_get_context","summary":"Gets the context assigned for this device."},{"type":"method","name":"get_context","type_name":"Plugin","ident":"fu_plugin_get_context","summary":"Gets the context for a plugin."},{"type":"method","name":"get_cpuid","type_name":"FdtFirmware","ident":"fu_fdt_firmware_get_cpuid","summary":"Gets the CPUID."},{"type":"method","name":"get_custom_flags","type_name":"Device","ident":"fu_device_get_custom_flags","summary":"Gets the custom flags for the device from the ..."},{"type":"method","name":"get_data","type_name":"Chunk","ident":"fu_chunk_get_data","summary":"Gets the data of the chunk."},{"type":"method","name":"get_data","type_name":"Plugin","ident":"fu_plugin_get_data","summary":"Gets the per-plugin allocated private data. This will return ..."},{"type":"method","name":"get_data","type_name":"Smbios","ident":"fu_smbios_get_data","summary":"Reads a SMBIOS data blob, which includes the SMBIOS ..."},{"type":"method","name":"get_data_out","type_name":"Chunk","ident":"fu_chunk_get_data_out","summary":"Gets the mutable data of the chunk.  WARNING: ..."},{"type":"method","name":"get_data_sz","type_name":"Chunk","ident":"fu_chunk_get_data_sz","summary":"Gets the data size of the chunk."},{"type":"method","name":"get_dev","type_name":"UdevDevice","ident":"fu_udev_device_get_dev","summary":"Gets the #GUdevDevice."},{"type":"method","name":"get_dev","type_name":"UsbDevice","ident":"fu_usb_device_get_dev","summary":"Gets the #GUsbDevice."},{"type":"method","name":"get_device_file","type_name":"UdevDevice","ident":"fu_udev_device_get_device_file","summary":"Gets the device node."},{"type":"method","name":"get_devices","type_name":"Backend","ident":"fu_backend_get_devices","summary":"Gets all the devices added by the backend."},{"type":"method","name":"get_devices","type_name":"Plugin","ident":"fu_plugin_get_devices","summary":"Returns all devices added by the plugin using [method@FuPlugin.device_add] ..."},{"type":"method","name":"get_devtype","type_name":"UdevDevice","ident":"fu_udev_device_get_devtype","summary":"Returns the Udev device type"},{"type":"method","name":"get_driver","type_name":"UdevDevice","ident":"fu_udev_device_get_driver","summary":"Gets the device driver, e.g. `psmouse`."},{"type":"method","name":"get_duration","type_name":"Progress","ident":"fu_progress_get_duration","summary":"Get the duration of the step."},{"type":"method","name":"get_enabled","type_name":"Backend","ident":"fu_backend_get_enabled","summary":"Return the boolean value of a key if it's ..."},{"type":"method","name":"get_equivalent_id","type_name":"Device","ident":"fu_device_get_equivalent_id","summary":"Gets any equivalent ID for a device"},{"type":"method","name":"get_fd","type_name":"UdevDevice","ident":"fu_udev_device_get_fd","summary":"Gets the file descriptor if the device is open."},{"type":"method","name":"get_file","type_name":"Cabinet","ident":"fu_cabinet_get_file","summary":"Gets a file from the archive."},{"type":"method","name":"get_filename","type_name":"Firmware","ident":"fu_firmware_get_filename","summary":"Gets an optional filename that represents the image source ..."},{"type":"method","name":"get_firmware_gtype","type_name":"Device","ident":"fu_device_get_firmware_gtype","summary":"Gets the default firmware type for the device."},{"type":"method","name":"get_firmware_gtype_by_id","type_name":"Context","ident":"fu_context_get_firmware_gtype_by_id","summary":"Returns the #GType using the firmware @id."},{"type":"method","name":"get_firmware_gtype_ids","type_name":"Context","ident":"fu_context_get_firmware_gtype_ids","summary":"Returns all the firmware #GType IDs."},{"type":"method","name":"get_firmware_size_max","type_name":"Device","ident":"fu_device_get_firmware_size_max","summary":"Gets the maximum size of the firmware blob."},{"type":"method","name":"get_firmware_size_min","type_name":"Device","ident":"fu_device_get_firmware_size_min","summary":"Gets the minimum size of the firmware blob."},{"type":"method","name":"get_flash_id","type_name":"CfiDevice","ident":"fu_cfi_device_get_flash_id","summary":"Gets the chip ID used to identify the device."},{"type":"method","name":"get_force_ignore_version","type_name":"CfuOffer","ident":"fu_cfu_offer_get_force_ignore_version","summary":"Gets if the in-situ firmware should ignore version mismatch ..."},{"type":"method","name":"get_force_immediate_reset","type_name":"CfuOffer","ident":"fu_cfu_offer_get_force_immediate_reset","summary":"Gets if the in-situ firmware should reset into the ..."},{"type":"method","name":"get_format","type_name":"ArchiveFirmware","ident":"fu_archive_firmware_get_format","summary":"Gets the archive format."},{"type":"method","name":"get_guid","type_name":"Hwids","ident":"fu_hwids_get_guid","summary":"Gets the GUID for a specific key."},{"type":"method","name":"get_guids","type_name":"Hwids","ident":"fu_hwids_get_guids","summary":"Returns all the defined HWIDs"},{"type":"method","name":"get_guids_as_str","type_name":"Device","ident":"fu_device_get_guids_as_str","summary":"Gets the device GUIDs as a joined string, which ..."},{"type":"method","name":"get_hw_variant","type_name":"CfuOffer","ident":"fu_cfu_offer_get_hw_variant","summary":"Gets the hardware variant bitmask corresponding with compatible firmware."},{"type":"method","name":"get_hwid_guids","type_name":"Context","ident":"fu_context_get_hwid_guids","summary":"Returns all the HWIDs defined in the system. All ..."},{"type":"method","name":"get_hwid_replace_value","type_name":"Context","ident":"fu_context_get_hwid_replace_value","summary":"Gets the replacement value for a specific key. All ..."},{"type":"method","name":"get_hwid_value","type_name":"Context","ident":"fu_context_get_hwid_value","summary":"Gets the cached value for one specific key that ..."},{"type":"method","name":"get_id","type_name":"Firmware","ident":"fu_firmware_get_id","summary":"Gets the image ID, typically set at construction."},{"type":"method","name":"get_id","type_name":"Progress","ident":"fu_progress_get_id","summary":"Return the id of the progress, which is normally ..."},{"type":"method","name":"get_id","type_name":"Volume","ident":"fu_volume_get_id","summary":"Gets the D-Bus path of the mount point."},{"type":"method","name":"get_id_type","type_name":"Volume","ident":"fu_volume_get_id_type","summary":"Return the IdType of the volume"},{"type":"method","name":"get_idx","type_name":"Chunk","ident":"fu_chunk_get_idx","summary":"Gets the index of the chunk."},{"type":"method","name":"get_idx","type_name":"Firmware","ident":"fu_firmware_get_idx","summary":"Gets the index of the image which is used ..."},{"type":"method","name":"get_image_by_checksum","type_name":"Firmware","ident":"fu_firmware_get_image_by_checksum","summary":"Gets the firmware image using the image checksum. The ..."},{"type":"method","name":"get_image_by_id","type_name":"Firmware","ident":"fu_firmware_get_image_by_id","summary":"Gets the firmware image using the image ID."},{"type":"method","name":"get_image_by_id_bytes","type_name":"Firmware","ident":"fu_firmware_get_image_by_id_bytes","summary":"Gets the firmware image bytes using the image ID."},{"type":"method","name":"get_image_by_idx","type_name":"Firmware","ident":"fu_firmware_get_image_by_idx","summary":"Gets the firmware image using the image index."},{"type":"method","name":"get_image_by_idx_bytes","type_name":"Firmware","ident":"fu_firmware_get_image_by_idx_bytes","summary":"Gets the firmware image bytes using the image index."},{"type":"method","name":"get_image_by_path","type_name":"FdtFirmware","ident":"fu_fdt_firmware_get_image_by_path","summary":"Gets the FDT image for a specific path."},{"type":"method","name":"get_image_gtype","type_name":"LinearFirmware","ident":"fu_linear_firmware_get_image_gtype","summary":"Gets the image #GType to use when parsing a ..."},{"type":"method","name":"get_images","type_name":"Firmware","ident":"fu_firmware_get_images","summary":"Returns all the images in the firmware."},{"type":"method","name":"get_integer","type_name":"Smbios","ident":"fu_smbios_get_integer","summary":"Reads an integer value from the SMBIOS string table ..."},{"type":"method","name":"get_interface","type_name":"HidDevice","ident":"fu_hid_device_get_interface","summary":"Gets the HID USB interface number."},{"type":"method","name":"get_internal_flags","type_name":"Device","ident":"fu_device_get_internal_flags","summary":"Gets all the internal flags."},{"type":"method","name":"get_keys","type_name":"Hwids","ident":"fu_hwids_get_keys","summary":"Returns all the defined HWID keys."},{"type":"method","name":"get_kind","type_name":"EfiSignature","ident":"fu_efi_signature_get_kind","summary":"Returns the signature kind."},{"type":"method","name":"get_lid_state","type_name":"Context","ident":"fu_context_get_lid_state","summary":"Gets the laptop lid state, if applicable."},{"type":"method","name":"get_logical_id","type_name":"Device","ident":"fu_device_get_logical_id","summary":"Gets the logical ID set for the device, which ..."},{"type":"method","name":"get_machine_type","type_name":"OpromFirmware","ident":"fu_oprom_firmware_get_machine_type","summary":"Gets the machine type."},{"type":"method","name":"get_max_msg_length","type_name":"MeiDevice","ident":"fu_mei_device_get_max_msg_length","summary":"Gets the maximum message length."},{"type":"method","name":"get_metadata","type_name":"Device","ident":"fu_device_get_metadata","summary":"Gets an item of metadata from the device."},{"type":"method","name":"get_metadata_boolean","type_name":"Device","ident":"fu_device_get_metadata_boolean","summary":"Gets an item of metadata from the device."},{"type":"method","name":"get_metadata_integer","type_name":"Device","ident":"fu_device_get_metadata_integer","summary":"Gets an item of metadata from the device."},{"type":"method","name":"get_milestone","type_name":"CfuOffer","ident":"fu_cfu_offer_get_milestone","summary":"Gets the milestone, which can be used as a ..."},{"type":"method","name":"get_model","type_name":"UdevDevice","ident":"fu_udev_device_get_model","summary":"Gets the device device code."},{"type":"method","name":"get_mount_point","type_name":"Volume","ident":"fu_volume_get_mount_point","summary":"Gets the location of the volume mount point."},{"type":"method","name":"get_name","type_name":"Backend","ident":"fu_backend_get_name","summary":"Return the name of the backend, which is normally ..."},{"type":"method","name":"get_name","type_name":"Plugin","ident":"fu_plugin_get_name","summary":"Gets the plugin name."},{"type":"method","name":"get_name","type_name":"Progress","ident":"fu_progress_get_name","summary":"Return the nice name of the progress, which is ..."},{"type":"method","name":"get_number","type_name":"UdevDevice","ident":"fu_udev_device_get_number","summary":"Gets the device number, if any."},{"type":"method","name":"get_offset","type_name":"Firmware","ident":"fu_firmware_get_offset","summary":"Gets the base offset of the image."},{"type":"method","name":"get_order","type_name":"Device","ident":"fu_device_get_order","summary":"Gets the device order, where higher numbers are installed ..."},{"type":"method","name":"get_order","type_name":"Plugin","ident":"fu_plugin_get_order","summary":"Gets the plugin order, where higher numbers are run ..."},{"type":"method","name":"get_owner","type_name":"EfiSignature","ident":"fu_efi_signature_get_owner","summary":"Returns the GUID of the signature owner."},{"type":"method","name":"get_page","type_name":"Chunk","ident":"fu_chunk_get_page","summary":"Gets the page of the chunk."},{"type":"method","name":"get_page_size","type_name":"CfiDevice","ident":"fu_cfi_device_get_page_size","summary":"Gets the chip page size. This is typically the ..."},{"type":"method","name":"get_parent","type_name":"Device","ident":"fu_device_get_parent","summary":"Gets any parent device. An parent device is logically ..."},{"type":"method","name":"get_parent","type_name":"Firmware","ident":"fu_firmware_get_parent","summary":"Gets the parent."},{"type":"method","name":"get_parent_guids","type_name":"Device","ident":"fu_device_get_parent_guids","summary":"Gets any parent device GUIDs. If a device is ..."},{"type":"method","name":"get_parent_name","type_name":"UdevDevice","ident":"fu_udev_device_get_parent_name","summary":"Returns the name of the direct ancestor of this device"},{"type":"method","name":"get_parent_physical_ids","type_name":"Device","ident":"fu_device_get_parent_physical_ids","summary":"Gets any parent device IDs. If a device is ..."},{"type":"method","name":"get_parent_with_subsystem","type_name":"UdevDevice","ident":"fu_udev_device_get_parent_with_subsystem","summary":"Get the device that is a parent of self ..."},{"type":"method","name":"get_percentage","type_name":"Progress","ident":"fu_progress_get_percentage","summary":"Get the last set progress percentage."},{"type":"method","name":"get_physical_id","type_name":"Device","ident":"fu_device_get_physical_id","summary":"Gets the physical ID set for the device, which ..."},{"type":"method","name":"get_pid","type_name":"DfuFirmware","ident":"fu_dfu_firmware_get_pid","summary":"Gets the product ID, or 0xffff for no restriction."},{"type":"method","name":"get_pid","type_name":"UsbDevice","ident":"fu_usb_device_get_pid","summary":"Gets the device product code."},{"type":"method","name":"get_platform_id","type_name":"UsbDevice","ident":"fu_usb_device_get_platform_id","summary":"Gets the device platform ID."},{"type":"method","name":"get_possible_plugins","type_name":"Device","ident":"fu_device_get_possible_plugins","summary":"Gets the list of possible plugin names, typically added ..."},{"type":"method","name":"get_priority","type_name":"Device","ident":"fu_device_get_priority","summary":"Gets the device priority, where higher numbers are better."},{"type":"method","name":"get_priority","type_name":"Plugin","ident":"fu_plugin_get_priority","summary":"Gets the plugin priority, where higher numbers are better."},{"type":"method","name":"get_private_flags","type_name":"Device","ident":"fu_device_get_private_flags","summary":"Returns all the private flags that can be used ..."},{"type":"method","name":"get_product_id","type_name":"CfuOffer","ident":"fu_cfu_offer_get_product_id","summary":"Gets the product ID for this CFU image."},{"type":"method","name":"get_profile","type_name":"Progress","ident":"fu_progress_get_profile","summary":"Returns if the profile is enabled for this progress."},{"type":"method","name":"get_protocol_revision","type_name":"CfuOffer","ident":"fu_cfu_offer_get_protocol_revision","summary":"Gets the CFU protocol version."},{"type":"method","name":"get_protocol_version","type_name":"MeiDevice","ident":"fu_mei_device_get_protocol_version","summary":"Gets the protocol version, or 0x for unset."},{"type":"method","name":"get_proxy","type_name":"Device","ident":"fu_device_get_proxy","summary":"Gets any proxy device. A proxy device can be ..."},{"type":"method","name":"get_proxy_guid","type_name":"Device","ident":"fu_device_get_proxy_guid","summary":"Gets the proxy GUID device, which which is set ..."},{"type":"method","name":"get_proxy_with_fallback","type_name":"Device","ident":"fu_device_get_proxy_with_fallback","summary":"Gets the proxy device if %FU_DEVICE_INTERNAL_FLAG_USE_PROXY_FALLBACK is set, falling ..."},{"type":"method","name":"get_records","type_name":"IhexFirmware","ident":"fu_ihex_firmware_get_records","summary":"Returns the raw lines from tokenization.  This might ..."},{"type":"method","name":"get_records","type_name":"SrecFirmware","ident":"fu_srec_firmware_get_records","summary":"Returns the raw records from SREC tokenization.  This ..."},{"type":"method","name":"get_release","type_name":"DfuFirmware","ident":"fu_dfu_firmware_get_release","summary":"Gets the device ID, or 0xffff for no restriction."},{"type":"method","name":"get_release_default","type_name":"Device","ident":"fu_device_get_release_default","summary":"Gets the default release for the device, creating one ..."},{"type":"method","name":"get_remove_delay","type_name":"Device","ident":"fu_device_get_remove_delay","summary":"Returns the maximum delay expected when replugging the device ..."},{"type":"method","name":"get_replace_keys","type_name":"Hwids","ident":"fu_hwids_get_replace_keys","summary":"Gets the replacement key for a well known value."},{"type":"method","name":"get_replace_values","type_name":"Hwids","ident":"fu_hwids_get_replace_values","summary":"Gets the replacement values for a HardwareID key or ..."},{"type":"method","name":"get_report","type_name":"HidDevice","ident":"fu_hid_device_get_report","summary":"Calls GetReport on the hardware."},{"type":"method","name":"get_report_metadata","type_name":"Plugin","ident":"fu_plugin_get_report_metadata","summary":"Returns the list of additional metadata to be added ..."},{"type":"method","name":"get_request_cnt","type_name":"Device","ident":"fu_device_get_request_cnt","summary":"Returns the number of requests of a specific kind. ..."},{"type":"method","name":"get_results","type_name":"Device","ident":"fu_device_get_results","summary":"Gets the results of the last update operation on ..."},{"type":"method","name":"get_revision","type_name":"UdevDevice","ident":"fu_udev_device_get_revision","summary":"Gets the device revision."},{"type":"method","name":"get_root","type_name":"Device","ident":"fu_device_get_root","summary":"Gets the root parent device. A parent device is ..."},{"type":"method","name":"get_rules","type_name":"Plugin","ident":"fu_plugin_get_rules","summary":"Gets the plugin IDs that should be run after ..."},{"type":"method","name":"get_sector_size","type_name":"CfiDevice","ident":"fu_cfi_device_get_sector_size","summary":"Gets the chip sector size. This is typically the ..."},{"type":"method","name":"get_segment_number","type_name":"CfuOffer","ident":"fu_cfu_offer_get_segment_number","summary":"Gets the part of the firmware that is being transferred."},{"type":"method","name":"get_siblings_with_subsystem","type_name":"UdevDevice","ident":"fu_udev_device_get_siblings_with_subsystem","summary":"Get a list of devices that are siblings of ..."},{"type":"method","name":"get_silo","type_name":"Cabinet","ident":"fu_cabinet_get_silo","summary":"Gets the silo that represents the superset metadata of ..."},{"type":"method","name":"get_size","type_name":"CfiDevice","ident":"fu_cfi_device_get_size","summary":"Gets the chip maximum size.  This is typically ..."},{"type":"method","name":"get_size","type_name":"Firmware","ident":"fu_firmware_get_size","summary":"Gets the total size of the image, which is ..."},{"type":"method","name":"get_slot_depth","type_name":"UdevDevice","ident":"fu_udev_device_get_slot_depth","summary":"Determine how far up a chain a given device is"},{"type":"method","name":"get_smbios_data","type_name":"Context","ident":"fu_context_get_smbios_data","summary":"Gets a hardware SMBIOS data."},{"type":"method","name":"get_smbios_integer","type_name":"Context","ident":"fu_context_get_smbios_integer","summary":"Reads an integer value from the SMBIOS string table ..."},{"type":"method","name":"get_smbios_string","type_name":"Context","ident":"fu_context_get_smbios_string","summary":"Gets a hardware SMBIOS string.  The @type and ..."},{"type":"method","name":"get_spec","type_name":"UsbDevice","ident":"fu_usb_device_get_spec","summary":"Gets the string USB revision for the device."},{"type":"method","name":"get_specialized_gtype","type_name":"Device","ident":"fu_device_get_specialized_gtype","summary":"Gets the specialized type of the device"},{"type":"method","name":"get_status","type_name":"Progress","ident":"fu_progress_get_status","summary":"Return the status of the progress, which is normally ..."},{"type":"method","name":"get_steps","type_name":"Progress","ident":"fu_progress_get_steps","summary":"Gets the number of sub-tasks, i.e. how many times ..."},{"type":"method","name":"get_string","type_name":"Smbios","ident":"fu_smbios_get_string","summary":"Reads a string from the SMBIOS string table of ..."},{"type":"method","name":"get_subsystem","type_name":"OpromFirmware","ident":"fu_oprom_firmware_get_subsystem","summary":"Gets the machine type."},{"type":"method","name":"get_subsystem","type_name":"UdevDevice","ident":"fu_udev_device_get_subsystem","summary":"Gets the device subsystem, e.g. `pci`"},{"type":"method","name":"get_subsystem_model","type_name":"UdevDevice","ident":"fu_udev_device_get_subsystem_model","summary":"Gets the device subsystem model code."},{"type":"method","name":"get_subsystem_vendor","type_name":"UdevDevice","ident":"fu_udev_device_get_subsystem_vendor","summary":"Gets the device subsystem vendor code."},{"type":"method","name":"get_sysfs_attr","type_name":"UdevDevice","ident":"fu_udev_device_get_sysfs_attr","summary":"Reads an arbitrary sysfs attribute 'attr' associated with UDEV device"},{"type":"method","name":"get_sysfs_attr_uint64","type_name":"UdevDevice","ident":"fu_udev_device_get_sysfs_attr_uint64","summary":"Reads an arbitrary sysfs attribute 'attr' associated with UDEV ..."},{"type":"method","name":"get_sysfs_path","type_name":"UdevDevice","ident":"fu_udev_device_get_sysfs_path","summary":"Gets the device sysfs path, e.g. `/sys/devices/pci0000:00/0000:00:14.0`."},{"type":"method","name":"get_timestamp","type_name":"FitFirmware","ident":"fu_fit_firmware_get_timestamp","summary":"Gets the creation timestamp."},{"type":"method","name":"get_token","type_name":"CfuOffer","ident":"fu_cfu_offer_get_token","summary":"Gets the token to identify the user specific software ..."},{"type":"method","name":"get_udev_subsystems","type_name":"Context","ident":"fu_context_get_udev_subsystems","summary":"Gets the udev subsystems required by all plugins."},{"type":"method","name":"get_value","type_name":"Hwids","ident":"fu_hwids_get_value","summary":"Gets the cached value for one specific key that ..."},{"type":"method","name":"get_vendor","type_name":"UdevDevice","ident":"fu_udev_device_get_vendor","summary":"Gets the device vendor code."},{"type":"method","name":"get_version","type_name":"DfuFirmware","ident":"fu_dfu_firmware_get_version","summary":"Gets the file format version with is 0x0100 by default."},{"type":"method","name":"get_version","type_name":"Firmware","ident":"fu_firmware_get_version","summary":"Gets an optional version that represents the firmware."},{"type":"method","name":"get_version_raw","type_name":"Firmware","ident":"fu_firmware_get_version_raw","summary":"Gets an raw version that represents the firmware. This ..."},{"type":"method","name":"get_vid","type_name":"DfuFirmware","ident":"fu_dfu_firmware_get_vid","summary":"Gets the vendor ID, or 0xffff for no restriction."},{"type":"method","name":"get_vid","type_name":"UsbDevice","ident":"fu_usb_device_get_vid","summary":"Gets the device vendor code."},{"type":"method","name":"has_flag","type_name":"Firmware","ident":"fu_firmware_has_flag","summary":"Finds if the firmware has a specific firmware flag."},{"type":"method","name":"has_flag","type_name":"Progress","ident":"fu_progress_has_flag","summary":"Tests for a flag."},{"type":"method","name":"has_guid","type_name":"Device","ident":"fu_device_has_guid","summary":"Finds out if the device has a specific GUID."},{"type":"method","name":"has_guid","type_name":"Hwids","ident":"fu_hwids_has_guid","summary":"Finds out if a hardware GUID exists."},{"type":"method","name":"has_hwid_flag","type_name":"Context","ident":"fu_context_has_hwid_flag","summary":"Returns if a HwId custom flag exists, typically added ..."},{"type":"method","name":"has_hwid_guid","type_name":"Context","ident":"fu_context_has_hwid_guid","summary":"Finds out if a hardware GUID exists."},{"type":"method","name":"has_inhibit","type_name":"Device","ident":"fu_device_has_inhibit","summary":"Check if the device already has an inhibit with ..."},{"type":"method","name":"has_internal_flag","type_name":"Device","ident":"fu_device_has_internal_flag","summary":"Tests for a private flag that stays internal to ..."},{"type":"method","name":"has_parent_guid","type_name":"Device","ident":"fu_device_has_parent_guid","summary":"Searches the list of parent GUIDs for a string match."},{"type":"method","name":"has_parent_physical_id","type_name":"Device","ident":"fu_device_has_parent_physical_id","summary":"Searches the list of parent IDs for a string match."},{"type":"method","name":"has_private_flag","type_name":"Device","ident":"fu_device_has_private_flag","summary":"Tests for a private flag that can be used ..."},{"type":"method","name":"has_rule","type_name":"Plugin","ident":"fu_plugin_has_rule","summary":"Gets the plugin IDs that should be run after ..."},{"type":"method","name":"incorporate","type_name":"Device","ident":"fu_device_incorporate","summary":"Copy all properties from the donor object if they ..."},{"type":"method","name":"incorporate_flag","type_name":"Device","ident":"fu_device_incorporate_flag","summary":"Copy the value of a specific flag from the ..."},{"type":"method","name":"incorporate_from_component","type_name":"Device","ident":"fu_device_incorporate_from_component","summary":"Copy all properties from the donor AppStream component."},{"type":"method","name":"inhibit","type_name":"Device","ident":"fu_device_inhibit","summary":"Prevent the device from being updated, changing it from ..."},{"type":"method","name":"invalidate","type_name":"Backend","ident":"fu_backend_invalidate","summary":"Normally when calling [method@FuBackend.setup] multiple times it is only ..."},{"type":"method","name":"ioctl","type_name":"UdevDevice","ident":"fu_udev_device_ioctl","summary":"Control a device using a low-level request."},{"type":"method","name":"is_encrypted","type_name":"Volume","ident":"fu_volume_is_encrypted","summary":"Checks if the VOLUME is currently encrypted."},{"type":"method","name":"is_internal","type_name":"Volume","ident":"fu_volume_is_internal","summary":"Guesses if the drive is internal to the system"},{"type":"method","name":"is_mounted","type_name":"Volume","ident":"fu_volume_is_mounted","summary":"Checks if the VOLUME is already mounted."},{"type":"method","name":"is_open","type_name":"Plugin","ident":"fu_plugin_is_open","summary":"Determines if the plugin is opened"},{"type":"method","name":"is_open","type_name":"UsbDevice","ident":"fu_usb_device_is_open","summary":"Finds out if a USB device is currently open."},{"type":"method","name":"iterate","type_name":"Archive","ident":"fu_archive_iterate","summary":"Iterates over the archive contents, calling the given function ..."},{"type":"method","name":"load","type_name":"Quirks","ident":"fu_quirks_load","summary":"Loads the various files that define the hardware quirks ..."},{"type":"method","name":"load_hwinfo","type_name":"Context","ident":"fu_context_load_hwinfo","summary":"Loads all hardware information parts of the context."},{"type":"method","name":"load_quirks","type_name":"Context","ident":"fu_context_load_quirks","summary":"Loads all quirks into the context."},{"type":"method","name":"locker","type_name":"Volume","ident":"fu_volume_locker","summary":"Locks the volume, mounting it and unmounting it as ..."},{"type":"method","name":"lookup_by_fn","type_name":"Archive","ident":"fu_archive_lookup_by_fn","summary":"Finds the blob referenced by filename"},{"type":"method","name":"lookup_by_id","type_name":"Backend","ident":"fu_backend_lookup_by_id","summary":"Gets a device previously added by the backend."},{"type":"method","name":"lookup_by_id","type_name":"Quirks","ident":"fu_quirks_lookup_by_id","summary":"Looks up an entry in the hardware database using ..."},{"type":"method","name":"lookup_by_id_iter","type_name":"Quirks","ident":"fu_quirks_lookup_by_id_iter","summary":"Looks up all entries in the hardware database using ..."},{"type":"method","name":"lookup_quirk_by_id","type_name":"Context","ident":"fu_context_lookup_quirk_by_id","summary":"Looks up an entry in the hardware database using ..."},{"type":"method","name":"lookup_quirk_by_id_iter","type_name":"Context","ident":"fu_context_lookup_quirk_by_id_iter","summary":"Looks up all entries in the hardware database using ..."},{"type":"method","name":"mount","type_name":"Volume","ident":"fu_volume_mount","summary":"Mounts the VOLUME ready for use."},{"type":"method","name":"name_compare","type_name":"Plugin","ident":"fu_plugin_name_compare","summary":"Compares two plugins by their names."},{"type":"method","name":"notify_start","type_name":"BluezDevice","ident":"fu_bluez_device_notify_start","summary":"Enables notifications for property changes in a UUID (StartNotify method)."},{"type":"method","name":"notify_stop","type_name":"BluezDevice","ident":"fu_bluez_device_notify_stop","summary":"Disables notifications for property changes in a UUID (StopNotify method)."},{"type":"method","name":"open","type_name":"Device","ident":"fu_device_open","summary":"Opens a device, optionally running a object-specific vfunc.  ..."},{"type":"method","name":"open","type_name":"Plugin","ident":"fu_plugin_open","summary":"Opens the plugin module, and calls `->load()` on it."},{"type":"method","name":"order_compare","type_name":"Plugin","ident":"fu_plugin_order_compare","summary":"Compares two plugins by their depsolved order, and then ..."},{"type":"method","name":"parse","type_name":"Cabinet","ident":"fu_cabinet_parse","summary":"Parses the cabinet archive."},{"type":"method","name":"parse","type_name":"Firmware","ident":"fu_firmware_parse","summary":"Parses a firmware, typically breaking the firmware into images."},{"type":"method","name":"parse_file","type_name":"Firmware","ident":"fu_firmware_parse_file","summary":"Parses a firmware file, typically breaking the firmware into images."},{"type":"method","name":"parse_full","type_name":"Firmware","ident":"fu_firmware_parse_full","summary":"Parses a firmware, typically breaking the firmware into images."},{"type":"method","name":"poll","type_name":"Device","ident":"fu_device_poll","summary":"Polls a device, typically querying the hardware for status."},{"type":"method","name":"poll_locker_new","type_name":"Device","ident":"fu_device_poll_locker_new","summary":"Returns a device locker that prevents polling on the ..."},{"type":"method","name":"pread","type_name":"UdevDevice","ident":"fu_udev_device_pread","summary":"Read a buffer from a file descriptor at a ..."},{"type":"method","name":"prepare","type_name":"Device","ident":"fu_device_prepare","summary":"Prepares a device for update. A different plugin can ..."},{"type":"method","name":"prepare_firmware","type_name":"Device","ident":"fu_device_prepare_firmware","summary":"Prepares the firmware by calling an optional device-specific vfunc ..."},{"type":"method","name":"probe","type_name":"Device","ident":"fu_device_probe","summary":"Probes a device, setting parameters on the object that ..."},{"type":"method","name":"probe_invalidate","type_name":"Device","ident":"fu_device_probe_invalidate","summary":"Normally when calling fu_device_probe() multiple times it is only ..."},{"type":"method","name":"pwrite","type_name":"UdevDevice","ident":"fu_udev_device_pwrite","summary":"Write a buffer to a file descriptor at a ..."},{"type":"method","name":"read","type_name":"BluezDevice","ident":"fu_bluez_device_read","summary":"Reads from a UUID on the device."},{"type":"method","name":"read","type_name":"I2cDevice","ident":"fu_i2c_device_read","summary":"Read multiple bytes from the I\u00b2C device."},{"type":"method","name":"read","type_name":"MeiDevice","ident":"fu_mei_device_read","summary":"Read raw bytes from the device."},{"type":"method","name":"read_byte_array","type_name":"IOChannel","ident":"fu_io_channel_read_byte_array","summary":"Reads bytes from the TTY, that will fail if ..."},{"type":"method","name":"read_bytes","type_name":"IOChannel","ident":"fu_io_channel_read_bytes","summary":"Reads bytes from the TTY, that will fail if ..."},{"type":"method","name":"read_firmware","type_name":"Device","ident":"fu_device_read_firmware","summary":"Reads firmware from the device by calling a plugin-specific ..."},{"type":"method","name":"read_raw","type_name":"IOChannel","ident":"fu_io_channel_read_raw","summary":"Reads bytes from the TTY, that will fail if ..."},{"type":"method","name":"read_string","type_name":"BluezDevice","ident":"fu_bluez_device_read_string","summary":"Reads a string from a UUID on the device."},{"type":"method","name":"register_private_flag","type_name":"Device","ident":"fu_device_register_private_flag","summary":"Registers a private device flag so that it can ..."},{"type":"method","name":"registered","type_name":"Backend","ident":"fu_backend_registered","summary":"Calls the ->registered() vfunc for the backend. This allows ..."},{"type":"method","name":"reload","type_name":"Device","ident":"fu_device_reload","summary":"Reloads a device that has just gone from bootloader ..."},{"type":"method","name":"remove_all","type_name":"SecurityAttrs","ident":"fu_security_attrs_remove_all","summary":"Removes all the attributes in the object."},{"type":"method","name":"remove_child","type_name":"Device","ident":"fu_device_remove_child","summary":"Removes child device."},{"type":"method","name":"remove_flag","type_name":"Device","ident":"fu_device_remove_flag","summary":"Removes a device flag from the device."},{"type":"method","name":"remove_flag","type_name":"Progress","ident":"fu_progress_remove_flag","summary":"Removes a flag."},{"type":"method","name":"remove_image","type_name":"Firmware","ident":"fu_firmware_remove_image","summary":"Remove an image from the firmware."},{"type":"method","name":"remove_image_by_id","type_name":"Firmware","ident":"fu_firmware_remove_image_by_id","summary":"Removes the first image from the firmware matching the ID."},{"type":"method","name":"remove_image_by_idx","type_name":"Firmware","ident":"fu_firmware_remove_image_by_idx","summary":"Removes the first image from the firmware matching the index."},{"type":"method","name":"remove_internal_flag","type_name":"Device","ident":"fu_device_remove_internal_flag","summary":"Removes a private flag that stays internal to the ..."},{"type":"method","name":"remove_metadata","type_name":"Device","ident":"fu_device_remove_metadata","summary":"Removes an item of metadata on the device."},{"type":"method","name":"remove_private_flag","type_name":"Device","ident":"fu_device_remove_private_flag","summary":"Removes a private flag that can be used by ..."},{"type":"method","name":"remove_problem","type_name":"Device","ident":"fu_device_remove_problem","summary":"Allow the device from being updated if there are ..."},{"type":"method","name":"report_metadata_post","type_name":"Device","ident":"fu_device_report_metadata_post","summary":"Collects metadata that would be useful for debugging a ..."},{"type":"method","name":"report_metadata_pre","type_name":"Device","ident":"fu_device_report_metadata_pre","summary":"Collects metadata that would be useful for debugging a ..."},{"type":"method","name":"rescan","type_name":"Device","ident":"fu_device_rescan","summary":"Rescans a device, re-adding GUIDs or flags based on ..."},{"type":"method","name":"reset","type_name":"Progress","ident":"fu_progress_reset","summary":"Resets the #FuProgress object to unset"},{"type":"method","name":"retry","type_name":"Device","ident":"fu_device_retry","summary":"Calls a specific function a number of times, optionally ..."},{"type":"method","name":"retry_add_recovery","type_name":"Device","ident":"fu_device_retry_add_recovery","summary":"Sets the optional function to be called when fu_device_retry() ..."},{"type":"method","name":"retry_full","type_name":"Device","ident":"fu_device_retry_full","summary":"Calls a specific function a number of times, optionally ..."},{"type":"method","name":"retry_set_delay","type_name":"Device","ident":"fu_device_retry_set_delay","summary":"Sets the recovery delay between failed retries."},{"type":"method","name":"runner_activate","type_name":"Plugin","ident":"fu_plugin_runner_activate","summary":"Call into the plugin's activate routine"},{"type":"method","name":"runner_add_security_attrs","type_name":"Plugin","ident":"fu_plugin_runner_add_security_attrs","summary":"Runs the `add_security_attrs()` routine for the plugin"},{"type":"method","name":"runner_attach","type_name":"Plugin","ident":"fu_plugin_runner_attach","summary":"Runs the update_attach routine for the plugin"},{"type":"method","name":"runner_backend_device_added","type_name":"Plugin","ident":"fu_plugin_runner_backend_device_added","summary":"Call the backend_device_added routine for the plugin"},{"type":"method","name":"runner_backend_device_changed","type_name":"Plugin","ident":"fu_plugin_runner_backend_device_changed","summary":"Call the backend_device_changed routine for the plugin"},{"type":"method","name":"runner_cleanup","type_name":"Plugin","ident":"fu_plugin_runner_cleanup","summary":"Runs the update_cleanup routine for the plugin"},{"type":"method","name":"runner_clear_results","type_name":"Plugin","ident":"fu_plugin_runner_clear_results","summary":"Call into the plugin's clear results routine"},{"type":"method","name":"runner_coldplug","type_name":"Plugin","ident":"fu_plugin_runner_coldplug","summary":"Runs the coldplug routine for the plugin"},{"type":"method","name":"runner_composite_cleanup","type_name":"Plugin","ident":"fu_plugin_runner_composite_cleanup","summary":"Runs the composite_cleanup routine for the plugin"},{"type":"method","name":"runner_composite_prepare","type_name":"Plugin","ident":"fu_plugin_runner_composite_prepare","summary":"Runs the composite_prepare routine for the plugin"},{"type":"method","name":"runner_detach","type_name":"Plugin","ident":"fu_plugin_runner_detach","summary":"Runs the update_detach routine for the plugin"},{"type":"method","name":"runner_device_added","type_name":"Plugin","ident":"fu_plugin_runner_device_added","summary":"Call the device_added routine for the plugin"},{"type":"method","name":"runner_device_created","type_name":"Plugin","ident":"fu_plugin_runner_device_created","summary":"Call the device_created routine for the plugin"},{"type":"method","name":"runner_device_register","type_name":"Plugin","ident":"fu_plugin_runner_device_register","summary":"Call the device_registered routine for the plugin"},{"type":"method","name":"runner_device_removed","type_name":"Plugin","ident":"fu_plugin_runner_device_removed","summary":"Call the device_removed routine for the plugin"},{"type":"method","name":"runner_get_results","type_name":"Plugin","ident":"fu_plugin_runner_get_results","summary":"Call into the plugin's get results routine"},{"type":"method","name":"runner_init","type_name":"Plugin","ident":"fu_plugin_runner_init","summary":"Runs the init routine for the plugin, if enabled."},{"type":"method","name":"runner_prepare","type_name":"Plugin","ident":"fu_plugin_runner_prepare","summary":"Runs the update_prepare routine for the plugin"},{"type":"method","name":"runner_reload","type_name":"Plugin","ident":"fu_plugin_runner_reload","summary":"Runs reload routine for a device"},{"type":"method","name":"runner_startup","type_name":"Plugin","ident":"fu_plugin_runner_startup","summary":"Runs the startup routine for the plugin"},{"type":"method","name":"runner_unlock","type_name":"Plugin","ident":"fu_plugin_runner_unlock","summary":"Call into the plugin's unlock routine"},{"type":"method","name":"runner_verify","type_name":"Plugin","ident":"fu_plugin_runner_verify","summary":"Call into the plugin's verify routine"},{"type":"method","name":"runner_write_firmware","type_name":"Plugin","ident":"fu_plugin_runner_write_firmware","summary":"Call into the plugin's write firmware routine"},{"type":"method","name":"security_changed","type_name":"Context","ident":"fu_context_security_changed","summary":"Informs the daemon that the HSI state may have changed."},{"type":"method","name":"seek","type_name":"UdevDevice","ident":"fu_udev_device_seek","summary":"Seeks a file descriptor to a given offset."},{"type":"method","name":"set_access","type_name":"IfdImage","ident":"fu_ifd_image_set_access","summary":"Sets the access control for a specific reason."},{"type":"method","name":"set_addr","type_name":"Firmware","ident":"fu_firmware_set_addr","summary":"Sets the base address of the image."},{"type":"method","name":"set_address","type_name":"Chunk","ident":"fu_chunk_set_address","summary":"Sets the address of the chunk."},{"type":"method","name":"set_alignment","type_name":"Firmware","ident":"fu_firmware_set_alignment","summary":"Sets the alignment of the firmware.  This allows ..."},{"type":"method","name":"set_alternate","type_name":"Device","ident":"fu_device_set_alternate","summary":"Sets any alternate device. An alternate device may be ..."},{"type":"method","name":"set_alternate_id","type_name":"Device","ident":"fu_device_set_alternate_id","summary":"Sets any alternate device ID. An alternate device may ..."},{"type":"method","name":"set_attr","type_name":"FdtImage","ident":"fu_fdt_image_set_attr","summary":"Sets a attribute for the image."},{"type":"method","name":"set_attr_str","type_name":"FdtImage","ident":"fu_fdt_image_set_attr_str","summary":"Sets a string attribute for the image."},{"type":"method","name":"set_attr_strlist","type_name":"FdtImage","ident":"fu_fdt_image_set_attr_strlist","summary":"Sets a stringlist attribute for the image."},{"type":"method","name":"set_attr_uint32","type_name":"FdtImage","ident":"fu_fdt_image_set_attr_uint32","summary":"Sets a uint32 attribute for the image."},{"type":"method","name":"set_attr_uint64","type_name":"FdtImage","ident":"fu_fdt_image_set_attr_uint64","summary":"Sets a uint64 attribute for the image."},{"type":"method","name":"set_backend_id","type_name":"Device","ident":"fu_device_set_backend_id","summary":"Sets the backend ID on the device. This is ..."},{"type":"method","name":"set_bank","type_name":"CfuOffer","ident":"fu_cfu_offer_set_bank","summary":"Sets bank register, used if multiple banks are supported."},{"type":"method","name":"set_battery_level","type_name":"Context","ident":"fu_context_set_battery_level","summary":"Sets the system battery level in percent."},{"type":"method","name":"set_battery_level","type_name":"Device","ident":"fu_device_set_battery_level","summary":"Sets the battery level, or %FWUPD_BATTERY_LEVEL_INVALID.  Setting this ..."},{"type":"method","name":"set_battery_state","type_name":"Context","ident":"fu_context_set_battery_state","summary":"Sets if the system is on battery power, e.g. ..."},{"type":"method","name":"set_battery_threshold","type_name":"Context","ident":"fu_context_set_battery_threshold","summary":"Sets the system battery threshold in percent."},{"type":"method","name":"set_battery_threshold","type_name":"Device","ident":"fu_device_set_battery_threshold","summary":"Sets the battery level, or %FWUPD_BATTERY_LEVEL_INVALID for the default. ..."},{"type":"method","name":"set_bind_id","type_name":"UdevDevice","ident":"fu_udev_device_set_bind_id","summary":"Sets the device ID used for binding the device, ..."},{"type":"method","name":"set_block_size","type_name":"CfiDevice","ident":"fu_cfi_device_set_block_size","summary":"Sets the chip block size. This is typically the ..."},{"type":"method","name":"set_bus_number","type_name":"I2cDevice","ident":"fu_i2c_device_set_bus_number","summary":"Sets the I\u00b2C bus number."},{"type":"method","name":"set_bytes","type_name":"Chunk","ident":"fu_chunk_set_bytes","summary":"Sets the data to use for the chunk."},{"type":"method","name":"set_bytes","type_name":"Firmware","ident":"fu_firmware_set_bytes","summary":"Sets the contents of the image if not created ..."},{"type":"method","name":"set_compile_versions","type_name":"Context","ident":"fu_context_set_compile_versions","summary":"Sets the compile time versions for a plugin."},{"type":"method","name":"set_component_id","type_name":"CfuOffer","ident":"fu_cfu_offer_set_component_id","summary":"Sets the component in the device to apply the ..."},{"type":"method","name":"set_compression","type_name":"ArchiveFirmware","ident":"fu_archive_firmware_set_compression","summary":"Sets the compression."},{"type":"method","name":"set_config_value","type_name":"Plugin","ident":"fu_plugin_set_config_value","summary":"Sets a plugin config value."},{"type":"method","name":"set_configuration","type_name":"UsbDevice","ident":"fu_usb_device_set_configuration","summary":"Set the active bConfigurationValue for the device."},{"type":"method","name":"set_context","type_name":"Device","ident":"fu_device_set_context","summary":"Sets the optional context which may be useful to ..."},{"type":"method","name":"set_cpuid","type_name":"FdtFirmware","ident":"fu_fdt_firmware_set_cpuid","summary":"Sets the CPUID."},{"type":"method","name":"set_custom_flags","type_name":"Device","ident":"fu_device_set_custom_flags","summary":"Sets the custom flags from the quirk system that ..."},{"type":"method","name":"set_dev","type_name":"UdevDevice","ident":"fu_udev_device_set_dev","summary":"Sets the #GUdevDevice. This may need to be used ..."},{"type":"method","name":"set_dev","type_name":"UsbDevice","ident":"fu_usb_device_set_dev","summary":"Sets the #GUsbDevice to use."},{"type":"method","name":"set_enabled","type_name":"Backend","ident":"fu_backend_set_enabled","summary":"Sets the backend enabled state."},{"type":"method","name":"set_equivalent_id","type_name":"Device","ident":"fu_device_set_equivalent_id","summary":"Sets any equivalent ID for a device"},{"type":"method","name":"set_fd","type_name":"UdevDevice","ident":"fu_udev_device_set_fd","summary":"Replace the file descriptor to use when the device ..."},{"type":"method","name":"set_filename","type_name":"Firmware","ident":"fu_firmware_set_filename","summary":"Sets an optional filename that represents the image source ..."},{"type":"method","name":"set_firmware_gtype","type_name":"Device","ident":"fu_device_set_firmware_gtype","summary":"Sets the default firmware type for the device."},{"type":"method","name":"set_firmware_size","type_name":"Device","ident":"fu_device_set_firmware_size","summary":"Sets the exact allowed size of the firmware blob."},{"type":"method","name":"set_firmware_size_max","type_name":"Device","ident":"fu_device_set_firmware_size_max","summary":"Sets the maximum allowed size of the firmware blob."},{"type":"method","name":"set_firmware_size_min","type_name":"Device","ident":"fu_device_set_firmware_size_min","summary":"Sets the minimum allowed size of the firmware blob."},{"type":"method","name":"set_flags","type_name":"UdevDevice","ident":"fu_udev_device_set_flags","summary":"Sets the parameters to use when opening the device. ..."},{"type":"method","name":"set_flash_id","type_name":"CfiDevice","ident":"fu_cfi_device_set_flash_id","summary":"Sets the chip ID used to identify the device."},{"type":"method","name":"set_force_ignore_version","type_name":"CfuOffer","ident":"fu_cfu_offer_set_force_ignore_version","summary":"Sets if the in-situ firmware should ignore version mismatch ..."},{"type":"method","name":"set_force_immediate_reset","type_name":"CfuOffer","ident":"fu_cfu_offer_set_force_immediate_reset","summary":"Sets if the in-situ firmware should reset into the ..."},{"type":"method","name":"set_format","type_name":"ArchiveFirmware","ident":"fu_archive_firmware_set_format","summary":"Sets the archive format."},{"type":"method","name":"set_hw_variant","type_name":"CfuOffer","ident":"fu_cfu_offer_set_hw_variant","summary":"Sets the hardware variant bitmask corresponding with compatible firmware."},{"type":"method","name":"set_id","type_name":"Device","ident":"fu_device_set_id","summary":"Sets the ID on the device. The ID should ..."},{"type":"method","name":"set_id","type_name":"Firmware","ident":"fu_firmware_set_id","summary":"No description available."},{"type":"method","name":"set_id","type_name":"Progress","ident":"fu_progress_set_id","summary":"Sets the id of the progress."},{"type":"method","name":"set_idx","type_name":"Chunk","ident":"fu_chunk_set_idx","summary":"Sets the index of the chunk."},{"type":"method","name":"set_idx","type_name":"Firmware","ident":"fu_firmware_set_idx","summary":"Sets the index of the image which is used ..."},{"type":"method","name":"set_interface","type_name":"HidDevice","ident":"fu_hid_device_set_interface","summary":"Sets the HID USB interface number.  In most ..."},{"type":"method","name":"set_internal_flags","type_name":"Device","ident":"fu_device_set_internal_flags","summary":"Sets the internal flags."},{"type":"method","name":"set_jcat_context","type_name":"Cabinet","ident":"fu_cabinet_set_jcat_context","summary":"Sets the Jcat context, which is used for setting ..."},{"type":"method","name":"set_lid_state","type_name":"Context","ident":"fu_context_set_lid_state","summary":"Sets the laptop lid state, if applicable."},{"type":"method","name":"set_logical_id","type_name":"Device","ident":"fu_device_set_logical_id","summary":"Sets the logical ID on the device. This is ..."},{"type":"method","name":"set_logical_id","type_name":"UdevDevice","ident":"fu_udev_device_set_logical_id","summary":"Sets the logical ID from the device subsystem. Plugins ..."},{"type":"method","name":"set_metadata","type_name":"Device","ident":"fu_device_set_metadata","summary":"Sets an item of metadata on the device."},{"type":"method","name":"set_metadata_boolean","type_name":"Device","ident":"fu_device_set_metadata_boolean","summary":"Sets an item of metadata on the device. When ..."},{"type":"method","name":"set_metadata_integer","type_name":"Device","ident":"fu_device_set_metadata_integer","summary":"Sets an item of metadata on the device. The ..."},{"type":"method","name":"set_milestone","type_name":"CfuOffer","ident":"fu_cfu_offer_set_milestone","summary":"Sets the milestone, which can be used as a ..."},{"type":"method","name":"set_name","type_name":"Device","ident":"fu_device_set_name","summary":"Sets the name on the device. Any invalid parts ..."},{"type":"method","name":"set_name","type_name":"Plugin","ident":"fu_plugin_set_name","summary":"Sets the plugin name."},{"type":"method","name":"set_name","type_name":"Progress","ident":"fu_progress_set_name","summary":"Sets the nice name of the progress."},{"type":"method","name":"set_offset","type_name":"Firmware","ident":"fu_firmware_set_offset","summary":"Sets the base offset of the image."},{"type":"method","name":"set_order","type_name":"Device","ident":"fu_device_set_order","summary":"Sets the device order, where higher numbers are installed ..."},{"type":"method","name":"set_order","type_name":"Plugin","ident":"fu_plugin_set_order","summary":"Sets the plugin order, where higher numbers are run ..."},{"type":"method","name":"set_padding_value","type_name":"IhexFirmware","ident":"fu_ihex_firmware_set_padding_value","summary":"Set the padding value to fill incomplete address ranges. ..."},{"type":"method","name":"set_page","type_name":"Chunk","ident":"fu_chunk_set_page","summary":"Sets the page of the chunk."},{"type":"method","name":"set_page_size","type_name":"CfiDevice","ident":"fu_cfi_device_set_page_size","summary":"Sets the chip page size. This is typically the ..."},{"type":"method","name":"set_parent","type_name":"Device","ident":"fu_device_set_parent","summary":"Sets any parent device. An parent device is logically ..."},{"type":"method","name":"set_parent","type_name":"Firmware","ident":"fu_firmware_set_parent","summary":"Sets the parent. Only used internally."},{"type":"method","name":"set_percentage","type_name":"Progress","ident":"fu_progress_set_percentage","summary":"Sets the progress percentage complete.  NOTE: this must ..."},{"type":"method","name":"set_percentage_full","type_name":"Progress","ident":"fu_progress_set_percentage_full","summary":"Sets the progress completion using the raw progress values."},{"type":"method","name":"set_physical_id","type_name":"Device","ident":"fu_device_set_physical_id","summary":"Sets the physical ID on the device which represents ..."},{"type":"method","name":"set_physical_id","type_name":"UdevDevice","ident":"fu_udev_device_set_physical_id","summary":"Sets the physical ID from the device subsystem. Plugins ..."},{"type":"method","name":"set_pid","type_name":"DfuFirmware","ident":"fu_dfu_firmware_set_pid","summary":"Sets the product ID."},{"type":"method","name":"set_poll_interval","type_name":"Device","ident":"fu_device_set_poll_interval","summary":"Polls the hardware every interval period. If the subclassed ..."},{"type":"method","name":"set_priority","type_name":"Device","ident":"fu_device_set_priority","summary":"Sets the device priority, where higher numbers are better."},{"type":"method","name":"set_priority","type_name":"Plugin","ident":"fu_plugin_set_priority","summary":"Sets the plugin priority, where higher numbers are better."},{"type":"method","name":"set_private_flags","type_name":"Device","ident":"fu_device_set_private_flags","summary":"Sets private flags that can be used by the ..."},{"type":"method","name":"set_product_id","type_name":"CfuOffer","ident":"fu_cfu_offer_set_product_id","summary":"Sets the product ID for this CFU image."},{"type":"method","name":"set_profile","type_name":"Progress","ident":"fu_progress_set_profile","summary":"This enables profiling of FuProgress. This may be useful ..."},{"type":"method","name":"set_progress","type_name":"Device","ident":"fu_device_set_progress","summary":"Sets steps on the progress object used to write firmware."},{"type":"method","name":"set_protocol_revision","type_name":"CfuOffer","ident":"fu_cfu_offer_set_protocol_revision","summary":"Sets the CFU protocol version."},{"type":"method","name":"set_proxy","type_name":"Device","ident":"fu_device_set_proxy","summary":"Sets any proxy device. A proxy device can be ..."},{"type":"method","name":"set_proxy_guid","type_name":"Device","ident":"fu_device_set_proxy_guid","summary":"Sets the GUID of the proxy device. The proxy ..."},{"type":"method","name":"set_release","type_name":"DfuFirmware","ident":"fu_dfu_firmware_set_release","summary":"Sets the release for the dfu firmware."},{"type":"method","name":"set_remove_delay","type_name":"Device","ident":"fu_device_set_remove_delay","summary":"Sets the amount of time a device is allowed ..."},{"type":"method","name":"set_report","type_name":"HidDevice","ident":"fu_hid_device_set_report","summary":"Calls SetReport on the hardware."},{"type":"method","name":"set_runtime_versions","type_name":"Context","ident":"fu_context_set_runtime_versions","summary":"Sets the runtime versions for a plugin."},{"type":"method","name":"set_sector_size","type_name":"CfiDevice","ident":"fu_cfi_device_set_sector_size","summary":"Sets the chip sector size. This is typically the ..."},{"type":"method","name":"set_secure_config_value","type_name":"Plugin","ident":"fu_plugin_set_secure_config_value","summary":"Sets a plugin config file value and updates file ..."},{"type":"method","name":"set_segment_number","type_name":"CfuOffer","ident":"fu_cfu_offer_set_segment_number","summary":"Sets the part of the firmware that is being transferred."},{"type":"method","name":"set_size","type_name":"CfiDevice","ident":"fu_cfi_device_set_size","summary":"Sets the chip maximum size."},{"type":"method","name":"set_size","type_name":"Firmware","ident":"fu_firmware_set_size","summary":"Sets the total size of the image, which should ..."},{"type":"method","name":"set_size_max","type_name":"Cabinet","ident":"fu_cabinet_set_size_max","summary":"Sets the maximum size of the decompressed cabinet file."},{"type":"method","name":"set_status","type_name":"Progress","ident":"fu_progress_set_status","summary":"Sets the status of the progress."},{"type":"method","name":"set_steps","type_name":"Progress","ident":"fu_progress_set_steps","summary":"Sets the number of sub-tasks, i.e. how many times ..."},{"type":"method","name":"set_timestamp","type_name":"FitFirmware","ident":"fu_fit_firmware_set_timestamp","summary":"Sets the creation timestamp."},{"type":"method","name":"set_token","type_name":"CfuOffer","ident":"fu_cfu_offer_set_token","summary":"Sets the token to identify the user specific software ..."},{"type":"method","name":"set_update_state","type_name":"Device","ident":"fu_device_set_update_state","summary":"Sets the update state, clearing the update error as required."},{"type":"method","name":"set_vendor","type_name":"Device","ident":"fu_device_set_vendor","summary":"Sets the vendor name on the device."},{"type":"method","name":"set_version","type_name":"Device","ident":"fu_device_set_version","summary":"Sets the device version, sanitizing the string if required."},{"type":"method","name":"set_version","type_name":"DfuFirmware","ident":"fu_dfu_firmware_set_version","summary":"Sets the file format version."},{"type":"method","name":"set_version","type_name":"Firmware","ident":"fu_firmware_set_version","summary":"Sets an optional version that represents the firmware."},{"type":"method","name":"set_version_bootloader","type_name":"Device","ident":"fu_device_set_version_bootloader","summary":"Sets the device bootloader version, sanitizing the string if required."},{"type":"method","name":"set_version_format","type_name":"Device","ident":"fu_device_set_version_format","summary":"Sets the device version format."},{"type":"method","name":"set_version_lowest","type_name":"Device","ident":"fu_device_set_version_lowest","summary":"Sets the device lowest version, sanitizing the string if required."},{"type":"method","name":"set_version_raw","type_name":"Firmware","ident":"fu_firmware_set_version_raw","summary":"Sets an raw version that represents the firmware.  ..."},{"type":"method","name":"set_vid","type_name":"DfuFirmware","ident":"fu_dfu_firmware_set_vid","summary":"Sets the vendor ID."},{"type":"method","name":"setup","type_name":"Backend","ident":"fu_backend_setup","summary":"Sets up the backend ready for use, which typically ..."},{"type":"method","name":"setup","type_name":"Device","ident":"fu_device_setup","summary":"Sets up a device, setting parameters on the object ..."},{"type":"method","name":"setup","type_name":"Hwids","ident":"fu_hwids_setup","summary":"Reads all the SMBIOS values from the hardware."},{"type":"method","name":"setup","type_name":"Smbios","ident":"fu_smbios_setup","summary":"Reads all the SMBIOS values from the hardware."},{"type":"method","name":"setup_from_file","type_name":"Smbios","ident":"fu_smbios_setup_from_file","summary":"Reads all the SMBIOS values from a DMI blob."},{"type":"method","name":"setup_from_kernel","type_name":"Smbios","ident":"fu_smbios_setup_from_kernel","summary":"Reads SMBIOS value from DMI values provided by the ..."},{"type":"method","name":"setup_from_path","type_name":"Smbios","ident":"fu_smbios_setup_from_path","summary":"Reads all the SMBIOS values from a specific path."},{"type":"method","name":"shutdown","type_name":"IOChannel","ident":"fu_io_channel_shutdown","summary":"Closes the file descriptor for the device."},{"type":"method","name":"sign","type_name":"Cabinet","ident":"fu_cabinet_sign","summary":"Sign the cabinet archive using JCat."},{"type":"method","name":"sleep","type_name":"Progress","ident":"fu_progress_sleep","summary":"Sleeps, setting the device progress from 0..100% as time continues."},{"type":"method","name":"step_done","type_name":"Progress","ident":"fu_progress_step_done","summary":"Called when the step_now sub-task has finished."},{"type":"method","name":"to_string","type_name":"Chunk","ident":"fu_chunk_to_string","summary":"Converts the chunked packet to a string representation."},{"type":"method","name":"to_string","type_name":"Device","ident":"fu_device_to_string","summary":"This allows us to easily print the device, the ..."},{"type":"method","name":"to_string","type_name":"Firmware","ident":"fu_firmware_to_string","summary":"This allows us to easily print the object."},{"type":"method","name":"to_variant","type_name":"SecurityAttrs","ident":"fu_security_attrs_to_variant","summary":"Serializes the #FwupdSecurityAttr objects."},{"type":"method","name":"tokenize","type_name":"Firmware","ident":"fu_firmware_tokenize","summary":"Tokenizes a firmware, typically breaking the firmware into records. ..."},{"type":"method","name":"traceback","type_name":"Progress","ident":"fu_progress_traceback","summary":"Create a traceback used for profiling startup."},{"type":"method","name":"unbind_driver","type_name":"Device","ident":"fu_device_unbind_driver","summary":"Unbinds the driver from the device, which normally means ..."},{"type":"method","name":"uninhibit","type_name":"Device","ident":"fu_device_uninhibit","summary":"Allow the device from being updated if there are ..."},{"type":"method","name":"unix_get_fd","type_name":"IOChannel","ident":"fu_io_channel_unix_get_fd","summary":"Gets the file descriptor for the device."},{"type":"method","name":"unmount","type_name":"Volume","ident":"fu_volume_unmount","summary":"Unmounts the volume after use."},{"type":"method","name":"write","type_name":"Archive","ident":"fu_archive_write","summary":"Writes an archive with specified @format and @compression."},{"type":"method","name":"write","type_name":"BluezDevice","ident":"fu_bluez_device_write","summary":"Writes to a UUID on the device."},{"type":"method","name":"write","type_name":"Firmware","ident":"fu_firmware_write","summary":"Writes a firmware, typically packing the images into a ..."},{"type":"method","name":"write","type_name":"I2cDevice","ident":"fu_i2c_device_write","summary":"Write multiple bytes to the I\u00b2C device."},{"type":"method","name":"write","type_name":"MeiDevice","ident":"fu_mei_device_write","summary":"Write raw bytes to the device."},{"type":"method","name":"write_byte_array","type_name":"IOChannel","ident":"fu_io_channel_write_byte_array","summary":"Writes bytes to the TTY, that will fail if ..."},{"type":"method","name":"write_bytes","type_name":"IOChannel","ident":"fu_io_channel_write_bytes","summary":"Writes bytes to the TTY, that will fail if ..."},{"type":"method","name":"write_chunk","type_name":"Firmware","ident":"fu_firmware_write_chunk","summary":"Gets a block of data from the image. If ..."},{"type":"method","name":"write_file","type_name":"Firmware","ident":"fu_firmware_write_file","summary":"Writes a firmware, typically packing the images into a ..."},{"type":"method","name":"write_firmware","type_name":"Device","ident":"fu_device_write_firmware","summary":"Writes firmware to the device by calling a plugin-specific vfunc."},{"type":"method","name":"write_raw","type_name":"IOChannel","ident":"fu_io_channel_write_raw","summary":"Writes bytes to the TTY, that will fail if ..."},{"type":"method","name":"write_sysfs","type_name":"UdevDevice","ident":"fu_udev_device_write_sysfs","summary":"Writes data into a sysfs attribute"},{"type":"property","name":"backend-id","type_name":"Device","summary":"The device backend ID."},{"type":"property","name":"battery-level","type_name":"Context","summary":"The system battery level in percent."},{"type":"property","name":"battery-state","type_name":"Context","summary":"The system battery state."},{"type":"property","name":"battery-threshold","type_name":"Context","summary":"The system battery threshold in percent."},{"type":"property","name":"bind-id","type_name":"UdevDevice","summary":"The bind ID to use when binding a new driver."},{"type":"property","name":"bus-number","type_name":"I2cDevice","summary":"The I\u00b2C bus number."},{"type":"property","name":"can-invalidate","type_name":"Backend","summary":"If the backend can be invalidated."},{"type":"property","name":"context","type_name":"Backend","summary":"The #FuContent to use."},{"type":"property","name":"context","type_name":"Device","summary":"The #FuContext to use."},{"type":"property","name":"device-file","type_name":"UdevDevice","summary":"The low level file to use for device access."},{"type":"property","name":"driver","type_name":"UdevDevice","summary":"The driver being used for the device."},{"type":"property","name":"flash-id","type_name":"CfiDevice","summary":"The CCI JEDEC flash ID."},{"type":"property","name":"image-gtype","type_name":"LinearFirmware","summary":"The image #GType"},{"type":"property","name":"interface","type_name":"HidDevice","summary":"The HID interface to use."},{"type":"property","name":"lid-state","type_name":"Context","summary":"The system lid state."},{"type":"property","name":"logical-id","type_name":"Device","summary":"The device logical ID."},{"type":"property","name":"mount-path","type_name":"Volume","summary":"The UNIX mount path."},{"type":"property","name":"name","type_name":"Backend","summary":"The backend name."},{"type":"property","name":"object-manager","type_name":"BluezDevice","summary":"The object manager instance for all devices."},{"type":"property","name":"parent","type_name":"Device","summary":"The device parent."},{"type":"property","name":"parent","type_name":"Firmware","summary":"The firmware parent."},{"type":"property","name":"physical-id","type_name":"Device","summary":"The device physical ID."},{"type":"property","name":"proxy","type_name":"BluezDevice","summary":"The D-Bus proxy for the object."},{"type":"property","name":"proxy","type_name":"Device","summary":"The device proxy to use."},{"type":"property","name":"proxy-block","type_name":"Volume","summary":"The proxy for the block interface."},{"type":"property","name":"proxy-filesystem","type_name":"Volume","summary":"The proxy for the filesystem interface."},{"type":"property","name":"subsystem","type_name":"UdevDevice","summary":"The device subsystem."},{"type":"property","name":"udev-device","type_name":"UdevDevice","summary":"The low-level GUdevDevice."},{"type":"property","name":"usb-device","type_name":"UsbDevice","summary":"The low-level #GUsbDevice."},{"type":"record","name":"PluginData","ctype":"FuPluginData","summary":"The plugin-allocated private data."},{"type":"record","name":"PluginVfuncs","ctype":"FuPluginVfuncs","summary":"The virtual functions that are implemented by the plugins."},{"type":"signal","name":"changed","type_name":"BluezDevice","summary":"The ::changed signal is emitted when a service with ..."},{"type":"signal","name":"changed","type_name":"UdevDevice","summary":"The ::changed signal is emitted when the low-level GUdevDevice ..."},{"type":"signal","name":"check-supported","type_name":"Plugin","summary":"The ::check-supported signal is emitted when a plugin wants ..."},{"type":"signal","name":"child-added","type_name":"Device","summary":"The ::child-added signal is emitted when a device has ..."},{"type":"signal","name":"child-removed","type_name":"Device","summary":"The ::child-removed signal is emitted when a device has ..."},{"type":"signal","name":"config-changed","type_name":"Plugin","summary":"The ::config-changed signal is emitted when one or more ..."},{"type":"signal","name":"device-added","type_name":"Backend","summary":"The ::device-added signal is emitted when a device has ..."},{"type":"signal","name":"device-added","type_name":"Plugin","summary":"The ::device-added signal is emitted when a device has ..."},{"type":"signal","name":"device-changed","type_name":"Backend","summary":"The ::device-changed signal is emitted when a device has ..."},{"type":"signal","name":"device-register","type_name":"Plugin","summary":"The ::device-register signal is emitted when another plugin has ..."},{"type":"signal","name":"device-removed","type_name":"Backend","summary":"The ::device-removed signal is emitted when a device has ..."},{"type":"signal","name":"device-removed","type_name":"Plugin","summary":"The ::device-removed signal is emitted when a device has ..."},{"type":"signal","name":"percentage-changed","type_name":"Progress","summary":"The ::percentage-changed signal is emitted when the tasks completion ..."},{"type":"signal","name":"request","type_name":"Device","summary":"The ::request signal is emitted when the device needs ..."},{"type":"signal","name":"rules-changed","type_name":"Plugin","summary":"No description available."},{"type":"signal","name":"security-changed","type_name":"Context","summary":"The ::security-changed signal is emitted when some system state ..."},{"type":"signal","name":"status-changed","type_name":"Progress","summary":"The ::status-changed signal is emitted when the task status ..."},{"type":"type_func","name":"array_mutable_new","type_name":"Chunk","ident":"fu_chunk_array_mutable_new","summary":"Chunks a mutable blob of memory into packets, ensuring ..."},{"type":"type_func","name":"array_new","type_name":"Chunk","ident":"fu_chunk_array_new","summary":"Chunks a linear blob of memory into packets, ensuring ..."},{"type":"type_func","name":"array_new_from_bytes","type_name":"Chunk","ident":"fu_chunk_array_new_from_bytes","summary":"Chunks a linear blob of memory into packets, ensuring ..."},{"type":"type_func","name":"array_to_string","type_name":"Chunk","ident":"fu_chunk_array_to_string","summary":"Converts all the chunked packets in an array to ..."},{"type":"type_func","name":"compression_from_string","type_name":"Archive","ident":"fu_archive_compression_from_string","summary":"Converts a string to an enumerated compression."},{"type":"type_func","name":"compression_to_string","type_name":"Archive","ident":"fu_archive_compression_to_string","summary":"Converts an enumerated compression to a string."},{"type":"type_func","name":"flag_from_string","type_name":"Firmware","ident":"fu_firmware_flag_from_string","summary":"Converts a string to a #FuFirmwareFlags."},{"type":"type_func","name":"flag_from_string","type_name":"Progress","ident":"fu_progress_flag_from_string","summary":"Converts a string to an progress flag."},{"type":"type_func","name":"flag_to_string","type_name":"Firmware","ident":"fu_firmware_flag_to_string","summary":"Converts a #FuFirmwareFlags to a string."},{"type":"type_func","name":"flag_to_string","type_name":"Progress","ident":"fu_progress_flag_to_string","summary":"Converts an progress flag to a string."},{"type":"type_func","name":"format_from_string","type_name":"Archive","ident":"fu_archive_format_from_string","summary":"Converts a string to an enumerated format."},{"type":"type_func","name":"format_to_string","type_name":"Archive","ident":"fu_archive_format_to_string","summary":"Converts an enumerated format to a string."},{"type":"type_func","name":"guess_name_from_fn","type_name":"Plugin","ident":"fu_plugin_guess_name_from_fn","summary":"Tries to guess the name of the plugin from ..."},{"type":"type_func","name":"internal_flag_from_string","type_name":"Device","ident":"fu_device_internal_flag_from_string","summary":"Converts a string to an internal device flag."},{"type":"type_func","name":"internal_flag_to_string","type_name":"Device","ident":"fu_device_internal_flag_to_string","summary":"Converts an internal device flag to a string."},{"type":"type_func","name":"kind_to_string","type_name":"EfiSignature","ident":"fu_efi_signature_kind_to_string","summary":"Converts the signature kind to a text representation."},{"type":"type_func","name":"new_by_kind","type_name":"Volume","ident":"fu_volume_new_by_kind","summary":"Finds all volumes of a specific partition type"},{"type":"type_func","name":"strparse_uint16_safe","type_name":"Firmware","ident":"fu_firmware_strparse_uint16_safe","summary":"Parses a base 16 number from a string of ..."},{"type":"type_func","name":"strparse_uint24_safe","type_name":"Firmware","ident":"fu_firmware_strparse_uint24_safe","summary":"Parses a base 16 number from a string of ..."},{"type":"type_func","name":"strparse_uint32_safe","type_name":"Firmware","ident":"fu_firmware_strparse_uint32_safe","summary":"Parses a base 16 number from a string of ..."},{"type":"type_func","name":"strparse_uint4_safe","type_name":"Firmware","ident":"fu_firmware_strparse_uint4_safe","summary":"Parses a base 16 number from a string of ..."},{"type":"type_func","name":"strparse_uint8_safe","type_name":"Firmware","ident":"fu_firmware_strparse_uint8_safe","summary":"Parses a base 16 number from a string of ..."},{"type":"vfunc","name":"build","type_name":"Firmware","summary":"Builds a firmware from an XML manifest. The manifest ..."},{"type":"vfunc","name":"check_supported","type_name":"Plugin","summary":"No description available."},{"type":"vfunc","name":"chip_select","type_name":"CfiDevice","summary":"Sets the chip select value."},{"type":"vfunc","name":"coldplug","type_name":"Backend","summary":"Adds devices using the subclassed backend. If [method@FuBackend.setup] has ..."},{"type":"vfunc","name":"config_changed","type_name":"Plugin","summary":"No description available."},{"type":"vfunc","name":"device_added","type_name":"Plugin","summary":"No description available."},{"type":"vfunc","name":"device_register","type_name":"Plugin","summary":"Registers the device with other plugins so they can ..."},{"type":"vfunc","name":"device_removed","type_name":"Plugin","summary":"No description available."},{"type":"vfunc","name":"export","type_name":"Firmware","summary":"This allows us to build an XML object for ..."},{"type":"vfunc","name":"get_checksum","type_name":"Firmware","summary":"Returns a checksum of the payload data."},{"type":"vfunc","name":"invalidate","type_name":"Backend","summary":"Normally when calling [method@FuBackend.setup] multiple times it is only ..."},{"type":"vfunc","name":"parse","type_name":"Firmware","summary":"No description available."},{"type":"vfunc","name":"percentage_changed","type_name":"Plugin","summary":"No description available."},{"type":"vfunc","name":"percentage_changed","type_name":"Progress","summary":"No description available."},{"type":"vfunc","name":"registered","type_name":"Backend","summary":"Calls the ->registered() vfunc for the backend. This allows ..."},{"type":"vfunc","name":"rules_changed","type_name":"Plugin","summary":"No description available."},{"type":"vfunc","name":"security_changed","type_name":"Context","summary":"Informs the daemon that the HSI state may have changed."},{"type":"vfunc","name":"setup","type_name":"Backend","summary":"Sets up the backend ready for use, which typically ..."},{"type":"vfunc","name":"status_changed","type_name":"Plugin","summary":"No description available."},{"type":"vfunc","name":"status_changed","type_name":"Progress","summary":"No description available."},{"type":"vfunc","name":"tokenize","type_name":"Firmware","summary":"Tokenizes a firmware, typically breaking the firmware into records. ..."},{"type":"vfunc","name":"write","type_name":"Firmware","summary":"Writes a firmware, typically packing the images into a ..."}],"terms":{"":[21,30,36,45,57,60,69,79,83,86,87,88,96,118,126,142,143,145,156,157,178,180,184,198,199,200,202,208,211,212,218,222,237,240,244,251,262,263,265,267,269,270,278,282,283,284,286,289,290,298,306,307,314,323,324,337,338,339,340,341,351,353,355,357,359,361,365,367,372,385,391,392,393,394,398,399,414,425,434,436,438,448,452,454,458,460,465,468,470,479,485,487,490,494,496,498,500,501,513,517,523,528,530,531,532,533,534,540,596,601,604,619,623,633,644,649,652,653,658,660,661,692,694,702,715,778,1011,1013,1062,1063,1066,1069,1071,1072,1074,1077,1079,1080,1094,1097,1117,1118,1119,1124,1195,1196,1197],"\tg_warning\"fail":[208],"!fu_device_build_instance_iddev":[208],"!hardware_in_bootload":[1196],"!on_ac_pow":[1196],"\"":[1196],"\"0.1.2\"":[1196],"\"0x\"":[1100],"\"1.2.2\"":[1196],"\"1.2.3\"":[1196],"\"1234\"":[208],"\"2d47f29b-83a2-4f31-a2e8-63474f4d4c2e\"":[1196],"\"above\"":[237,251,306],"\"attach\"":[1196],"\"batteri":[1196],"\"below\"":[223],"\"cannot":[1196],"\"cascade\"":[184],"\"chain":[601],"\"chids\"":[468],"\"computer\"":[1196],"\"creat":[1196],"\"deepest\"":[694],"\"detach\"":[1196],"\"devic":[1196],"\"device-firmware\"":[793],"\"dfu\"":[1196],"\"dummy-1:2:3\"":[1196],"\"fail":[1196],"\"hang\"":[1196],"\"illegal_jedec\"":[489],"\"myflag\";":[1196],"\"nvme\"":[208],"\"obsolete\"":[1197],"\"obvious":[1062,1063,1066,1069,1071,1072,1074,1077,1079,1080],"\"pid\"":[208],"\"plugin\"":[1196],"\"reload\"":[1196],"\"reset\"":[1196],"\"root\"":[1196],"\"system-firmware\"":[793],"\"trusting\"":[1197],"\"vid\"":[208],"\"wait-for-idle\"":[1196],"\"when":[1196],"\"write\"":[1196],"&&":[1196],"&error":[208],"&sz":[1196],"'attr'":[681,682],"'buf'":[1196],"'sz'":[1196],"*":[79,633,1195,1196],"**easy-to-understand**":[1197],"**error":[1196],"**helpers**":[1196],"**impact:**":[1197],"**mechanism**":[1196],"**not**":[1196],"**only**":[1196],"**policy**":[1196],"**possibl":[1197],"**references:**":[1197],"**resolution:**":[1197],"**secur":[1197],"**unless**":[212],"**warn":[1197],"*/":[1196],"*[v1.5.0]*":[1197],"*[v1.6.0]*":[1197],"*[v1.7.2]*":[1197],"*[v1.8.0]*":[1197],"*before*":[1196],"*blob_fw":[1196],"*buf":[1196],"*build-time*":[1119],"*connection*":[298],"*core*":[1197],"*ctx":[1196],"*data":[1196],"*dev":[1196],"*devic":[1196],"*good":[1197],"*have":[1197],"*internal*":[1196],"*may*":[1197],"*might*":[200],"*normal":[1196],"*plugin":[1196],"*progress":[1196],"*self":[601],"*system":[1197],"*version":[1196],"*vfunc":[1196],"*with*":[1118],"-":[1118,1196,1197],"--":[1196],"---":[1197],"--plugin":[1196],"-1":[1196],"->setup":[79],".d":[633],"/*":[1196],"//":[601],"/etc":[995],"/etc/fwupd":[995],"/lib/firmwar":[995],"/proc":[995],"/run/lock":[995],"/sys/bus/platform/driv":[995],"/sys/class/dmi":[656],"/sys/class/firmware-attribut":[995],"/sys/class/tpm":[995],"/sys/firmwar":[995],"/sys/kernel/secur":[995],"/sys/module/firmware_class/parameters/path":[995],"/system-upd":[995],"/usr/lib/[triplet]/fwupd-plugins-3":[995],"/usr/libexec/fwupd/efi":[995],"/usr/share/fwupd":[995],"/usr/share/fwupd/quirks.d":[995],"/usr/share/polkit-1/actions/":[995],"/var":[995],"/var/cache/fwupd":[995],"/var/etc/fwupd":[995],"/var/lib/fwupd":[995],"/var/lib/fwupd/metadata":[995],"/var/lib/fwupd/quirks.d":[995],"/var/lib/fwupd/remotes.d":[995],"0":[442,443,444,445,446,798,1123,1196,1197],"0..100%":[624],"0x":[520,1118],"0x0100":[345],"0x100":[79],"0x1000":[79],"0x10000":[79],"0x10203":[1118],"0xf":[445],"0xff":[446,501,1014,1016],"0xffff":[343,344,346,442],"0xffffff":[443],"0xffffffff":[444],"1":[445,798,799,836,1196],"1.0":[798],"1.1":[799],"1.2":[1195],"1.5.0":[1197],"1.7.3":[778],"1.8.0":[1197],"10":[8,1100,1118,1196],"10%":[1196],"10,000m":[314],"100":[1196],"100x":[1196],"10gbe":[993],"128":[837],"128K":[838],"128M":[839],"16":[96,442,443,444,445,446,840,992,1002,1100,1114,1118],"16K":[841],"16M":[842],"1G":[843],"1K":[844],"1M":[845],"1gb":[1063],"2":[398,425,446,601,846,1000,1021,1104,1105,1196],"2.0":[1197],"20150915":[1118],"2017":[1196],"2019":[1197],"24":[992],"256":[847],"256K":[848],"256M":[849],"2G":[850],"2K":[851],"2M":[852],"2`":[1196],"3":[1196],"3000m":[314],"32":[794,853,992,1003,1115],"32K":[854],"32M":[855],"3rd":[1197],"4":[442,856,1108,1109,1196],"40":[1196],"45":[1196],"4G":[857],"4K":[858],"4M":[859],"4xxlp":[1197],"5":[787,1196],"512":[860],"512K":[861],"512M":[862],"5678":[208],"6":[443],"64":[863,1004,1116],"64K":[864],"64M":[865],"66051":[1118],"7":[1196,1197],"7-zip":[984],"7zip":[984],"8":[444,866,1005],"8K":[867],"8M":[868],"90":[1196],"::chang":[68,663,701],"::check-support":[587],"::child-ad":[334],"::child-remov":[335],"::config-chang":[588],"::device-ad":[53,589],"::device-chang":[54],"::device-regist":[590],"::device-remov":[55,591],"::percentage-chang":[629],"::request":[336],"::security-chang":[176],"::status-chang":[630],"<<":[1196],"<a":[1197],"<firmware_file>":[1196],"<firmware_type>":[1196],"<fwupdplugin.h>":[1196],"<https://docs.gtk.org/glib/logging.html>":[1196],"<https://docs.gtk.org/glib/running.html>":[1196],"<https://github.com/fwupd/fwupd/blob/main/libfwupdplugin/fu-common.c>":[1195],"<https://github.com/fwupd/fwupd/blob/main/plugins/analogix/fu-analogix-firmware.c>":[1196],"<https://github.com/fwupd/fwupd/blob/main/plugins/logitech-hidpp/fu-logitech-hidpp-runtime-bolt.c>":[1196],"<https://github.com/fwupd/fwupd/blob/main/plugins/pixart-rf/fu-pxi-receiver-device.c>":[1196],"<https://github.com/fwupd/fwupd/blob/main/plugins/steelseries/steelseries.quirk>":[1196],"<https://github.com/fwupd/fwupd/blob/main/plugins/vli/vli-usbhub.quirk>":[1196],"<plugin>":[1196],"<richard@hughsie.com>":[1196],"=":[1196],"==":[1196],"ACCEPT":[739],"ACCESS":[825,826,829,830],"ACPI1":[805],"ACPI2":[806],"ACTIVATION":[768],"ADDR":[755],"ALGO":[882],"ALIGNMENT":[836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868],"APPEND":[824],"APPLE":[811],"ASCII":[869],"ATMEL":[797],"ATTACH":[765],"ATTR":[824,825,826,827,828,829,830,882,883,884,885,886,887,888,889,890,891],"AUTHENTICATED":[825,830],"AUTO":[764,766,777,778,779],"AVR":[797],"BANK":[751],"BASE":[1186],"BASEBOARD":[895,896,976],"BASED":[830],"BATTERY":[788,934],"BDP":[981],"BIOS":[802,897,898,899,900,977],"BLOCK":[737,738,936,937],"BOOT":[811,928],"BOOTSERVICE":[826],"BRANCH":[935],"BUILD":[736],"BUSY":[740],"CAPSULE":[792,831,835],"CATEGORY":[773],"CFI":[936,937,938,939,940,941,942,943,944,945,946,947,948],"CFU":[737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763],"CHASSIS":[978],"CHECK":[1124],"CHECKSUM":[875],"CHILD":[929],"CHILDREN":[766,769,779,949],"CHIP":[938],"CKSM":[911],"CLOSED":[780],"CMD":[937,938,939,940,941,942,943,944,945,946],"COMMAND":[741],"COMPATIBLE":[883],"COMPLETE":[752],"COMPONENT":[746],"COMPRESS":[808,810],"COMPRESSION":[926],"CONFIGURATIONS":[892],"COUNTERPART":[950],"CPD":[908,909,910],"CRC":[753],"DATA":[869,884,885,886,916,940],"DATABASE":[834],"DEBUG":[745,750,870],"DEDUPE":[872,873],"DELAY":[795,796,968],"DEVICE":[737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,936,937,938,939,940,941,942,943,944,945,946,947,948],"DFU":[797,798,799,800,801],"DFUSE":[800],"DONE":[874],"DRV":[928],"DURATION":[960],"EFI":[802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,831,832,928],"EFIVAR":[824,825,826,827,828,829,830,831,832,833,834,835],"EN":[945],"ENCLOSURE":[901],"ENSURE":[767],"ENUMERATE":[795],"EOF":[917],"ERASE":[937,938,944],"ERROR":[752,753,754,755,756,757,758,759,760,761,827],"ESP":[982],"ESRT":[807],"EVSA":[815],"EVSA2":[816],"EXPORT":[869,870,871],"EXTENDED":[918,919],"EXTRA":[765],"FALLBACK":[790],"FAMILY":[902],"FFS1":[812],"FFS2":[813],"FFS3":[814],"FILE":[802,803,804],"FINISHED":[929],"FIRMARE":[797,798,799,800,801],"FIRMWARE":[747,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,903,904,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,926,927,928,951,952,953,954],"FIRST":[737],"FIT":[882,883,884,885,886,887,888,889,890,891,892,893],"FLAG":[737,738,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,869,870,871,872,873,874,875,876,877,878,929,930,931,932,933],"FLAGS":[792,955],"FMAP":[894],"FOR":[785,788,789],"FORMAT":[975],"FPT":[911,912,913,914,915],"FREG":[1186,1187],"FU_CHECK_VERSION":[1124],"FU_IFD_FREG_BASE":[1186],"FU_IFD_FREG_LIMIT":[1187],"FV":[803],"FW":[794],"FWIM":[912],"FWUPDATE":[833],"GLOBAL":[832],"GTYPE":[951,956],"GUARD":[802],"GUESSED":[930],"GUID":[786,811,812,813,814,815,816,817,818,819,820,821,822,823,831,832,833,834,835,950,957,963,967],"HARDWARE":[827],"HAS":[875,876,877],"HASH":[736],"HEADER":[879],"HWIDS":[895,896,897,898,899,900,901,902,903,904,905,906,907],"ICON":[771,958],"ID":[872,879,880,881,892,893,941,942,973],"IDS":[777],"IDX":[873,908,909,910,911,912,913,914,915],"IFD":[1186,1187],"IFWI":[908,909,910,911,912,913,914,915],"IHEX":[916,917,918,919,920,921,922],"IMAGE":[803,970],"IMAGES":[893],"IMGI":[913],"INCLUDE":[870],"INFO":[914],"INHERIT":[768],"INHIBIT":[769,959],"INSTALL":[960],"INSTANCE":[777],"INTERNAL":[764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790],"INV":[746],"INVALID":[754,755],"IS":[770,791],"ISSUE":[961],"KEY":[895,896,897,898,899,900,901,902,903,904,905,906,907],"KIND":[793,901,981,982],"LAST":[738,979],"LEGACY":[822],"LID":[780],"LIMIT":[1187],"LINEAR":[918,921],"LZMA":[808],"MACHINE":[927],"MAJOR":[897,903,923],"MANIFEST":[908],"MANUFACTURER":[895,905],"MATCH":[786],"MAX":[953],"MD":[771,772,773,774,775,776],"MESSAGE":[971],"METADATA":[791,792,793,794,909],"MICRO":[924],"MICROCODE":[804],"MICROSOFT":[820],"MIN":[954],"MINOR":[898,904,925],"MODE":[791],"MODULEDATA":[910],"NAME":[772,773,906,962],"NO":[756,777,778,779,780,781,782,931,932],"NON":[828],"NONE":[783,871,878,926,933],"NOT":[742],"NUMBER":[782],"NVAR":[817],"NVRAM":[815,816,817],"OFFER":[739,740,741,742,743,744,756],"OFFSET":[885,887,888],"OLD":[747],"ONLY":[784,785],"OPEN":[770,787,789],"OPROM":[926,927,928],"OVMF":[821,822],"PAGE":[939,947],"PARENT":[766,788,789,963],"PARSE":[874],"PAUSE":[764],"PAYLOAD":[880],"PENDING":[749,763],"PFH1":[818],"PFH2":[819],"PID":[877],"PLUGIN":[964],"POLLING":[764],"PREPARE":[757],"PRIORITY":[965],"PROBE":[781],"PRODUCT":[896,906,907],"PROFILE":[931],"PROG":[939],"PROGRESS":[929,930,931,932,933],"PROTOCOL":[966],"PROXY":[790,967],"QUIRKS":[934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975],"RE":[795],"READ":[940,941,942,943],"RECORD":[827,916,917,918,919,920,921,922],"REJECT":[743,745,746,747,748,749,750,751],"RELEASE":[750,897,898,903,904],"REMOVE":[778,779,795,796,968],"REPLUG":[785,786,796],"REPORT":[831],"RESET":[765],"RETRY":[787],"RULE":[748],"RUNTIME":[829],"SAFE":[791],"SAME":[745],"SDTA":[915],"SECTION":[805,806,807,808,809,810],"SECTOR":[944,948],"SECURITY":[834],"SEGMENT":[919,922],"SEMVER":[767],"SERIAL":[782],"SET":[771,772,773,774,775,776],"SIGN":[748],"SIGNATURE":[758,820,821,822,823,881,920],"SIGNED":[774],"SIZE":[876,886,936,947,948,952,953,954],"SKIP":[744,887],"SKU":[907],"SMBIOS":[809,976,977,978,979,980],"SRV":[928],"START":[921,922],"STATUS":[752,753,754,755,756,757,758,759,760,761,762,763,943,946],"STORE":[888],"STORED":[876],"STRLEN":[894],"STRUCTURE":[976,977,978,979,980],"SUBSYSTEM":[928],"SUCCESS":[762],"SUMMARY":[969],"SUPPORTED":[742,784],"SWAP":[749,763],"SYSTEM":[980],"SZ":[942],"TABLE":[805,806,807,809],"TBT":[791],"THRESHOLD":[934],"TIANO":[810],"TIME":[830],"TIMESTAMP":[889],"TRACEBACK":[932],"TYPE":[916,917,918,919,920,921,922,926,927,976,977,978,979,980],"UEFI":[792,793,794],"UNKNOWN":[801],"UPDATE":[970,971],"USE":[788,789,790],"USER":[796],"UX":[835],"VALUE":[890],"VENDOR":[775,899,972,973],"VER":[750],"VERFMT":[776],"VERIFY":[759],"VERSION":[745,760,794,797,798,799,800,801,891,900,923,924,925,974,975,1124],"VID":[877],"VOLATILE":[828],"VOLUME":[811,812,813,814,815,816,817,818,819,981,982],"WAIT":[785],"WRITE":[761,824,825,830,945,946],"WRONG":[751],"X64":[927],"ZERO":[823],"[0-9]":[1118],"[amd":[1197],"[bio":[1197],"[chipsec":[1197],"[chromium":[1197],"[class@fudevice]":[460,528,633,702],"[class@fudevicelocker]":[180],"[class@fudfufirmware]":[385],"[class@fuihexfirmware]":[385],"[class@fwupd.request]":[249],"[cold":[1197],"[conclusion]#conclus":[1197],"[coreboot":[1197],"[csme":[1197],"[ctor@devicelocker.new_full]":[16],"[custom":[1197],"[cve-2021-42299":[1197],"[dram":[1197],"[empti":[1197],"[fu_device_add_child]https://github.com/fwupd/fwupd/blob/main/libfwupdplugin/fu-device.c":[1196],"[fu_device_inhibit]https://github.com/fwupd/fwupd/blob/main/libfwupdplugin/fu-device.c":[1196],"[fu_device_set_battery_level]https://github.com/fwupd/fwupd/blob/main/libfwupdplugin/fu-device.c":[1196],"[fu_device_set_battery_threshold]https://github.com/fwupd/fwupd/blob/main/libfwupdplugin/fu-device.c":[1196],"[fu_device_uninhibit]https://github.com/fwupd/fwupd/blob/main/libfwupdplugin/fu-device.c":[1196],"[fubluezdevice]https://github.com/fwupd/fwupd/blob/main/libfwupdplugin/fu-bluez-device.c":[1196],"[fuihexfirmare]https://github.com/fwupd/fwupd/blob/main/libfwupdplugin/fu-ihex-firmware.c":[1196],"[fuudevdevice]https://github.com/fwupd/fwupd/blob/main/libfwupdplugin/fu-udev-device.c":[1196],"[fuusbdevice]https://github.com/fwupd/fwupd/blob/main/libfwupdplugin/fu-usb-device.c":[1196],"[hidraw":[1196],"[hsi":[1197],"[hsi:0":[1197],"[hsi:1":[1197],"[hsi:2":[1197],"[hsi:3":[1197],"[hsi:4":[1197],"[hsi:5":[1197],"[intel":[1197],"[intent":[1197],"[iommu":[1197],"[kernel":[1197],"[libfwupdplugin/fu-device.c]https://github.com/fwupd/fwupd/blob/main/libfwupdplugin/fu-device.c:`fu_device_prepare_firmwar":[1196],"[libfwupdplugin/fu-device.h]https://github.com/fwupd/fwupd/blob/main/libfwupdplugin/fu-device.h":[1196],"[libfwupdplugin/fu-udev-device.c]https://github.com/fwupd/fwupd/blob/main/libfwupdplugin/fu-udev-device.c:`fu_udev_device_prob":[1196],"[libfwupdplugin/fu-udev-device.c]https://github.com/fwupd/fwupd/blob/main/libfwupdplugin/fu-udev-device.c:`fu_udev_device_set_physical_id":[1196],"[linux":[1197],"[lock":[1197],"[me":[1197],"[method@fuplugin.device_add]":[540,596],"[method@fuplugin.device_remove]":[547],"[method@fuprogress.get_child]":[601],"[part":[1197],"[pcr0":[1197],"[pre-boot":[1197],"[read-onli":[1197],"[risc-v":[1197],"[rollback":[1197],"[runtim":[1197],"[secur":[1197],"[smap":[1197],"[smm":[1197],"[supervisor":[1197],"[suspend":[1197],"[suspend-to-idle]#org.fwupd.hsi.suspendtoidl":[1197],"[swap":[1197],"[tainted]https://www.kernel.org/doc/html/latest/admin-guide/tainted-kernels.html":[1197],"[test":[1197],"[tpm":[1197],"[ubuntu":[1197],"[uefi":[1197],"[verifi":[1197],"[wikichip":[1197],"_device_attachdevic":[1196],"_device_detachdevic":[1196],"_do_something_else1fu_progress_get_childself":[601],"_do_something_else2fu_progress_get_childself":[601],"_do_somethingfuprogress":[601],"_get_versionplugin":[1196],"_not_":[729],"`!`":[1197],"`!`]#runtime-bang":[1197],"`#defin":[1196],"`--plugin-verbose=$plugin":[1196],"`--plugin-verbose=del":[1195],"`--plugin-verbose=logitech_hidpp":[1196],"`--verbos":[1195,1196],"`->attach":[1196],"`->attach`":[1196],"`->cleanup":[1196],"`->close`":[704],"`->detach":[1196],"`->detach`":[1196],"`->load":[556],"`->open":[263,704],"`->poll":[308],"`->prepar":[1196],"`->probe`":[263],"`->reload":[1196],"`->setup":[263],"`->write_firmwar":[1196],"`->write_firmware`":[1196],"`-dsupported_build":[1195],"`.":[1118],"`.cab":[1196],"`.dfu`":[1196],"`.metainfo.xml":[1196],"`.so":[1196],"`/dev`":[1196],"`/sys/devices/pci0000:00/0000:00:14.0`":[683],"`0x[a-f,0-9]":[1118],"`1.2.3":[1118],"`1.2.3`":[891],"`<firmware>":[393,394,448],"`<firmware>/<data>":[393,394,448],"`<version_raw>0x123456</version_raw>":[416],"`[0-9]":[1118],"`add_security_attr":[559],"`can-invalidate=tru":[45,57],"`computerhardwareids.exe`":[468],"`detach`":[1196],"`do":[1197],"`dummy-1:2:3`":[1196],"`export`":[1196],"`firmware.builder.xml":[416],"`flag":[1196],"`fu_device_add_guiddev,\"some-identifier\"":[1196],"`fu_device_read_firmwar":[1196],"`fu_device_register_private_flag":[1196],"`fu_firmware_get_byt":[1196],"`fu_firmware_write`":[1196],"`fu_logitech_hidpp_runtime_bolt_poll_peripher":[1196],"`fu_pxi_receiver_device_add_peripher":[1196],"`fufirmware->build":[393,394,448],"`fwupd_$plugin_verbos":[1196],"`fwupd_logitech_hid_verbose=1`":[1196],"`fwupdmgr":[151,152,1196],"`fwupdtool":[393,394,448],"`gethostsecurityattr":[1197],"`hsi:0`":[1197],"`hsi:1":[1197],"`hsi:1`":[1197],"`hsi:2":[1197],"`hsi:3":[1197],"`hsi:4":[1197],"`hsi:x":[1197],"`intel_iommu=on":[1197],"`libfwupdplugin/fu-common.c":[1196],"`not-enabled`":[1197],"`not-encrypted`":[1197],"`not-found`":[1197],"`not-locked`":[1197],"`not-supported`":[1197],"`not-valid`":[1197],"`open":[1196],"`org.intel.prx`":[1197],"`org.usb.dfu`":[966],"`pci:1:2:3":[664,689],"`pci_slot_name=0000:3e:00.0`":[307],"`pci_slot_name=0000:3e:00:0":[1196],"`pine64,rockpro64-v2.1:pine64,rockpro64`":[883],"`probe":[1196],"`setup":[1196],"`update_attach":[1196],"`update_detach":[1196],"`update_reload":[1196],"abi":[1196],"abil":[1197],"abl":[200,795,1196,1197],"abort":[23,1097],"about":[1195,1196,1197],"abov":[619,1196,1197],"absolut":[601],"abstract":[717,1196],"ac":[1196],"accept":[96,1099],"access":[9,492,493,697,1050,1051,1084,1195,1196,1197],"accordingli":[1196],"account":[795,796,1112],"accur":[931],"accuraci":[1117],"acm":[1197],"acm]#org.fwupd.hsi.intelbootguard.acm":[1197],"acpi":[995,1197],"acpi_tables":[995],"act":[1196],"action":[45,47,57,58,211,244,263,282,284,312,336,604,995,1196],"activ":[182,558,712,768,1197],"active]#org.fwupd.hsi.intelcet.act":[1197],"actual":[45,57,211,212,263,269,292,302,323,690,1195,1196,1197],"ad":[38,42,46,49,53,59,79,143,159,184,198,199,208,209,212,218,238,239,241,298,334,539,547,551,561,569,589,590,595,635,644,1102,1103,1104,1105,1106,1107,1108,1109,1122,1123,1195,1196],"adapt":[1196],"add":[12,22,37,56,71,141,142,143,144,145,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,208,283,389,390,391,392,462,470,530,531,532,533,534,536,539,559,603,604,635,641,642,704,777,961,996,1001,1002,1003,1004,1005,1062,1121,1122,1123,1125,1126,1127,1128,1129,1130,1188,1196,1197],"add_version":[12],"addit":[393,394,448,532,551,633,1197],"addition":[393,394,448,1197],"addr":[397,424],"address":[7,118,120,123,130,392,397,424,501,1196],"advanced_tca":[998],"advantag":[1196,1197],"advertis":[1197],"advisori":[1197],"affect":[176,292,588,961,1022,1197],"after":[198,199,210,212,236,244,291,305,312,470,532,533,549,552,553,583,601,731,765,885,971,996,1196,1197],"again":[1196],"against":[1082,1196,1197],"agnost":[1197],"aid":[532],"aka":[494,496],"alert":[1197],"alex":[1197],"algorithm":[882],"align":[398,425,1000,1008,1021],"all":[21,42,66,74,126,138,150,151,152,158,161,162,164,189,212,231,243,259,261,263,267,282,284,379,411,462,472,473,478,513,547,601,638,644,645,647,654,655,657,732,929,1022,1048,1085,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1196,1197],"all_in_one":[998],"all_proxi":[1195],"alloc":[535,546,1063,1097],"allow":[8,45,47,57,58,237,278,289,290,295,296,297,306,314,322,324,340,395,396,398,425,435,449,601,633,780,1062,1124,1195,1196,1197],"allow_trunc":[8],"alon":[694,1197],"alreadi":[37,56,188,202,217,254,259,262,278,324,391,392,539,691,728,729,1008,1196,1197],"also":[30,36,45,57,60,69,79,96,118,126,178,180,198,208,220,237,306,337,338,339,341,351,353,355,357,359,361,365,367,372,385,454,458,460,468,479,485,487,490,494,496,498,513,517,523,528,601,633,644,649,658,661,694,702,715,1062,1195,1196,1197],"altern":[218,219,286,287],"although":[1196,1197],"alwai":[45,57,375,376,601,1013,1021,1196,1197],"amd":[990,1197],"amd-vi":[1197],"amd64":[927],"ami":[1197],"amount":[314,1196,1197],"an":[12,20,21,22,25,26,27,28,29,30,36,138,156,163,183,188,189,198,199,202,204,208,209,210,211,215,218,219,233,234,235,237,244,254,262,267,268,276,283,286,287,301,302,303,306,312,321,326,327,337,361,366,386,391,392,393,394,395,396,403,415,416,421,427,433,434,438,448,449,479,485,487,490,494,496,523,536,537,538,627,628,633,637,652,681,682,704,959,999,1018,1019,1020,1044,1051,1058,1060,1062,1084,1094,1100,1121,1122,1123,1195,1196,1197],"analyz":[1197],"ancestor":[673],"and":[1196],"ani":[5,23,183,198,199,201,208,209,218,219,223,226,237,238,239,243,244,258,270,277,282,284,286,287,293,298,304,306,310,312,338,339,399,400,532,601,644,672,1084,1085,1086,1087,1097,1117,1196,1197],"anoth":[244,312,470,590,601,604,996,1015,1064,1196,1197],"antisoci":[1195],"anyth":[323,633,1118,1197],"api":[1196],"app":[995],"appear":[1094],"append":[523,641,642,643,1001,1002,1003,1004,1005,1089,1090,1091,1092,1096],"appli":[99,109,400,1196],"applic":[154,170,205,206,213,214,272,1196],"appropri":[1196],"appstream":[261,633,646],"ar":[984,1118],"ar_svr4":[984],"arbitrari":[681,682,1197],"architectur":[1196,1197],"archiv":[5,14,20,21,22,23,25,30,31,33,35,69,72,73,74,75,76,78,983,984,986,988],"aren't":[1196],"argument":[184,186,187,188],"arithmet":[1102,1103,1104,1105,1106,1107,1108,1109,1110,1111],"arm":[1197],"around":[1197],"arrai":[135,136,137,138,505,510,641,642,646,1000,1001,1002,1003,1004,1005,1006,1007,1014,1094],"artifici":[249],"ascii":[7,153,476,984],"ask":[539,541,587,1196],"asleep":[1197],"assert":[82,1196],"assign":[190,191,192,193,194,195,196,218,224,479,766,1196,1197],"associ":[681,682],"assum":[298,633,1100],"assumpt":[1197],"at":[1196],"atmel":[797],"attach":[205,206,244,312,560,765,1196,1197],"attack":[1197],"attempt":[782],"attest":[1197],"attr":[12,203,374,375,376,377,378,379,380,381,382,383,384,559,639,644,681,682],"attribut":[203,374,375,376,377,378,379,380,381,382,383,384,639,643,644,645,647,681,682,695,995,1196,1197],"audio":[494,496],"authent":[1197],"author":[1197],"auto":[778],"auto-detect":[465],"auto-remov":[779],"automat":[37,56,212,314,338,540,596,601,691,766,1195,1196],"avail":[70,428,451,592,593,594,595,597,598,599,600,602,631,632,640,661,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,771,772,773,774,775,776,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,894,916,917,918,919,920,921,922,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1196,1197],"available]#org.fwupd.hsi.intelcet.en":[1197],"averag":[1197],"avoid":[416],"avr":[797],"awai":[282,283,284],"back":[45,57,220,246,269,606,1196],"back-edg":[1197],"backdoor":[1197],"backend":[36,37,41,42,44,45,46,47,48,49,50,52,56,57,58,59,220,288,328,561,562,1196],"backend_device_ad":[561],"backend_device_chang":[562],"backport":[633],"backup":[993],"backward":[1196],"bad":[1196],"bank":[98,108,1197],"bar":[1196,1197],"bare":[1196,1197],"base":[281,397,406,412,424,430,442,443,444,445,446,540,596,1100,1118,1195,1196,1197],"base-10":[303],"base64":[393,394,448],"baseboard":[895,896,976],"baseclass":[777],"basic":[1196,1197],"batteri":[146,147,148,166,167,168,172,173,174,221,222,289,290,788,790,934,985,999,1196],"bazhaniuk":[1197],"bcd":[797,798,799,800,801],"bconfigurationvalu":[712],"bdp":[981],"be":[106,116,202,262,278,324,698,796,1195,1196,1197],"becom":[1196,1197],"been":[37,38,39,40,43,45,53,54,55,56,57,212,222,259,267,269,282,284,291,307,334,335,414,489,539,543,544,546,589,591,644,691,874,930,1196,1197],"befor":[10,37,56,126,198,199,291,298,340,604,623,633,690,970,995,996,1195,1196,1197],"beforehand":[211,1196],"behalf":[244,312],"behavior":[633,1013,1195,1196],"behavior]#runtime-behaviour":[1197],"believ":[1197],"below":[1196,1197],"benefit":[1196],"besid":[1196],"best":[1196],"better":[242,309,550,584,996],"better_than":[996],"between":[45,57,139,245,285,795,1094,1196,1197],"bidirect":[502],"big":[1196],"bigger":[604],"bill-of-materi":[1197],"billion":[1097],"binari":[393,394,437,439,448,453,1196,1197],"bind":[207,664,689,696],"bio":[485,490,897,898,899,900,977,993,1197],"bios":[993],"bios2":[993],"biosguard":[1197],"biosw":[1197],"bit":[398,425,794,992,1000,1002,1003,1004,1005,1021,1114,1115,1116,1197],"bitmask":[102,112],"blade":[998],"blanche]https://github.com/google/security-research/blob/master/pocs/bios/tpm-carte-blanche/writeup.md":[1197],"ble":[1196,1197],"ble]#org.fwupd.hsi.spi.bl":[1197],"blob":[21,24,96,135,136,137,228,229,270,295,296,297,437,439,453,494,496,513,651,655,884,890,1010,1011,1012,1017,1195,1196],"blob_fw":[1196],"block":[10,83,86,89,91,118,438,734,936,937,989,1008,1064],"block_erase":[989],"blocksiz":[79],"blown":[1197],"bluetooth":[60],"bluez":[36,60,1196],"bmc":[1195],"board":[1197],"boolean":[43,234,302,544,1090,1099,1121],"boot":[928,1045,1196,1197],"boot]https://wiki.ubuntu.com/uefi/secureboot":[1197],"bootguard":[1197],"bootload":[184,205,206,213,214,248,272,314,318,1157,1158,1182,1196,1197],"bootloader->runtime->bootload":[795],"both":[1062,1196,1197],"bound":[323],"boundari":[135,136,137,398,425,1000,1021],"box":[1196,1197],"branch":[935,1131,1169],"break":[418,419,420,436,452,1196,1197],"brick":[1196],"broadli":[1196],"brought":[1197],"bsd":[984,1054],"bu":[479,480,482,484,1197],"buffer":[515,686,687,1006,1009,1028,1029,1030,1031,1032,1033,1034,1035,1036,1061,1062,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1196],"bug":[1197],"bui":[1197],"build":[208,209,393,394,395,396,416,448,449,542,1113,1159,1183,1196,1197],"build-system":[393,394,448],"builder":[1121,1122,1123],"burden":[1197],"bus_expansion":[998],"buse":[1197],"button":[314,796,1196],"bwe]#org.fwupd.hsi.spi.biosw":[1197],"byte":[96,121,124,131,137,387,392,399,400,408,410,426,481,483,505,506,507,510,511,512,515,521,522,952,953,954,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1034,1042,1047,1097,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1196],"byte-accur":[1195],"byte-for-byt":[215],"bzip2":[983],"c":[1196],"c++":[1196],"c200":[1197],"cabinet":[69,72,75,77,78,986,987,988],"cabl":[314],"cach":[11,153,476,536,537,538,995,1196],"cache_directori":[1195],"cachedir_pkg":[995],"calcul":[12,270,643,1197],"call":[8,13,23,37,45,47,49,56,57,58,59,182,200,211,212,215,250,263,265,267,269,270,282,283,284,308,325,338,339,464,466,468,470,530,540,546,556,558,561,562,564,569,570,571,572,573,578,579,580,596,601,605,613,623,625,644,691,989,1013,1027,1097,1196,1197],"call/jmp":[1197],"callback":[14,15,16,17,18,19,265],"caller":[126,340,608,609,1062,1104,1105,1108,1109],"camera":[494,496],"can":[45,50,57,79,103,113,142,143,145,151,152,156,157,198,199,201,210,211,240,243,244,258,263,266,267,270,271,277,292,307,310,312,323,338,339,340,366,385,393,394,436,448,452,465,470,494,496,501,502,523,530,531,534,540,596,601,633,652,653,694,1083,1095,1195,1196,1197],"can't":[633,1197],"cannot":[182,208,222,585,931,1084,1117,1197],"capabl":[1197],"capsul":[792,793,794],"captur":[1197],"care":[1196],"carri":[1196],"cart":[1197],"case":[45,57,126,269,465,1062,1063,1066,1069,1071,1072,1074,1077,1079,1080,1196,1197],"categori":[773],"caus":[45,57,184,269,1062,1063,1066,1069,1071,1072,1074,1077,1079,1080],"cbor":[715],"cci":[94],"cent":[1197],"center'":[1197],"central":[1197],"certain":[1055,1196,1197],"certif":[991,1195,1197],"cet":[1197],"cfi":[79,936,937,938,939,940,941,942,943,944,945,946,947,948,989],"cfideviceblocks":[83],"cfidevicepages":[86],"cfidevicesectors":[87],"cfu":[96,97,104,105,114,115,118,119,1018,1019,1020],"chain":[601,677,795,1197],"chain-of-trust":[1197],"chang":[39,45,54,57,61,62,68,165,176,177,202,262,269,278,281,289,290,324,501,562,588,592,594,598,599,600,629,630,631,632,633,663,701,1195,1196,1197],"channel":[10,502],"charact":[442,443,444,445,446,1101],"characterist":[1196],"charg":[985,994],"charging":[985],"chassi":[978,998],"check":[11,237,254,267,306,416,489,587,593,642,722,726,728,1014,1022,1024,1025,1029,1030,1031,1032,1033,1055,1062,1124,1195,1196,1197],"checks\"":[1196],"checksum":[270,401,406,450,875,882,890,911,1125,1132,1196,1197],"child":[183,212,223,273,334,335,513,601,606,929,1196],"children":[198,223,385,665,766,769,949,1196],"chip":[79,81,82,83,85,86,87,88,89,90,91,92,93,95,938,989,1196,1197],"chip_erase":[989],"chipsec":[1197],"choic":[1197],"choos":[693,694,1196,1197],"chunk":[89,118,120,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,389,402,438,604,1024,1196],"ci":[1195],"ci_network":[1195],"claim":[268,321,704,1196,1197],"clang":[1196],"class":[1196],"class_init":[1196],"clean":[210,340],"cleanup":[210,563,566,1196],"clear":[211,315,564],"cli":[1195],"client":[197,216,223,237,251,255,275,306,1124,1196],"clildren":[779],"close":[8,16,211,337,338,339,340,508,729,780,789,1011],"closed":[994],"clumsi":[796],"cmd":[84,489,989],"cnt":[249],"cod":[1195],"code":[84,494,495,633,671,679,680,684,707,710,1124,1196,1197],"codebas":[1196],"cold":[1197],"coldplug":[37,56,540,565,596],"collect":[279,280,1196],"color":[1197],"command":[151,152,489,937,938,939,940,941,943,944,945,946,989],"common":[79,1021,1022,1023,1024,1025,1196,1197],"commun":[1196],"compact_pci":[998],"compani":[1197],"compar":[215,240,555,557,1006,1009,1061,1112,1197],"compat":[102,112,268,321,883,1196],"compil":[141,169,633,1124],"compile-tim":[141,923,924,925],"complet":[211,263,601,605,619,620,629,929,971,1196],"compli":[1196],"complianc":[1197],"complic":[1196],"compon":[5,99,109,261,1117],"compos":[1196],"composit":[566,567,1133,1196],"composite_cleanup":[566],"composite_prepar":[567],"compress":[26,27,32,34,525,926,983],"compromis":[1197],"comput":[1196,1197],"concaten":[513,514],"concept":[1197],"concern":[1062,1063,1066,1069,1071,1072,1074,1077,1079,1080,1197],"condit":[1197],"condition":[1196],"confidenti":[1197],"config":[13,543,544,581,585,588,594],"configur":[7,43,215,543,544,712,892,995,1196,1197],"configuration_directori":[1195],"confirm":[532],"conflict":[996],"conflicts":[996],"conform":[79,1197],"confus":[1197],"connect":[240,307,518,1196,1197],"consciou":[1197],"consensu":[1196],"consid":[282,284,1118,1197],"consider":[1196,1197],"consist":[875],"consol":[308,338,339,1101,1195,1196,1197],"const":[126],"constant":[1098,1117],"construct":[45,57,96,393,394,404,448],"consum":[791,792,793,794,1197],"contain":[96,118,215,270,949,1094,1118,1195,1196],"content":[23,393,394,426,438,448,1001,1010,1011,1012,1017,1056,1196,1197],"context":[15,41,51,76,139,161,162,224,291,329,545],"continu":[118,624,1197],"control":[8,207,492,493,685,993,1196,1197],"control-flow":[1197],"conveni":[1121,1122,1123],"converg":[1197],"convert":[26,27,28,29,134,138,184,186,187,212,270,298,304,326,327,364,440,441,627,628,999,1018,1019,1020,1037,1050,1051,1052,1053,1060,1095,1099,1100,1196],"convertible":[998],"copi":[259,260,261,1062],"copyright":[1196],"core":[1196,1197],"corpor":[1195],"correct":[601,606,1113,1196,1197],"correct\"":[1062,1063,1066,1069,1071,1072,1074,1077,1079,1080],"correctli":[1197],"correspond":[102,112,1197],"corrupt":[1062,1063,1066,1069,1071,1072,1074,1077,1079,1080,1195],"cost":[1196,1197],"coswid":[178,179,715],"could":[176,307,494,496,1024,1062,1063,1066,1069,1071,1072,1074,1077,1079,1080,1196,1197],"count":[992],"counter":[1197],"counterpart":[184,950],"counterpartguid":[1196],"cours":[1196,1197],"cpd":[494],"cpio":[984],"cpu":[990,1026,1197],"cpuid":[369,371,1026,1027],"crazi":[1113],"crc":[875],"crc-16-ibm":[1028],"crc16":[1028,1029],"crc32":[882,1030,1031],"crc8":[1032,1033],"creat":[21,31,80,82,97,119,121,122,140,142,179,181,208,209,247,291,342,352,354,356,358,360,366,368,373,386,387,426,455,459,461,469,486,488,491,495,497,499,503,504,514,524,529,530,531,570,626,633,634,650,659,662,703,716,1015,1017,1086,1087,1134,1170,1196],"create_proxi":[1196],"creation":[456,457,889,1196],"criteria":[1197],"critic":[1197],"cross":[135,136,137],"cryptograph":[1197],"csm":[1197],"csme":[1197],"cumul":[1197],"curl":[1195],"current":[223,237,251,306,711,726,997,1196,1197],"custom":[82,159,225,292,338,949,951,956,1196],"cve":[1197],"cve-2017-5705":[1197],"cve-2017-5706":[1197],"cve-2017-5707":[1197],"cve-2017-5708":[1197],"cve-2017-5709":[1197],"cve-2017-5710":[1197],"cve-2017-5711":[1197],"cve-2017-5712":[1197],"cyclic":[1028,1029,1030,1031,1032,1033],"d-bu":[67,723],"daemon":[12,145,165,177,180,218,238,239,249,286,298,530,534,539,541,587,588,1119,1195,1196],"daemon-specif":[204,322],"dangers]https://malware.news/t/intel-me-manufacturing-mode-obscured-dangers-and-their-relationship-to-apple-macbook-vulnerability-cve-2018-4251/23214":[1197],"data":[10,96,118,120,121,122,124,125,126,127,131,155,182,267,401,414,432,438,450,501,532,535,546,633,649,650,651,695,869,884,885,886,910,915,940,989,992,995,1010,1013,1017,1041,1042,1046,1047,1062,1063,1066,1069,1071,1072,1074,1077,1079,1080,1192,1195,1196,1197],"data->proxi":[1196],"data-stor":[1196],"databas":[163,164,184,637,638,768,1197],"datadir_pkg":[995],"datadir_quirks":[995],"datasheet]https://www.intel.com/content/dam/www/public/us/en/documents/datasheets/6-chipset-c200-chipset-datasheet.pdf":[1197],"date":[1118,1159,1183],"dbu":[1196],"dbus-daemon":[1195],"dci":[1197],"dci]#org.fwupd.hsi.platformdebugen":[1197],"dealloc":[338,339],"deassert":[82],"debug":[7,279,280,434,532,870,1195,1196,1197],"decai":[1197],"decid":[1022],"decim":[1114,1115,1116,1118],"deciph":[1197],"declar":[1196],"decompress":[21,77,267,1196],"decompressor":[20],"decreas":[1197],"dedup":[872,873],"deep":[601,1197],"default":[79,222,227,247,290,294,345,387,501,692,720,795,796,1137,1196,1197],"defin":[151,251,292,400,472,473,636,644,800,1196,1197],"definit":[1196],"definitions]https://github.com/chipsec/chipsec/blob/master/chipsec/cfg/8086/pch_4xxlp.xml#l270":[1197],"definitions]https://github.com/riscv/riscv-edk2-platforms/blob/85a50de1b459d1d6644a402081120770aa6dd8c7/silicon/intel/coffeelakesiliconpkg/pch/include/register/pchregsdci.h":[1197],"degre":[1117],"deic":[902],"delai":[248,285,314,785,795,796,968,1196],"delet":[1038,1039],"delimit":[1096],"depart":[1197],"depend":[141,144,1113,1124,1196,1197],"deploi":[1196],"depsolv":[533,557,644],"depth":[677],"deriv":[1196],"desc":[993],"descript":[70,428,451,592,593,594,595,597,598,599,600,602,631,632,640,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,894,916,917,918,919,920,921,922,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191],"descriptor":[465,487,490,508,509,670,686,687,688,691,993,1011,1197],"descriptor]#org.fwupd.hsi.spi.descriptor":[1197],"design":[288,300,1196,1197],"desktop":[998,1197],"destin":[403,427,1062],"destroi":[237,244],"destroy_proxydata->proxi":[1196],"destruct":[1195],"detach":[213,214,568,1196],"detachable":[998],"detail":[1195,1196,1197],"detect":[1195,1196,1197],"determin":[554,677,995,1045,1049,1055,1057,1197],"dev":[666,690,706,713,1196],"develop":[621,993,1196,1197],"developer_nam":[775],"devexp":[993],"devic":[0,6,8,13,16,17,36,37,38,39,40,42,45,46,47,49,53,54,55,56,57,58,59,60,63,64,65,66,79,82,85,90,96,99,101,109,111,139,142,180,182,183,184,185,186,187,188,198,199,200,202,204,205,206,207,210,211,212,213,214,215,217,218,219,220,223,224,225,226,227,230,232,233,234,235,236,237,238,239,240,242,244,245,246,247,248,250,251,252,253,254,262,263,264,265,266,267,268,269,270,271,272,273,274,276,278,281,283,286,287,288,289,290,291,292,293,294,298,300,301,302,303,304,305,306,307,309,312,313,314,316,317,318,319,320,321,322,323,324,325,326,327,328,330,331,332,333,334,335,336,337,338,339,340,344,460,461,465,479,481,483,494,496,508,509,517,518,521,522,523,528,530,531,539,540,541,547,561,562,569,570,571,572,576,587,589,590,591,595,596,597,624,633,649,661,664,665,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,689,690,691,692,693,694,697,698,699,700,702,705,707,708,709,710,711,712,714,718,719,764,765,766,769,770,771,772,773,775,776,777,778,779,781,782,784,785,786,787,789,792,793,794,795,796,961,965,968,985,989,994,1018,1019,1020,1062,1063,1066,1069,1071,1072,1074,1077,1079,1080,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1195,1196,1197],"device-id":[633],"device-specif":[215,267,1196],"device-test":[1195],"device?":[1196],"device_ad":[569],"device_cr":[570],"device_regist":[571],"device_remov":[572],"devices?":[1196],"devicetre":[367,372],"devnum":[719],"devpath":[307],"devtyp":[668,694],"dfu":[341,342,348,797,798,799,800,801,1196],"dfuse":[351,352,800],"did":[1197],"differ":[96,184,210,266,298,513,539,786,1013,1119,1196,1197],"difficult":[1197],"dimm":[1197],"direct":[338,339,673,1197],"directli":[286,1196,1197],"director":[633],"directori":[494,495,995,1017,1086,1087,1088],"disabl":[62,308,1195,1196,1197],"disable_ssl_strict":[1195],"disabled]#org.fwupd.hsi.suspendtoram":[1197],"disambigu":[232,288,300,1196],"discharg":[985,994],"discharging":[985],"disclosur":[1197],"disconnect":[1196],"discov":[1026,1196,1197],"discoveri":[36,1196],"disk":[96,1022,1197],"displai":[153,476,1101,1195,1196,1197],"distribut":[1197],"distro":[633],"divers":[1196],"divulg":[1197],"dma":[1197],"dmar":[1197],"dmi":[159,649,655,656],"dmtf":[156,157,652,653],"do":[6,8,11,118,267,323,540,596,604,777,779,780,781,782,796,1195,1196,1197],"dock":[1196],"docking_station":[998],"document":[96,118,367,454,1195,1196,1197],"documentation]https://github.com/coreboot/coreboot/blob/master/src/soc/intel/jasperlake/include/soc/me.h":[1197],"documentation]https://www.kernel.org/doc/html/latest/security/tpm/tpm_event_log.html":[1197],"doe":[135,136,137,184,268,270,399,601,1196,1197],"doesn't":[1118,1196],"don't":[1062,1063,1066,1069,1071,1072,1074,1077,1079,1080,1097,1196],"done":[45,57,269,540,596,601,625,644,1011,1196,1197],"donor":[259,260,261],"dot":[767,1114,1115,1116,1118],"doubl":[1196],"down":[601,1057],"down]https://mjg59.dreamwidth.org/50577.html":[1197],"downgrad":[100,110,1196,1197],"download":[1195],"dram":[1197],"drive":[727],"driver":[8,207,323,669,696,698],"drop":[633],"due":[1084,1197],"dump":[7,215,1034,1035,1036,1195],"duplic":[200,1063],"durat":[607,960,1141,1174,1196],"dure":[1195,1196],"dword":[1108,1109],"dynam":[995],"e-flash":[1195],"e.g":[1,13,100,110,147,167,490,664,669,678,683,689,694,767,792,793,796,882,883,891,966,975,1118,1195,1196,1197],"each":[23,76,118,135,136,137,210,266,388,601,1094,1097,1196,1197],"earli":[605],"easi":[633,1197],"easier":[1197],"easili":[322,337,435,1197],"ec":[993],"edit":[1196],"edk":[1197],"effect":[470,1057,1197],"efi":[353,355,357,359,361,365,928,991,995,1037,1048,1049,1197],"efi_signature_list":[361,366],"efiappdir":[995],"efivar":[1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049],"eg":[1196],"either":[96,649,1197],"electr":[240,307,1196],"elev":[1197],"elimin":[1197],"embed":[993,1196,1197],"embedded_pc":[998],"emit":[38,39,40,53,54,55,68,176,216,334,335,336,587,588,589,590,591,629,630,663,701],"emploi":[1197],"empti":[21,386,393,394,448,985,1014,1058,1094,1197],"empty":[985],"emul":[470,1195],"en":[945],"enabl":[43,48,61,574,611,621,989,1045,1124,1196,1197],"enabled]#org.fwupd.hsi.intelbootguard.en":[1197],"enclosur":[901],"encod":[393,394,448,876],"encrypt":[726,1022,1197],"encryption]#org.fwupd.hsi.encryptedram":[1197],"end":[633,1062,1197],"endian":[1,1065,1066,1067,1068,1069,1070,1071,1073,1074,1075,1076,1077,1078,1079],"enforc":[1197],"engin":[139,197,245,255,275,517,1196,1197],"enough":[96,694,931,1196],"enough*":[1197],"enrol":[1197],"ensur":[135,136,137,217,270,601,767,1104,1105,1108,1109,1113,1196,1197],"enter":[1196],"entiti":[1197],"entri":[22,163,164,267,637,638,1196],"enumer":[26,27,28,29,436,452,528,649,999,1018,1019,1020,1060,1196,1197],"environ":[1054,1083,1195,1196,1197],"envvar":[1196],"equal":[1006,1009,1061,1124],"equat":[1197],"equival":[226,293],"eras":[83,87,89,92,937,938,944,989],"error":[11,211,230,268,282,283,284,315,321,338,339,340,392,438,959,1044,1084,1150,1179,1196,1197],"error->messag":[208],"escal":[1197],"esp":[720,721,982],"essenti":[1197],"etc":[103,113,1196],"etc.":[1196],"ev1":[103,113],"evalu":[1196,1197],"even":[96,263,1195,1196,1197],"event":[249,1196,1197],"everi":[308,523,785,1084],"evt":[103,113],"exact":[295,952],"exampl":[103,113,436,452,533,692,1195,1196,1197],"exceed":[505,506,507,510,511,512],"exclus":[1196],"execut":[1197],"exist":[159,160,204,392,477,587,633,1040,1196,1197],"expand":[1007,1196,1197],"expansion":[998],"expect":[10,96,211,248,263,500,601,660,929,996,1196,1197],"expens":[1197],"explain":[1197],"explicitli":[414,785,1117,1196],"exploit":[1197],"export":[2,72,180,395,396,449,539,541,870,986,1196,1197],"extend":[1196],"extern":[215,885,886,1196,1197],"extra":[393,394,448,633,1197],"extract":[1197],"factor":[1197],"fail":[263,279,280,283,285,338,339,505,506,507,510,511,512,533,787,1196,1197],"failur":[8,1022,1197],"fair":[1196],"fake":[792,793,794,1195,1197],"fall":[220,246],"fallback":[246],"fals":[1099,1196],"famili":[902],"far":[677],"fd":[509,670,691,1011],"fde":[1022],"fdt":[367,368,370,372,373],"featur":[1196,1197],"few":[601,1197],"field":[1197],"figur":[1197],"file":[11,21,23,71,73,74,77,79,241,271,345,349,353,359,385,393,394,416,419,439,448,500,503,508,509,551,585,588,633,636,655,660,667,670,686,687,688,691,697,995,1010,1011,1013,1043,1084,1085,1097,1195,1196,1197],"filenam":[24,403,427,586,1017,1085,1195],"filesystem":[11,355,735,1195],"fill":[500,501,660],"final":[1196],"find":[24,160,253,417,477,537,705,711,718,719,732,1064,1081,1196],"finish":[605,625],"firewal":[1195],"firewir":[1197],"firmar":[992],"firmwar":[2,3,30,96,99,100,101,102,106,109,110,111,112,116,142,149,150,178,182,215,222,227,228,229,237,267,270,294,295,296,297,306,311,325,341,348,351,353,355,357,359,367,372,385,386,387,388,390,391,393,394,395,396,398,399,400,406,407,408,409,410,411,415,416,417,418,419,420,421,422,423,425,433,434,436,437,439,447,448,449,452,453,454,458,487,494,496,498,513,523,531,532,580,658,715,765,794,874,876,877,879,880,881,892,893,903,904,912,915,935,951,952,953,954,995,1022,1056,1058,1059,1062,1063,1066,1069,1071,1072,1074,1077,1079,1080,1195,1196,1197],"firmware-build":[393,394,448],"firmware-pars":[1196],"firmware_search":[995],"firmwaresizemax":[88],"first":[263,422,423,718,719,1196],"fit":[454,455,882,883,884,885,887,888,889,891],"fix":[1196,1197],"fixup":[1195],"flag":[0,2,3,4,5,6,7,8,9,10,11,12,13,76,159,185,197,201,211,225,231,243,255,258,260,263,271,274,275,277,281,292,299,310,326,327,390,417,440,441,462,603,614,615,627,628,692,783,792,871,878,933,955,959,986,987,988,997,1135,1164,1172,1188,1189,1190,1191,1196],"flash":[79,85,90,94,487,490,496,497,1136,1173,1196,1197],"flat":[454],"flatten":[367,372],"flockdn":[1197],"flush":[10],"flush_input":[10],"fmap":[458,459],"fn":[24,586],"fnmatch":[1082],"focu":[1197],"follow":[79,393,394,448,1196],"fool":[1197],"footer":[399],"for":[1196],"forc":[100,101,110,111],"form":[393,394,448,1094,1197],"format":[28,29,33,35,292,319,345,349,495,497,524,633,776,797,798,799,800,801,975,984,1112,1113,1117,1118,1120,1160,1196],"forward-edg":[1197],"found":[23,74,208,218,247,361,365,494,496,523,533,1084,1097,1197],"fpt":[496],"free":[722],"frequent":[416],"from":[10,13,26,28,63,64,73,96,137,156,157,159,200,202,205,206,208,209,213,214,215,216,218,225,233,234,235,238,239,241,259,260,261,262,270,271,272,274,278,286,292,307,323,324,326,336,374,375,376,377,378,387,388,393,394,414,421,422,423,432,438,440,442,443,444,445,446,448,478,481,500,502,503,504,505,506,507,521,538,540,541,586,596,624,627,643,646,652,653,654,655,656,657,660,686,693,694,718,719,768,771,772,773,774,775,776,777,1010,1011,1012,1025,1038,1039,1041,1042,1048,1062,1063,1065,1066,1067,1068,1069,1070,1071,1072,1074,1077,1079,1080,1083,1098,1113,1114,1115,1116,1117,1118,1195,1196,1197],"fu_archive_add_entry":[22],"fu_archive_compression_from_string":[26],"fu_archive_compression_to_string":[27],"fu_archive_firmware_get_compression":[32],"fu_archive_firmware_get_format":[33],"fu_archive_firmware_new":[31],"fu_archive_firmware_set_compression":[34],"fu_archive_firmware_set_format":[35],"fu_archive_format_from_string":[28],"fu_archive_format_to_string":[29],"fu_archive_iterate":[23],"fu_archive_lookup_by_fn":[24],"fu_archive_new":[21],"fu_archive_write":[25],"fu_backend_coldplug":[37],"fu_backend_device_added":[38],"fu_backend_device_changed":[39],"fu_backend_device_removed":[40],"fu_backend_get_context":[41],"fu_backend_get_devices":[42],"fu_backend_get_enabled":[43],"fu_backend_get_name":[44],"fu_backend_invalidate":[45],"fu_backend_lookup_by_id":[46],"fu_backend_registered":[47],"fu_backend_set_enabled":[48],"fu_backend_setup":[49],"fu_battery_state_to_string":[999],"fu_bluez_device_notify_start":[61],"fu_bluez_device_notify_stop":[62],"fu_bluez_device_read":[63],"fu_bluez_device_read_string":[64],"fu_bluez_device_write":[65],"fu_build_hash":[736,1196],"fu_byte_array_align_up":[1000],"fu_byte_array_append_bytes":[1001],"fu_byte_array_append_uint16":[1002],"fu_byte_array_append_uint32":[1003],"fu_byte_array_append_uint64":[1004],"fu_byte_array_append_uint8":[1005],"fu_byte_array_compare":[1006],"fu_byte_array_set_size":[1007],"fu_bytes_align":[1008],"fu_bytes_compare":[1009],"fu_bytes_get_contents":[1010],"fu_bytes_get_contents_fd":[1011],"fu_bytes_get_contents_stream":[1012],"fu_bytes_get_data_safe":[1013],"fu_bytes_is_empty":[1014],"fu_bytes_new_offset":[1015],"fu_bytes_pad":[1016],"fu_bytes_set_contents":[1017],"fu_cabinet_add_file":[71],"fu_cabinet_export":[72],"fu_cabinet_get_file":[73],"fu_cabinet_get_silo":[74],"fu_cabinet_new":[70],"fu_cabinet_parse":[75],"fu_cabinet_set_jcat_context":[76],"fu_cabinet_set_size_max":[77],"fu_cabinet_sign":[78],"fu_cfi_device_chip_select":[81],"fu_cfi_device_chip_select_locker_new":[82],"fu_cfi_device_get_block_size":[83],"fu_cfi_device_get_cmd":[84,989],"fu_cfi_device_get_flash_id":[85],"fu_cfi_device_get_page_size":[86],"fu_cfi_device_get_sector_size":[87],"fu_cfi_device_get_size":[88],"fu_cfi_device_new":[80],"fu_cfi_device_set_block_size":[89],"fu_cfi_device_set_flash_id":[90],"fu_cfi_device_set_page_size":[91],"fu_cfi_device_set_sector_size":[92],"fu_cfi_device_set_size":[93],"fu_cfu_device_flag_first_block":[737],"fu_cfu_device_flag_last_block":[738],"fu_cfu_device_offer_accept":[739],"fu_cfu_device_offer_busy":[740],"fu_cfu_device_offer_command":[741],"fu_cfu_device_offer_not_supported":[742],"fu_cfu_device_offer_reject":[743],"fu_cfu_device_offer_skip":[744],"fu_cfu_device_offer_to_string":[1018],"fu_cfu_device_reject_debug_same_version":[745],"fu_cfu_device_reject_inv_component":[746],"fu_cfu_device_reject_old_firmware":[747],"fu_cfu_device_reject_sign_rule":[748],"fu_cfu_device_reject_swap_pending":[749],"fu_cfu_device_reject_to_string":[1019],"fu_cfu_device_reject_ver_release_debug":[750],"fu_cfu_device_reject_wrong_bank":[751],"fu_cfu_device_status_error_complete":[752],"fu_cfu_device_status_error_crc":[753],"fu_cfu_device_status_error_invalid":[754],"fu_cfu_device_status_error_invalid_addr":[755],"fu_cfu_device_status_error_no_offer":[756],"fu_cfu_device_status_error_prepare":[757],"fu_cfu_device_status_error_signature":[758],"fu_cfu_device_status_error_verify":[759],"fu_cfu_device_status_error_version":[760],"fu_cfu_device_status_error_write":[761],"fu_cfu_device_status_success":[762],"fu_cfu_device_status_swap_pending":[763],"fu_cfu_device_status_to_string":[1020],"fu_cfu_offer_get_bank":[98],"fu_cfu_offer_get_component_id":[99],"fu_cfu_offer_get_force_ignore_version":[100],"fu_cfu_offer_get_force_immediate_reset":[101],"fu_cfu_offer_get_hw_variant":[102],"fu_cfu_offer_get_milestone":[103],"fu_cfu_offer_get_product_id":[104],"fu_cfu_offer_get_protocol_revision":[105],"fu_cfu_offer_get_segment_number":[106],"fu_cfu_offer_get_token":[107],"fu_cfu_offer_new":[97],"fu_cfu_offer_set_bank":[108],"fu_cfu_offer_set_component_id":[109],"fu_cfu_offer_set_force_ignore_version":[110],"fu_cfu_offer_set_force_immediate_reset":[111],"fu_cfu_offer_set_hw_variant":[112],"fu_cfu_offer_set_milestone":[113],"fu_cfu_offer_set_product_id":[114],"fu_cfu_offer_set_protocol_revision":[115],"fu_cfu_offer_set_segment_number":[116],"fu_cfu_offer_set_token":[117],"fu_cfu_payload_new":[119],"fu_chunk_array_mutable_new":[135],"fu_chunk_array_new":[136],"fu_chunk_array_new_from_bytes":[137],"fu_chunk_array_to_string":[138],"fu_chunk_bytes_new":[121],"fu_chunk_get_address":[123],"fu_chunk_get_bytes":[124],"fu_chunk_get_data":[125],"fu_chunk_get_data_out":[126],"fu_chunk_get_data_sz":[127],"fu_chunk_get_idx":[128],"fu_chunk_get_page":[129],"fu_chunk_new":[122],"fu_chunk_set_address":[130],"fu_chunk_set_bytes":[131],"fu_chunk_set_idx":[132],"fu_chunk_set_page":[133],"fu_chunk_to_string":[134],"fu_common_align_up":[1021],"fu_common_check_full_disk_encryption":[1022],"fu_common_get_memory_size":[1023],"fu_common_guid_is_plausible":[1024],"fu_common_is_live_media":[1025],"fu_context_add_compile_version":[141],"fu_context_add_firmware_gtype":[142],"fu_context_add_quirk_key":[143],"fu_context_add_runtime_version":[144],"fu_context_add_udev_subsystem":[145],"fu_context_get_battery_level":[146],"fu_context_get_battery_state":[147],"fu_context_get_battery_threshold":[148],"fu_context_get_firmware_gtype_by_id":[149],"fu_context_get_firmware_gtype_ids":[150],"fu_context_get_hwid_guids":[151],"fu_context_get_hwid_replace_value":[152],"fu_context_get_hwid_value":[153],"fu_context_get_lid_state":[154],"fu_context_get_smbios_data":[155],"fu_context_get_smbios_integer":[156],"fu_context_get_smbios_string":[157],"fu_context_get_udev_subsystems":[158],"fu_context_has_hwid_flag":[159],"fu_context_has_hwid_guid":[160],"fu_context_load_hwinfo":[161],"fu_context_load_quirks":[162],"fu_context_lookup_quirk_by_id":[163],"fu_context_lookup_quirk_by_id_iter":[164],"fu_context_new":[140],"fu_context_security_changed":[165],"fu_context_set_battery_level":[166],"fu_context_set_battery_state":[167],"fu_context_set_battery_threshold":[168],"fu_context_set_compile_versions":[169],"fu_context_set_lid_state":[170],"fu_context_set_runtime_versions":[171],"fu_coswid_firmware_new":[179],"fu_cpu_get_vendor":[1026],"fu_cpuid":[1027],"fu_crc16":[1028],"fu_crc16_full":[1029],"fu_crc32":[1030],"fu_crc32_full":[1031],"fu_crc8":[1032],"fu_crc8_full":[1033],"fu_devic":[1196],"fu_device_activate":[182],"fu_device_add_checksum":[1125],"fu_device_add_child":[183],"fu_device_add_counterpart_guid":[184],"fu_device_add_flag":[185],"fu_device_add_flagdev":[1196],"fu_device_add_guid":[186],"fu_device_add_guid_full":[187],"fu_device_add_guiddev":[1196],"fu_device_add_icon":[1126],"fu_device_add_icondev":[1196],"fu_device_add_instance_id":[188],"fu_device_add_instance_id_full":[189],"fu_device_add_instance_str":[190],"fu_device_add_instance_strdev":[208],"fu_device_add_instance_strsafe":[191],"fu_device_add_instance_strup":[192],"fu_device_add_instance_u16":[193],"fu_device_add_instance_u16dev":[208],"fu_device_add_instance_u32":[194],"fu_device_add_instance_u4":[195],"fu_device_add_instance_u8":[196],"fu_device_add_internal_flag":[197],"fu_device_add_issue":[1127],"fu_device_add_parent_guid":[198],"fu_device_add_parent_physical_id":[199],"fu_device_add_possible_plugin":[200],"fu_device_add_private_flag":[201,1196],"fu_device_add_problem":[202],"fu_device_add_protocol":[1128],"fu_device_add_release":[1129],"fu_device_add_security_attrs":[203],"fu_device_add_string":[204],"fu_device_add_vendor_id":[1130],"fu_device_attach":[205],"fu_device_attach_full":[206],"fu_device_bind_driver":[207],"fu_device_build_instance_id":[208],"fu_device_build_instance_id_quirk":[209],"fu_device_cleanup":[210],"fu_device_clos":[263],"fu_device_close":[211],"fu_device_convert_instance_ids":[212],"fu_device_detach":[213],"fu_device_detach_full":[214],"fu_device_dump_firmware":[215],"fu_device_emit_request":[216],"fu_device_ensure_id":[217],"fu_device_get_alternate":[218],"fu_device_get_alternate_id":[219],"fu_device_get_backend_id":[220],"fu_device_get_battery_level":[221],"fu_device_get_battery_threshold":[222],"fu_device_get_branch":[1131],"fu_device_get_checksums":[1132],"fu_device_get_children":[223],"fu_device_get_composite_id":[1133],"fu_device_get_context":[224],"fu_device_get_created":[1134],"fu_device_get_custom_flags":[225],"fu_device_get_equivalent_id":[226],"fu_device_get_firmware_gtype":[227],"fu_device_get_firmware_size_max":[228],"fu_device_get_firmware_size_min":[229],"fu_device_get_flags":[1135],"fu_device_get_flashes_left":[1136],"fu_device_get_guid_default":[1137],"fu_device_get_guids":[1138],"fu_device_get_guids_as_str":[230],"fu_device_get_icons":[1139],"fu_device_get_id":[298,1140],"fu_device_get_iddevic":[1196],"fu_device_get_install_duration":[1141],"fu_device_get_instance_ids":[1142],"fu_device_get_internal_flags":[231],"fu_device_get_issues":[1143],"fu_device_get_logical_id":[232],"fu_device_get_metadata":[233],"fu_device_get_metadata_boolean":[234],"fu_device_get_metadata_integer":[235],"fu_device_get_modified":[1144],"fu_device_get_name":[1145],"fu_device_get_order":[236],"fu_device_get_parent":[237],"fu_device_get_parent_guids":[238],"fu_device_get_parent_physical_ids":[239],"fu_device_get_physical_id":[240],"fu_device_get_plugin":[1146],"fu_device_get_possible_plugins":[241],"fu_device_get_priority":[242],"fu_device_get_private_flags":[243],"fu_device_get_protocols":[1147],"fu_device_get_proxy":[244],"fu_device_get_proxy_guid":[245],"fu_device_get_proxy_with_fallback":[246],"fu_device_get_release_default":[247],"fu_device_get_remove_delay":[248],"fu_device_get_request_cnt":[249],"fu_device_get_results":[250],"fu_device_get_root":[251],"fu_device_get_serial":[1148],"fu_device_get_specialized_gtype":[252],"fu_device_get_summary":[1149],"fu_device_get_update_error":[1150],"fu_device_get_update_image":[1151],"fu_device_get_update_message":[1152],"fu_device_get_update_state":[1153],"fu_device_get_vendor":[1154],"fu_device_get_vendor_ids":[1155],"fu_device_get_version":[1156],"fu_device_get_version_bootloader":[1157],"fu_device_get_version_bootloader_raw":[1158],"fu_device_get_version_bootloaderdev":[1196],"fu_device_get_version_build_date":[1159],"fu_device_get_version_format":[1160],"fu_device_get_version_lowest":[1161],"fu_device_get_version_lowest_raw":[1162],"fu_device_get_version_lowestdev":[1196],"fu_device_get_version_raw":[1163],"fu_device_has_flag":[1164],"fu_device_has_flagdevic":[1196],"fu_device_has_guid":[253],"fu_device_has_icon":[1165],"fu_device_has_inhibit":[254],"fu_device_has_instance_id":[1166],"fu_device_has_internal_flag":[255],"fu_device_has_parent_guid":[256],"fu_device_has_parent_physical_id":[257],"fu_device_has_private_flag":[258,1196],"fu_device_has_protocol":[1167],"fu_device_has_vendor_id":[1168],"fu_device_incorporate":[259],"fu_device_incorporate_flag":[260],"fu_device_incorporate_from_component":[261],"fu_device_inhibit":[262],"fu_device_internal_auto_pause_polling":[764],"fu_device_internal_flag_attach_extra_reset":[765],"fu_device_internal_flag_auto_parent_children":[766],"fu_device_internal_flag_ensure_semver":[767],"fu_device_internal_flag_from_string":[326],"fu_device_internal_flag_inherit_activation":[768],"fu_device_internal_flag_inhibit_children":[769],"fu_device_internal_flag_is_open":[770],"fu_device_internal_flag_md_set_icon":[771],"fu_device_internal_flag_md_set_name":[772],"fu_device_internal_flag_md_set_name_category":[773],"fu_device_internal_flag_md_set_signed":[774],"fu_device_internal_flag_md_set_vendor":[775],"fu_device_internal_flag_md_set_verfmt":[776],"fu_device_internal_flag_no_auto_instance_ids":[777],"fu_device_internal_flag_no_auto_remove":[778],"fu_device_internal_flag_no_auto_remove_children":[779],"fu_device_internal_flag_no_lid_closed":[780],"fu_device_internal_flag_no_probe":[781],"fu_device_internal_flag_no_serial_number":[782],"fu_device_internal_flag_none":[783],"fu_device_internal_flag_only_supported":[784],"fu_device_internal_flag_only_wait_for_replug":[785],"fu_device_internal_flag_replug_match_guid":[786],"fu_device_internal_flag_retry_open":[787],"fu_device_internal_flag_to_string":[327],"fu_device_internal_flag_use_parent_for_battery":[788],"fu_device_internal_flag_use_parent_for_open":[789],"fu_device_internal_flag_use_proxy_fallback":[790],"fu_device_locker_close":[340],"fu_device_locker_new":[338],"fu_device_locker_new_ful":[338],"fu_device_locker_new_full":[339],"fu_device_metadata_tbt_is_safe_mode":[791],"fu_device_metadata_uefi_capsule_flags":[792],"fu_device_metadata_uefi_device_kind":[793],"fu_device_metadata_uefi_fw_version":[794],"fu_device_new":[181],"fu_device_open":[13,211,263],"fu_device_poll":[264],"fu_device_poll_locker_new":[265],"fu_device_prepare":[266],"fu_device_prepare_firmware":[267],"fu_device_probe":[268],"fu_device_probe_invalidate":[269],"fu_device_read_firmware":[270],"fu_device_register_private_flag":[271,1196],"fu_device_reload":[272],"fu_device_remove_child":[273],"fu_device_remove_delay_re_enumerate":[795],"fu_device_remove_delay_user_replug":[796],"fu_device_remove_flag":[274],"fu_device_remove_internal_flag":[275],"fu_device_remove_metadata":[276],"fu_device_remove_private_flag":[277,1196],"fu_device_remove_problem":[278],"fu_device_report_metadata_post":[279],"fu_device_report_metadata_pre":[280],"fu_device_rescan":[281],"fu_device_retry":[282],"fu_device_retry_add_recovery":[283],"fu_device_retry_full":[284],"fu_device_retry_set_delay":[285],"fu_device_set_alternate":[286],"fu_device_set_alternate_id":[287],"fu_device_set_backend_id":[288],"fu_device_set_battery_level":[289],"fu_device_set_battery_threshold":[290],"fu_device_set_branch":[1169],"fu_device_set_context":[291],"fu_device_set_created":[1170],"fu_device_set_custom_flags":[292],"fu_device_set_description":[1171],"fu_device_set_equivalent_id":[293],"fu_device_set_firmware_gtype":[294],"fu_device_set_firmware_size":[295],"fu_device_set_firmware_size_max":[296],"fu_device_set_firmware_size_min":[267,297],"fu_device_set_flags":[1172],"fu_device_set_flashes_left":[1173],"fu_device_set_id":[298],"fu_device_set_iddev":[1196],"fu_device_set_install_duration":[1174],"fu_device_set_internal_flags":[299],"fu_device_set_logical_id":[300],"fu_device_set_metadata":[301],"fu_device_set_metadata_boolean":[302],"fu_device_set_metadata_integer":[303],"fu_device_set_modified":[1175],"fu_device_set_name":[304],"fu_device_set_order":[305],"fu_device_set_parent":[306],"fu_device_set_physical_id":[307],"fu_device_set_plugin":[1176],"fu_device_set_poll_interv":[308],"fu_device_set_poll_interval":[308],"fu_device_set_priority":[309],"fu_device_set_private_flags":[310],"fu_device_set_progress":[311],"fu_device_set_proxy":[312],"fu_device_set_proxy_guid":[313],"fu_device_set_remove_delay":[314],"fu_device_set_serial":[1177],"fu_device_set_summary":[1178],"fu_device_set_update_error":[1179],"fu_device_set_update_image":[1180],"fu_device_set_update_message":[1181],"fu_device_set_update_state":[315],"fu_device_set_vendor":[316],"fu_device_set_version":[317],"fu_device_set_version_bootloader":[318],"fu_device_set_version_bootloader_raw":[1182],"fu_device_set_version_build_date":[1183],"fu_device_set_version_format":[319],"fu_device_set_version_lowest":[320],"fu_device_set_version_lowest_raw":[1184],"fu_device_set_version_raw":[1185],"fu_device_set_versiondev":[1196],"fu_device_set_versiondevic":[1196],"fu_device_setup":[321],"fu_device_sleep_with_progress":[1196],"fu_device_to_string":[322],"fu_device_unbind_driver":[323],"fu_device_uninhibit":[324],"fu_device_write_firmware":[325],"fu_dfu_firmare_version_atmel_avr":[797],"fu_dfu_firmare_version_dfu_1_0":[798],"fu_dfu_firmare_version_dfu_1_1":[799],"fu_dfu_firmare_version_dfuse":[800],"fu_dfu_firmare_version_unknown":[801],"fu_dfu_firmware_get_pid":[343],"fu_dfu_firmware_get_release":[344],"fu_dfu_firmware_get_version":[345],"fu_dfu_firmware_get_vid":[346],"fu_dfu_firmware_new":[342],"fu_dfu_firmware_set_pid":[347],"fu_dfu_firmware_set_release":[348],"fu_dfu_firmware_set_version":[349],"fu_dfu_firmware_set_vid":[350],"fu_dfuse_firmware_new":[352],"fu_dump_bytes":[1034],"fu_dump_ful":[1196],"fu_dump_full":[1035],"fu_dump_raw":[1036,1196],"fu_efi_firmware_file_bios_guard":[802],"fu_efi_firmware_file_fv_image":[803],"fu_efi_firmware_file_microcode":[804],"fu_efi_firmware_file_new":[354],"fu_efi_firmware_filesystem_new":[356],"fu_efi_firmware_section_acpi1_table":[805],"fu_efi_firmware_section_acpi2_table":[806],"fu_efi_firmware_section_esrt_table":[807],"fu_efi_firmware_section_lzma_compress":[808],"fu_efi_firmware_section_new":[358],"fu_efi_firmware_section_smbios_table":[809],"fu_efi_firmware_section_tiano_compress":[810],"fu_efi_firmware_volume_guid_apple_boot":[811],"fu_efi_firmware_volume_guid_ffs1":[812],"fu_efi_firmware_volume_guid_ffs2":[813],"fu_efi_firmware_volume_guid_ffs3":[814],"fu_efi_firmware_volume_guid_nvram_evsa":[815],"fu_efi_firmware_volume_guid_nvram_evsa2":[816],"fu_efi_firmware_volume_guid_nvram_nvar":[817],"fu_efi_firmware_volume_guid_pfh1":[818],"fu_efi_firmware_volume_guid_pfh2":[819],"fu_efi_firmware_volume_new":[360],"fu_efi_guid_to_name":[1037],"fu_efi_signature_get_kind":[362],"fu_efi_signature_get_owner":[363],"fu_efi_signature_guid_microsoft":[820],"fu_efi_signature_guid_ovmf":[821],"fu_efi_signature_guid_ovmf_legacy":[822],"fu_efi_signature_guid_zero":[823],"fu_efi_signature_kind_to_string":[364],"fu_efi_signature_list_new":[366],"fu_efivar_attr_append_write":[824],"fu_efivar_attr_authenticated_write_access":[825],"fu_efivar_attr_bootservice_access":[826],"fu_efivar_attr_hardware_error_record":[827],"fu_efivar_attr_non_volatile":[828],"fu_efivar_attr_runtime_access":[829],"fu_efivar_attr_time_based_authenticated_write_access":[830],"fu_efivar_delete":[1038],"fu_efivar_delete_with_glob":[1039],"fu_efivar_exists":[1040],"fu_efivar_get_data":[1041],"fu_efivar_get_data_bytes":[1042],"fu_efivar_get_monitor":[1043],"fu_efivar_get_names":[1044],"fu_efivar_guid_efi_capsule_report":[831],"fu_efivar_guid_efi_global":[832],"fu_efivar_guid_fwupdate":[833],"fu_efivar_guid_security_database":[834],"fu_efivar_guid_ux_capsule":[835],"fu_efivar_secure_boot_enabled":[1045],"fu_efivar_set_data":[1046],"fu_efivar_set_data_bytes":[1047],"fu_efivar_space_used":[1048],"fu_efivar_supported":[1049],"fu_fdt_firmware_get_cpuid":[369],"fu_fdt_firmware_get_image_by_path":[370],"fu_fdt_firmware_new":[368],"fu_fdt_firmware_set_cpuid":[371],"fu_fdt_image_get_attr":[374],"fu_fdt_image_get_attr_str":[375],"fu_fdt_image_get_attr_strlist":[376],"fu_fdt_image_get_attr_u32":[377],"fu_fdt_image_get_attr_u64":[378],"fu_fdt_image_get_attrs":[379],"fu_fdt_image_new":[373],"fu_fdt_image_set_attr":[380],"fu_fdt_image_set_attr_str":[381],"fu_fdt_image_set_attr_strlist":[382],"fu_fdt_image_set_attr_uint32":[383],"fu_fdt_image_set_attr_uint64":[384],"fu_firmware_add_chunk":[389],"fu_firmware_add_flag":[390],"fu_firmware_add_image":[391],"fu_firmware_add_patch":[392],"fu_firmware_alignment_1":[836],"fu_firmware_alignment_128":[837],"fu_firmware_alignment_128k":[838],"fu_firmware_alignment_128m":[839],"fu_firmware_alignment_16":[840],"fu_firmware_alignment_16k":[841],"fu_firmware_alignment_16m":[842],"fu_firmware_alignment_1g":[843],"fu_firmware_alignment_1k":[844],"fu_firmware_alignment_1m":[845],"fu_firmware_alignment_2":[846],"fu_firmware_alignment_256":[847],"fu_firmware_alignment_256k":[848],"fu_firmware_alignment_256m":[849],"fu_firmware_alignment_2g":[850],"fu_firmware_alignment_2k":[851],"fu_firmware_alignment_2m":[852],"fu_firmware_alignment_32":[853],"fu_firmware_alignment_32k":[854],"fu_firmware_alignment_32m":[855],"fu_firmware_alignment_4":[856],"fu_firmware_alignment_4g":[857],"fu_firmware_alignment_4k":[858],"fu_firmware_alignment_4m":[859],"fu_firmware_alignment_512":[860],"fu_firmware_alignment_512k":[861],"fu_firmware_alignment_512m":[862],"fu_firmware_alignment_64":[863],"fu_firmware_alignment_64k":[864],"fu_firmware_alignment_64m":[865],"fu_firmware_alignment_8":[866],"fu_firmware_alignment_8k":[867],"fu_firmware_alignment_8m":[868],"fu_firmware_build":[393],"fu_firmware_build_from_xml":[394],"fu_firmware_export":[395],"fu_firmware_export_flag_ascii_data":[869],"fu_firmware_export_flag_include_debug":[870],"fu_firmware_export_flag_none":[871],"fu_firmware_export_to_xml":[396],"fu_firmware_flag_dedupe_id":[872],"fu_firmware_flag_dedupe_idx":[873],"fu_firmware_flag_done_parse":[874],"fu_firmware_flag_from_string":[440],"fu_firmware_flag_has_checksum":[875],"fu_firmware_flag_has_stored_size":[876],"fu_firmware_flag_has_vid_pid":[877],"fu_firmware_flag_none":[878],"fu_firmware_flag_to_string":[441],"fu_firmware_get_addr":[397],"fu_firmware_get_alignment":[398],"fu_firmware_get_bytes":[399],"fu_firmware_get_bytes_with_patches":[400],"fu_firmware_get_checksum":[401],"fu_firmware_get_chunks":[402],"fu_firmware_get_filename":[403],"fu_firmware_get_id":[404],"fu_firmware_get_idx":[405],"fu_firmware_get_image_by_checksum":[406],"fu_firmware_get_image_by_id":[407],"fu_firmware_get_image_by_id_bytes":[408],"fu_firmware_get_image_by_idx":[409],"fu_firmware_get_image_by_idx_bytes":[410],"fu_firmware_get_images":[411],"fu_firmware_get_offset":[412],"fu_firmware_get_parent":[413],"fu_firmware_get_size":[414],"fu_firmware_get_version":[415],"fu_firmware_get_version_raw":[416],"fu_firmware_has_flag":[417],"fu_firmware_id_header":[879],"fu_firmware_id_payload":[880],"fu_firmware_id_signature":[881],"fu_firmware_new":[386],"fu_firmware_new_from_byt":[426],"fu_firmware_new_from_bytes":[387],"fu_firmware_new_from_gtypes":[388],"fu_firmware_parse":[418],"fu_firmware_parse_file":[419],"fu_firmware_parse_ful":[874],"fu_firmware_parse_full":[420],"fu_firmware_remove_image":[421],"fu_firmware_remove_image_by_id":[422],"fu_firmware_remove_image_by_idx":[423],"fu_firmware_set_addr":[424],"fu_firmware_set_alignment":[425],"fu_firmware_set_bytes":[426],"fu_firmware_set_filename":[427],"fu_firmware_set_id":[428],"fu_firmware_set_idx":[429],"fu_firmware_set_offset":[430],"fu_firmware_set_parent":[431],"fu_firmware_set_size":[432],"fu_firmware_set_version":[433],"fu_firmware_set_version_raw":[434],"fu_firmware_strparse_uint16_safe":[442],"fu_firmware_strparse_uint24_safe":[443],"fu_firmware_strparse_uint32_safe":[444],"fu_firmware_strparse_uint4_safe":[445],"fu_firmware_strparse_uint8_safe":[446],"fu_firmware_to_string":[435],"fu_firmware_tokenize":[436],"fu_firmware_writ":[270,414,432],"fu_firmware_write":[437],"fu_firmware_write_chunk":[438],"fu_firmware_write_file":[439],"fu_fit_firmware_attr_algo":[882],"fu_fit_firmware_attr_compatible":[883],"fu_fit_firmware_attr_data":[884],"fu_fit_firmware_attr_data_offset":[885],"fu_fit_firmware_attr_data_size":[886],"fu_fit_firmware_attr_skip_offset":[887],"fu_fit_firmware_attr_store_offset":[888],"fu_fit_firmware_attr_timestamp":[889],"fu_fit_firmware_attr_value":[890],"fu_fit_firmware_attr_version":[891],"fu_fit_firmware_get_timestamp":[456],"fu_fit_firmware_id_configurations":[892],"fu_fit_firmware_id_images":[893],"fu_fit_firmware_new":[455],"fu_fit_firmware_set_timestamp":[457],"fu_fmap_firmware_new":[459],"fu_fmap_firmware_strlen":[894],"fu_hid_device_add_flag":[462],"fu_hid_device_get_interface":[463],"fu_hid_device_get_report":[464],"fu_hid_device_new":[461],"fu_hid_device_set_interface":[465],"fu_hid_device_set_report":[8,466],"fu_hid_device_verbos":[1195,1196],"fu_hwids_add_smbios_override":[470],"fu_hwids_get_guid":[471],"fu_hwids_get_guids":[472],"fu_hwids_get_keys":[473],"fu_hwids_get_replace_keys":[474],"fu_hwids_get_replace_values":[475],"fu_hwids_get_value":[476],"fu_hwids_has_guid":[477],"fu_hwids_key_baseboard_manufacturer":[895],"fu_hwids_key_baseboard_product":[896],"fu_hwids_key_bios_major_release":[897],"fu_hwids_key_bios_minor_release":[898],"fu_hwids_key_bios_vendor":[899],"fu_hwids_key_bios_version":[900],"fu_hwids_key_enclosure_kind":[901],"fu_hwids_key_family":[902],"fu_hwids_key_firmware_major_release":[903],"fu_hwids_key_firmware_minor_release":[904],"fu_hwids_key_manufacturer":[905],"fu_hwids_key_product_name":[906],"fu_hwids_key_product_sku":[907],"fu_hwids_new":[469],"fu_hwids_setup":[478],"fu_i2c_device_get_bus_number":[480],"fu_i2c_device_read":[481],"fu_i2c_device_set_bus_number":[482],"fu_i2c_device_write":[483],"fu_ifd_access_to_string":[1050],"fu_ifd_bios_new":[486],"fu_ifd_firmware_check_jedec_cmd":[489],"fu_ifd_firmware_new":[488],"fu_ifd_image_get_access":[492],"fu_ifd_image_new":[491],"fu_ifd_image_set_access":[493],"fu_ifd_region_to_access":[1051],"fu_ifd_region_to_name":[1052],"fu_ifd_region_to_string":[1053],"fu_ifwi_cpd_firmware_idx_manifest":[908],"fu_ifwi_cpd_firmware_idx_metadata":[909],"fu_ifwi_cpd_firmware_idx_moduledata_idx":[910],"fu_ifwi_cpd_firmware_new":[495],"fu_ifwi_fpt_firmware_idx_cksm":[911],"fu_ifwi_fpt_firmware_idx_fwim":[912],"fu_ifwi_fpt_firmware_idx_imgi":[913],"fu_ifwi_fpt_firmware_idx_info":[914],"fu_ifwi_fpt_firmware_idx_sdta":[915],"fu_ifwi_fpt_firmware_new":[497],"fu_ihex_firmware_get_records":[500],"fu_ihex_firmware_new":[499],"fu_ihex_firmware_record_type_data":[916],"fu_ihex_firmware_record_type_eof":[917],"fu_ihex_firmware_record_type_extended_linear":[918],"fu_ihex_firmware_record_type_extended_segment":[919],"fu_ihex_firmware_record_type_signature":[920],"fu_ihex_firmware_record_type_start_linear":[921],"fu_ihex_firmware_record_type_start_segment":[922],"fu_ihex_firmware_set_padding_value":[501],"fu_io_channel_new_file":[503],"fu_io_channel_read_byte_array":[505],"fu_io_channel_read_bytes":[506],"fu_io_channel_read_raw":[507],"fu_io_channel_shutdown":[508],"fu_io_channel_unix_get_fd":[509],"fu_io_channel_unix_new":[504],"fu_io_channel_write_byte_array":[510],"fu_io_channel_write_bytes":[511],"fu_io_channel_write_raw":[512],"fu_kenv_get_string":[1054],"fu_kernel_check_version":[1055],"fu_kernel_get_firmware_search_path":[1056],"fu_kernel_locked_down":[1057],"fu_kernel_reset_firmware_search_path":[1058],"fu_kernel_set_firmware_search_path":[1059],"fu_lid_state_to_string":[1060],"fu_linear_firmware_get_image_gtype":[515],"fu_linear_firmware_new":[514],"fu_major_version":[923],"fu_mei_device_connect":[518],"fu_mei_device_get_max_msg_length":[519],"fu_mei_device_get_protocol_version":[520],"fu_mei_device_read":[521],"fu_mei_device_write":[522],"fu_memcmp_safe":[1061],"fu_memcpy_safe":[1062],"fu_memdup_safe":[1063],"fu_memmem_safe":[1064],"fu_memread_uint16":[1065],"fu_memread_uint16_safe":[1066],"fu_memread_uint24":[1067],"fu_memread_uint32":[1068],"fu_memread_uint32_safe":[1069],"fu_memread_uint64":[1070],"fu_memread_uint64_safe":[1071],"fu_memread_uint8_safe":[1072],"fu_memwrite_uint16":[1073],"fu_memwrite_uint16_safe":[1074],"fu_memwrite_uint24":[1075],"fu_memwrite_uint32":[1076],"fu_memwrite_uint32_safe":[1077],"fu_memwrite_uint64":[1078],"fu_memwrite_uint64_safe":[1079],"fu_memwrite_uint8_safe":[1080],"fu_micro_version":[924],"fu_minor_version":[925],"fu_oprom_firmware_compression_type_none":[926],"fu_oprom_firmware_get_compression_type":[525],"fu_oprom_firmware_get_machine_type":[526],"fu_oprom_firmware_get_subsystem":[527],"fu_oprom_firmware_machine_type_x64":[927],"fu_oprom_firmware_new":[524],"fu_oprom_firmware_subsystem_efi_boot_srv_drv":[928],"fu_path_find_program":[1081],"fu_path_fnmatch":[1082],"fu_path_from_kind":[1083],"fu_path_get_files":[1084],"fu_path_glob":[1085],"fu_path_kind_firmware_search":[1056,1058,1059],"fu_path_mkdir":[1086],"fu_path_mkdir_parent":[1087],"fu_path_rmtree":[1088],"fu_plugin_add_device_gtype":[530],"fu_plugin_add_device_gtypeplugin":[1196],"fu_plugin_add_firmware_gtype":[531],"fu_plugin_add_flag":[1188],"fu_plugin_add_report_metadata":[532],"fu_plugin_add_rule":[533],"fu_plugin_add_ruleplugin":[1196],"fu_plugin_add_udev_subsystem":[534],"fu_plugin_alloc_data":[535],"fu_plugin_alloc_dataplugin":[1196],"fu_plugin_cache_add":[536],"fu_plugin_cache_lookup":[537],"fu_plugin_cache_remove":[538],"fu_plugin_device_add":[539],"fu_plugin_device_addplugin":[1196],"fu_plugin_device_register":[540],"fu_plugin_device_remove":[541],"fu_plugin_foo_attach":[1196],"fu_plugin_foo_attachfuplugin":[1196],"fu_plugin_foo_cleanup":[1196],"fu_plugin_foo_cleanupfuplugin":[1196],"fu_plugin_foo_coldplug":[1196],"fu_plugin_foo_coldplugfuplugin":[1196],"fu_plugin_foo_destroi":[1196],"fu_plugin_foo_destroyfuplugin":[1196],"fu_plugin_foo_detach":[1196],"fu_plugin_foo_detachfuplugin":[1196],"fu_plugin_foo_init":[1196],"fu_plugin_foo_initfuplugin":[1196],"fu_plugin_foo_prepar":[1196],"fu_plugin_foo_preparefuplugin":[1196],"fu_plugin_foo_reload":[1196],"fu_plugin_foo_reloadfuplugin":[1196],"fu_plugin_foo_startup":[1196],"fu_plugin_foo_startupfuplugin":[1196],"fu_plugin_foo_write_firmwar":[1196],"fu_plugin_foo_write_firmwarefuplugin":[1196],"fu_plugin_get_build_hash":[542],"fu_plugin_get_config_value":[543],"fu_plugin_get_config_value_boolean":[544],"fu_plugin_get_context":[545],"fu_plugin_get_contextplugin":[1196],"fu_plugin_get_data":[546],"fu_plugin_get_dataplugin":[1196],"fu_plugin_get_devices":[547],"fu_plugin_get_flags":[1189],"fu_plugin_get_name":[548],"fu_plugin_get_order":[549],"fu_plugin_get_priority":[550],"fu_plugin_get_report_metadata":[551],"fu_plugin_get_rules":[552],"fu_plugin_guess_name_from_fn":[586],"fu_plugin_has_flag":[1190],"fu_plugin_has_rule":[553],"fu_plugin_init":[1196],"fu_plugin_init_vfuncsfupluginvfunc":[1196],"fu_plugin_initi":[996],"fu_plugin_is_open":[554],"fu_plugin_name_compare":[555],"fu_plugin_new":[529],"fu_plugin_open":[556],"fu_plugin_order_compare":[557],"fu_plugin_remove_flag":[1191],"fu_plugin_rule_run_befor":[1196],"fu_plugin_runner_activate":[558],"fu_plugin_runner_add_security_attrs":[559],"fu_plugin_runner_attach":[560],"fu_plugin_runner_backend_device_added":[561],"fu_plugin_runner_backend_device_changed":[562],"fu_plugin_runner_cleanup":[563],"fu_plugin_runner_clear_results":[564],"fu_plugin_runner_coldplug":[565],"fu_plugin_runner_composite_cleanup":[566],"fu_plugin_runner_composite_prepare":[567],"fu_plugin_runner_detach":[568],"fu_plugin_runner_device_added":[569],"fu_plugin_runner_device_created":[570],"fu_plugin_runner_device_register":[571],"fu_plugin_runner_device_removed":[572],"fu_plugin_runner_get_results":[573],"fu_plugin_runner_init":[574],"fu_plugin_runner_prepare":[575],"fu_plugin_runner_reload":[576],"fu_plugin_runner_startup":[577],"fu_plugin_runner_unlock":[578],"fu_plugin_runner_verify":[579],"fu_plugin_runner_write_firmware":[580],"fu_plugin_set_config_value":[581],"fu_plugin_set_name":[582],"fu_plugin_set_order":[583],"fu_plugin_set_priority":[584],"fu_plugin_set_secure_config_value":[585],"fu_plugin_steelseries_init":[1196],"fu_plugin_steelseries_initfuplugin":[1196],"fu_progress_add_flag":[603],"fu_progress_add_step":[604,612],"fu_progress_add_stepprogress":[1196],"fu_progress_finished":[605],"fu_progress_flag_child_finished":[929],"fu_progress_flag_from_string":[627],"fu_progress_flag_guessed":[930],"fu_progress_flag_no_profile":[931],"fu_progress_flag_no_traceback":[932],"fu_progress_flag_none":[933],"fu_progress_flag_to_string":[628],"fu_progress_get_child":[606],"fu_progress_get_duration":[607],"fu_progress_get_id":[608],"fu_progress_get_name":[609],"fu_progress_get_percentage":[610],"fu_progress_get_profile":[611],"fu_progress_get_status":[612],"fu_progress_get_steps":[613],"fu_progress_has_flag":[614],"fu_progress_new":[602],"fu_progress_remove_flag":[615],"fu_progress_reset":[616],"fu_progress_set_id":[617],"fu_progress_set_idprogress":[1196],"fu_progress_set_name":[618],"fu_progress_set_percentage":[619],"fu_progress_set_percentage_full":[620],"fu_progress_set_profile":[621],"fu_progress_set_status":[622],"fu_progress_set_steps":[623],"fu_progress_set_stepsself":[601],"fu_progress_sleep":[624],"fu_progress_step_don":[601],"fu_progress_step_done":[625],"fu_progress_step_doneself":[601],"fu_progress_traceback":[626],"fu_quirks_add_possible_key":[635],"fu_quirks_battery_threshold":[934],"fu_quirks_branch":[935],"fu_quirks_cfi_device_block_size":[936],"fu_quirks_cfi_device_cmd_block_erase":[937],"fu_quirks_cfi_device_cmd_chip_erase":[938],"fu_quirks_cfi_device_cmd_page_prog":[939],"fu_quirks_cfi_device_cmd_read_data":[940],"fu_quirks_cfi_device_cmd_read_id":[941],"fu_quirks_cfi_device_cmd_read_id_sz":[942],"fu_quirks_cfi_device_cmd_read_status":[943],"fu_quirks_cfi_device_cmd_sector_erase":[944],"fu_quirks_cfi_device_cmd_write_en":[945],"fu_quirks_cfi_device_cmd_write_status":[946],"fu_quirks_cfi_device_page_size":[947],"fu_quirks_cfi_device_sector_size":[948],"fu_quirks_children":[949],"fu_quirks_counterpart_guid":[950],"fu_quirks_firmware_gtype":[951],"fu_quirks_firmware_size":[952],"fu_quirks_firmware_size_max":[953],"fu_quirks_firmware_size_min":[954],"fu_quirks_flags":[955],"fu_quirks_gtype":[956],"fu_quirks_guid":[957],"fu_quirks_icon":[958],"fu_quirks_inhibit":[959],"fu_quirks_install_duration":[960],"fu_quirks_issue":[961],"fu_quirks_load":[636],"fu_quirks_lookup_by_id":[637],"fu_quirks_lookup_by_id_iter":[638],"fu_quirks_name":[962],"fu_quirks_new":[634],"fu_quirks_parent_guid":[963],"fu_quirks_plugin":[964],"fu_quirks_priority":[965],"fu_quirks_protocol":[966],"fu_quirks_proxy_guid":[967],"fu_quirks_remove_delay":[968],"fu_quirks_summary":[969],"fu_quirks_update_image":[970],"fu_quirks_update_message":[971],"fu_quirks_vendor":[972],"fu_quirks_vendor_id":[973],"fu_quirks_version":[974],"fu_quirks_version_format":[975],"fu_security_attrs_append":[641],"fu_security_attrs_append_internal":[642],"fu_security_attrs_calculate_hsi":[643],"fu_security_attrs_depsolve":[644],"fu_security_attrs_get_all":[645],"fu_security_attrs_get_by_appstream_id":[646],"fu_security_attrs_new":[640],"fu_security_attrs_remove_all":[647],"fu_security_attrs_to_variant":[648],"fu_smbios_get_data":[651],"fu_smbios_get_integer":[652],"fu_smbios_get_string":[653],"fu_smbios_new":[650],"fu_smbios_setup":[654],"fu_smbios_setup_from_file":[655],"fu_smbios_setup_from_kernel":[656],"fu_smbios_setup_from_path":[657],"fu_smbios_structure_type_baseboard":[976],"fu_smbios_structure_type_bios":[977],"fu_smbios_structure_type_chassis":[978],"fu_smbios_structure_type_last":[979],"fu_smbios_structure_type_system":[980],"fu_srec_firmware_get_record":[436,452],"fu_srec_firmware_get_records":[660],"fu_srec_firmware_new":[659],"fu_srec_firmware_verbos":[1195],"fu_string_append":[1089],"fu_string_append_kb":[1090],"fu_string_append_ku":[1091],"fu_string_append_kx":[1092],"fu_string_replace":[1093],"fu_strjoin":[1094],"fu_strsafe":[1095],"fu_strsplit":[1096],"fu_strsplit_full":[1097],"fu_strstrip":[1098],"fu_strtobool":[1099],"fu_strtoull":[1100],"fu_strwidth":[1101],"fu_sum16":[1102],"fu_sum16_bytes":[1103],"fu_sum16w":[1104],"fu_sum16w_bytes":[1105],"fu_sum32":[1106],"fu_sum32_bytes":[1107],"fu_sum32w":[1108],"fu_sum32w_bytes":[1109],"fu_sum8":[1110],"fu_sum8_bytes":[1111],"fu_type_steelseries_gamepad":[1196],"fu_type_steelseries_mous":[1196],"fu_udev_device_debug":[1195],"fu_udev_device_emit_changed":[663],"fu_udev_device_get_bind_id":[664],"fu_udev_device_get_children_with_subsystem":[665],"fu_udev_device_get_dev":[666],"fu_udev_device_get_device_file":[667],"fu_udev_device_get_devtype":[668],"fu_udev_device_get_driver":[669],"fu_udev_device_get_fd":[670],"fu_udev_device_get_model":[671],"fu_udev_device_get_number":[672],"fu_udev_device_get_parent_name":[673],"fu_udev_device_get_parent_with_subsystem":[674],"fu_udev_device_get_revision":[675],"fu_udev_device_get_siblings_with_subsystem":[676],"fu_udev_device_get_slot_depth":[677],"fu_udev_device_get_subsystem":[678],"fu_udev_device_get_subsystem_model":[679],"fu_udev_device_get_subsystem_vendor":[680],"fu_udev_device_get_sysfs_attr":[681],"fu_udev_device_get_sysfs_attr_uint64":[682],"fu_udev_device_get_sysfs_path":[683],"fu_udev_device_get_vendor":[684],"fu_udev_device_ioctl":[685],"fu_udev_device_new":[662],"fu_udev_device_pread":[686],"fu_udev_device_pwrite":[687],"fu_udev_device_seek":[688],"fu_udev_device_set_bind_id":[689],"fu_udev_device_set_dev":[690],"fu_udev_device_set_fd":[691],"fu_udev_device_set_flags":[692],"fu_udev_device_set_logical_id":[693],"fu_udev_device_set_physical_id":[694],"fu_udev_device_write_sysfs":[695],"fu_usb_device_add_interface":[704],"fu_usb_device_debug":[1195],"fu_usb_device_find_udev_device":[705],"fu_usb_device_get_dev":[706],"fu_usb_device_get_pid":[707],"fu_usb_device_get_platform_id":[708],"fu_usb_device_get_spec":[709],"fu_usb_device_get_vid":[710],"fu_usb_device_is_open":[711],"fu_usb_device_new":[703],"fu_usb_device_set_configuration":[712],"fu_usb_device_set_dev":[713],"fu_uswid_firmware_new":[716],"fu_version_compare":[1112],"fu_version_ensure_semver":[1113],"fu_version_from_uint16":[1114],"fu_version_from_uint32":[1115],"fu_version_from_uint64":[1116],"fu_version_guess_format":[1117],"fu_version_parse_from_format":[1118],"fu_version_string":[1119],"fu_version_verify_format":[1120],"fu_volume_check_free_space":[722],"fu_volume_get_id":[723],"fu_volume_get_id_type":[724],"fu_volume_get_mount_point":[725],"fu_volume_is_encrypted":[726],"fu_volume_is_internal":[727],"fu_volume_is_mounted":[728],"fu_volume_kind_bdp":[981],"fu_volume_kind_esp":[982],"fu_volume_locker":[729],"fu_volume_mount":[730],"fu_volume_new_by_device":[718],"fu_volume_new_by_devnum":[719],"fu_volume_new_by_kind":[732],"fu_volume_new_esp_default":[720],"fu_volume_new_esp_for_path":[721],"fu_volume_unmount":[731],"fu_xmlb_builder_insert_kb":[1121],"fu_xmlb_builder_insert_kv":[1122],"fu_xmlb_builder_insert_kx":[1123],"fuarchive":[20],"fuarchivecompression":[983],"fuarchivefirmware":[30],"fuarchiveflags":[5],"fuarchiveformat":[984],"fuarchiveiteratefunc":[14],"fubackend":[36],"fubatterystate":[985],"fubluezbackend":[1196],"fubluezdevic":[1196],"fubluezdevice":[60],"fucabinet":[69],"fucabinetexportflags":[986],"fucabinetparseflags":[987],"fucabinetsignflags":[988],"fucfidevice":[79],"fucfidevicecmd":[989],"fucfuoffer":[96],"fucfupayload":[118],"fuchunk":[120],"fucontext":[139,1196],"fucontextlookupiter":[15],"fucoswidfirmware":[178],"fucpuvendor":[990],"fudevic":[633,1196],"fudevice":[180],"fudevice->cleanup":[210],"fudevice->prepar":[266],"fudevice->write_firmwar":[210,266],"fudeviceinstanceflags":[6],"fudeviceinternalflags":[0],"fudevicelocker":[337],"fudevicelockerfunc":[16],"fudeviceretryfunc":[17],"fudfufirmware":[341],"fudfusefirmware":[351],"fudumpflags":[7],"fuefifirmwarefile":[353],"fuefifirmwarefilesystem":[355],"fuefifirmwaresection":[357],"fuefifirmwarevolume":[359],"fuefisignature":[361],"fuefisignaturekind":[991],"fuefisignaturelist":[365],"fuendiantype":[1],"fufdtfirmware":[367],"fufdtimage":[372],"fufirmaresrecrecordkind":[992],"fufirmwar":[1196],"fufirmware":[385],"fufirmwareexportflags":[2],"fufirmwareflags":[3],"fufitfirmware":[454],"fufmapfirmware":[458],"fuhiddevice":[460],"fuhiddeviceflags":[8],"fuhwids":[468],"fui2cdevice":[479],"fuifdaccess":[9],"fuifdbios":[485],"fuifdfirmware":[487],"fuifdimage":[490],"fuifdregion":[993],"fuifwicpdfirmware":[494],"fuifwifptfirmware":[496],"fuihexfirmware":[498],"fuiochannel":[502],"fuiochannelflags":[10],"fulidstate":[994],"fulinearfirmware":[513],"full":[187,189,206,214,284,339,420,620,1022,1029,1031,1033,1035,1097,1196,1197],"fulli":[985,1195,1196],"fully_charged":[985],"fumeidevice":[517],"func":[14,16,17,19],"function":[23,37,49,56,59,126,212,218,237,244,249,263,265,282,283,284,286,323,338,340,393,394,436,448,452,465,470,501,601,613,623,644,1013,1062,1063,1066,1069,1071,1072,1074,1077,1079,1080,1097,1121,1122,1123,1193,1196],"fundament":[1197],"fuopromfirmware":[523],"fupathkind":[995],"fuplugin":[528],"fuplugindata":[1192,1196],"fupluginrule":[996],"fupluginverifyflags":[997],"fupluginvfuncs":[1193],"fuprogress":[601,621,1196],"fuprogressflags":[4],"fuquirks":[633],"fuquirksiter":[18],"fuquirksloadflags":[11],"further":[1196,1197],"fuse":[1197],"fusecurityattrs":[639],"fusecurityattrsflags":[12],"fused]#org.fwupd.hsi.platformfus":[1197],"fusmbios":[649],"fusmbioschassiskind":[998],"fusrecfirmware":[658],"fustrsplitfunc":[19],"futur":[1197],"fuudevdevic":[1196],"fuudevdevice":[661],"fuudevdeviceflags":[13],"fuusbdevice":[702],"fuuswidfirmware":[715],"fuvolume":[717],"fw.builder.xml":[393,394,448],"fwupd":[289,290,528,533,633,1124,1195,1196,1197],"fwupd-specif":[1083],"fwupd?":[1196],"fwupd]#test":[1197],"fwupd_acpitablesdir":[1195],"fwupd_curl_verbos":[1195],"fwupd_datadir":[1195],"fwupd_datadir_quirk":[1195],"fwupd_dbus_socket":[1195],"fwupd_dell_fake_smbio":[1195],"fwupd_dell_verbos":[1195],"fwupd_device_flag_install_parent_first":[1196],"fwupd_device_flag_needs_bootload":[1196],"fwupd_device_flag_require_ac":[1196],"fwupd_device_flag_updat":[1196],"fwupd_device_flag_wait_for_replug":[1196],"fwupd_device_list_verbos":[1195,1196],"fwupd_device_tests_base_uri":[1195],"fwupd_download_verbos":[1195],"fwupd_efiappdir":[1195],"fwupd_error":[1196],"fwupd_error_ac_power_requir":[1196],"fwupd_error_not_support":[1196],"fwupd_firmwaresearch":[1195],"fwupd_force_tpm2":[1195],"fwupd_guid_hash_str":[184,186,187],"fwupd_install_flag_forc":[1196],"fwupd_localstatedir":[1195],"fwupd_localstatedir_quirk":[1195],"fwupd_machine_kind":[1195],"fwupd_offline_trigg":[1195],"fwupd_plugin_test":[1195],"fwupd_plugindir":[1195],"fwupd_probe_verbos":[1195,1196],"fwupd_procf":[1195],"fwupd_profil":[1195],"fwupd_redfish_self_test":[1195],"fwupd_redfish_smbios_data":[1195],"fwupd_solokey_emul":[1195],"fwupd_status_device_busi":[1196],"fwupd_status_device_restart":[1196],"fwupd_status_device_writ":[1196],"fwupd_superio_disable_mirror":[1195],"fwupd_superio_recov":[1195],"fwupd_support":[1195],"fwupd_sysconfdir":[1195],"fwupd_sysfsdriverdir":[1195],"fwupd_sysfsfwattribdir":[1195],"fwupd_sysfsfwdir":[1195],"fwupd_sysfssecuritydir":[1195],"fwupd_sysfstpmdir":[1195],"fwupd_test_plugin_xml":[1195],"fwupd_uefi_capsule_recreate_cod_data":[1195],"fwupd_uefi_esp_path":[1195],"fwupd_uefi_test":[1195],"fwupd_verbos":[1195],"fwupd_wac_emul":[1195],"fwupd_xmlb_verbos":[1195],"fwupdinstallflag":[1196],"fwupdmgr":[1195],"fwupdtool":[1195,1196],"g++":[1196],"g_autofre":[1196],"g_autoptrfudevic":[1196],"g_bytes_get_data":[1013],"g_bytes_get_datablob_fw":[1196],"g_clear_object":[338,339],"g_debug":[1196],"g_file_set_contents\"/var/lib/fwupd/something\"":[1196],"g_log_domain":[1196],"g_set_error_literalerror":[1196],"g_set_errorerror":[1196],"g_strloc":[1196],"g_usleep":[1196],"gadget":[1197],"gbe":[993],"gboolean":[1196],"gbyte":[1001,1016,1196],"gbytearrai":[1007],"gcc":[1197],"gchar":[1196],"gener":[217,393,394,448,542,1196],"gerror":[1196],"get":[13,32,33,41,42,43,44,46,73,74,83,84,85,86,87,88,98,99,100,101,102,103,104,105,106,107,123,124,125,126,127,128,129,146,147,148,149,150,151,152,153,154,155,156,157,158,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,340,343,344,345,346,362,363,369,370,374,375,376,377,378,379,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,438,450,456,462,463,464,471,472,473,474,475,476,480,492,500,509,515,519,520,525,526,527,542,543,544,545,546,547,548,549,550,551,552,553,573,601,606,607,608,609,610,611,612,613,633,645,646,651,652,653,660,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,705,706,707,708,709,710,720,721,723,724,725,1010,1011,1012,1013,1023,1026,1041,1042,1043,1044,1048,1054,1056,1083,1084,1119,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1189,1195,1196,1197],"get-devices`":[1196],"get_checksum":[1196],"getreport":[464],"give":[1197],"given":[23,677,686,687,688,1013,1027,1028,1029,1030,1031,1032,1033,1093,1096,1097],"glibc":[1195],"glob":[1039,1082,1085],"gnome":[1197],"gnu":[983,984,1196],"gnu/svr4":[984],"gnutar":[984],"go":[248,501,601,1022,1197],"goal":[1197],"gobject":[1196],"goe":[337],"gone":[272],"good":[1196],"gpio":[1196],"gpointer":[1196],"gpu":[494,496],"grandpar":[13],"graphic":[1197],"greater":[1124],"group":[1039,1197],"grzip":[983],"gsize":[1196],"gstrv":[1097],"gtype":[142,149,150,227,252,294,388,513,515,516,530,531,949,951,956,1196],"guarante":[1196],"gudevdevic":[700,701],"guess":[142,406,531,586,727,930,1117],"gui":[1196],"guid":[151,160,164,184,186,187,188,198,212,230,238,245,253,256,281,313,363,471,472,477,518,587,638,786,950,957,963,967,981,982,1024,1037,1044,1137,1138,1196],"guidelin":[1196],"guint8":[1196],"gzip":[983],"ha":[37,38,39,40,45,53,54,55,56,57,159,160,176,202,212,222,253,254,255,256,257,258,262,269,272,278,282,284,291,307,324,334,335,414,417,470,477,489,539,546,553,589,590,591,601,614,625,629,630,674,691,701,796,874,875,877,971,1094,1164,1165,1166,1167,1168,1190,1196,1197],"had":[1197],"hand_held":[998],"handl":[200,210,266,282,284,340,633,792,793,794,1196],"handler":[200],"happen":[1196,1197],"hard":[633],"hardcod":[1195,1196],"hardwar":[45,57,102,112,151,152,155,157,160,161,163,164,207,264,269,281,308,323,464,466,468,477,478,494,496,633,636,637,638,654,791,930,1195,1196,1197],"hardware_in_bootload":[1196],"hardwareid":[475],"hash":[298,542,991,1196,1197],"have":[118,165,176,177,184,211,212,259,267,298,314,321,385,393,394,399,448,540,588,596,644,665,676,930,1196,1197],"headach":[1196],"header":[399,496,651,715,879,992,1196],"heart":[1196],"helper":[1196],"here":[298,468,532,1195,1196],"heurist":[1025,1117],"hex":[498,500,1092,1118,1196],"hexadecim":[1196],"hid":[8,460,461,463,465,467,693,1195],"hid-over-gatt":[1196],"hidden":[1048],"hide":[1197],"hierarch":[1196],"high":[1197],"higher":[236,242,305,309,549,550,583,584,1197],"hijack":[1197],"histori":[768],"hold":[1196],"hole":[500,660],"home":[1195,1197],"honor":[1195],"hopefulli":[1048],"host":[639,1197],"hostsecurityid":[1197],"hotplug":[1196],"how":[96,588,613,623,677,1196,1197],"howev":[1196,1197],"howto":[1196],"hsi":[12,165,177,203,643,1197],"hsi-1":[1197],"hsi-2":[1197],"hsi-3":[1197],"hsi-4":[1197],"hsi:5":[1197],"http_proxi":[1195],"https://devicetree-specification.readthedocs.io/en/latest/chapter5-flattened-format.html":[367],"https://docs.microsoft.com/en-us/windows-hardware/drivers/cfu/cfu-specif":[96,118],"https://github.com/u-boot/u-boot/blob/master/doc/uimage.fit/source_file_format.txt":[454],"https://www.dmtf.org/sites/default/files/standards/documents/dsp0134_3.1.1.pdf":[156,157,652,653],"hub":[795,1196],"huge":[633,1196,1197],"hugh":[1196,1197],"human":[460,796],"human-read":[1196],"hw":[102,112],"hwid":[151,152,153,159,160,468,472,473,895,896,897,898,899,900,901,902,903,904,905,906,907],"hwinfo":[161],"i.":[126,613,623,1196],"i/o":[1197],"i2c":[479,1196],"icon":[771,958,1126,1139,1165,1196],"id":[6,13,46,79,85,90,94,99,104,109,114,149,150,151,152,163,164,184,188,189,199,208,209,212,217,218,219,220,226,232,239,240,254,257,287,288,293,298,300,307,328,330,332,343,344,346,347,350,391,404,407,408,422,428,468,539,552,553,604,608,617,623,637,638,639,646,664,689,693,694,696,708,723,724,777,786,872,877,879,880,881,892,893,941,942,973,989,1130,1133,1140,1142,1155,1166,1168,1196,1197],"id=\"conclusions\"></a>":[1197],"id=\"hsi-level0\"></a>":[1197],"id=\"hsi-level1\"></a>":[1197],"id=\"hsi-level2\"></a>":[1197],"id=\"hsi-level3\"></a>":[1197],"id=\"hsi-level4\"></a>":[1197],"id=\"hsi-level5\"></a>":[1197],"id=\"ommissions\"></a>":[1197],"id=\"org.fwupd.hsi.acpidmar\"></a>":[1197],"id=\"org.fwupd.hsi.amd.platformrollbackprotection\"></a>":[1197],"id=\"org.fwupd.hsi.amd.spireplayprotection\"></a>":[1197],"id=\"org.fwupd.hsi.amd.spiwriteprotection\"></a>":[1197],"id=\"org.fwupd.hsi.encryptedram\"></a>":[1197],"id=\"org.fwupd.hsi.intelbootguard.acm\"></a>":[1197],"id=\"org.fwupd.hsi.intelbootguard.enabled\"></a>":[1197],"id=\"org.fwupd.hsi.intelbootguard.otp\"></a>":[1197],"id=\"org.fwupd.hsi.intelbootguard.policy\"></a>":[1197],"id=\"org.fwupd.hsi.intelbootguard.verified\"></a>":[1197],"id=\"org.fwupd.hsi.intelcet.active\"></a>":[1197],"id=\"org.fwupd.hsi.intelcet.enabled\"></a>":[1197],"id=\"org.fwupd.hsi.inteldci.enabled\"></a>":[1197],"id=\"org.fwupd.hsi.inteldci.locked\"></a>":[1197],"id=\"org.fwupd.hsi.intelsmap\"></a>":[1197],"id=\"org.fwupd.hsi.iommu\"></a>":[1197],"id=\"org.fwupd.hsi.kernel.intelbootguard\"></a>":[1197],"id=\"org.fwupd.hsi.mei.manufacturingmode\"></a>":[1197],"id=\"org.fwupd.hsi.mei.overridestrap\"></a>":[1197],"id=\"org.fwupd.hsi.mei.version\"></a>":[1197],"id=\"org.fwupd.hsi.platformdebugenabled\"></a>":[1197],"id=\"org.fwupd.hsi.platformdebuglocked\"></a>":[1197],"id=\"org.fwupd.hsi.platformfused\"></a>":[1197],"id=\"org.fwupd.hsi.prebootdma\"></a>":[1197],"id=\"org.fwupd.hsi.spi.bioswe\"></a>":[1197],"id=\"org.fwupd.hsi.spi.ble\"></a>":[1197],"id=\"org.fwupd.hsi.spi.descriptor\"></a>":[1197],"id=\"org.fwupd.hsi.spi.smmbwp\"></a>":[1197],"id=\"org.fwupd.hsi.suspendtoidle\"></a>":[1197],"id=\"org.fwupd.hsi.suspendtoram\"></a>":[1197],"id=\"org.fwupd.hsi.tpm.emptypcr\"></a>":[1197],"id=\"org.fwupd.hsi.tpm.reconstructionpcr0\"></a>":[1197],"id=\"org.fwupd.hsi.tpm.version20\"></a>":[1197],"id=\"org.fwupd.hsi.uefi.pk\"></a>":[1197],"id=\"org.fwupd.hsi.uefi.secureboot\"></a>":[1197],"id=\"runtime-bang\"></a>":[1197],"id=\"runtime-behaviour\"></a>":[1197],"id=\"tests\"></a>":[1197],"id=\"verifying\"></a>":[1197],"idea":[633,1196],"ident":[1196],"identif":[1196],"identifi":[85,90,107,117,694,1196],"identification\"":[1196],"idl":[996,1197],"idtyp":[724],"idx":[128,132,405,409,410,423,429,873],"ie":[993,995],"if":[1196],"ifd":[9,485,487,488,490,993,1050,1051,1052,1053],"ifdata->proxi":[1196],"ifwi":[494,496,908,909,910,911,912,913,914,915],"ignor":[5,11,100,110,200,202,262,278,324,539,540,596,694,1195],"ignore_path":[5],"ihex":[498,499],"imag":[30,104,114,215,341,351,367,370,372,373,374,375,376,377,378,379,380,381,382,383,384,385,387,389,391,392,393,394,397,399,402,403,404,405,406,407,408,409,410,411,412,414,418,419,420,421,422,423,424,426,427,429,430,432,437,438,439,448,453,454,458,490,494,496,498,500,513,514,515,516,523,658,660,876,882,883,884,885,886,887,888,889,891,893,908,909,910,911,912,913,914,915,970,1151,1180,1196,1197],"img":[872,873],"immedi":[101,111],"impact":[1197],"implement":[96,1193,1196,1197],"implic":[633],"import":[198,199,263,1196,1197],"imposs":[1197],"impract":[1197],"in":[1196],"in-between":[1196],"in-memori":[20],"in-situ":[100,101,110,111],"includ":[393,394,399,448,494,496,532,633,651,870,1086,1087,1195,1196,1197],"incompat":[1196],"incomplet":[501,1197],"incorpor":[259,260,261],"incorrectli":[1197],"increas":[1195,1196,1197],"inde":[1197],"independ":[1196],"index":[120,128,132,405,409,410,423,429,908,909,910,911,912,913,914,915],"indic":[38,39,40,1197],"indirect":[1197],"indirectli":[612],"individu":[1197],"inexpens":[1197],"info":[914],"inform":[45,57,161,165,177,237,306,633,870,1195,1196,1197],"information.**":[1197],"infrastructur":[494,496],"inherit":[768],"inhibit":[202,254,262,278,324,769,959,996,1196],"inhibitor":[278,324],"inhibits_idle":[996],"init":[574,1196],"initi":[263,1197],"input":[10,406,1012,1097,1120],"insecur":[1197],"insert":[1094,1121,1122,1123,1196,1197],"inspect":[1196],"instal":[236,305,633,960,995,1119,1124,1141,1174,1196,1197],"instanc":[6,36,45,57,66,79,188,189,190,191,192,193,194,195,196,208,209,212,237,244,269,306,312,540,596,693,694,777,913,1083,1142,1166,1196,1197],"instantan":[1196],"instead":[188,222,399,414,530,1196,1197],"instruct":[1197],"integ":[156,235,303,652,794,1002,1003,1004,1005,1091,1092,1100,1123],"integr":[494,496],"intel":[485,487,490,494,495,496,497,498,517,990,1196,1197],"intend":[1197],"intention":[1063],"interact":[6,336,1197],"interchang":[984],"interfac":[79,268,321,460,463,465,467,517,704,734,735,1196,1197],"interface-specif":[1196],"interface]https://www.intel.co.uk/content/www/uk/en/support/articles/000029393/processors.html":[1197],"interface]https://www.kernel.org/doc/html/latest/hid/hidraw.html":[1196],"intern":[0,4,197,211,231,255,263,275,299,303,326,327,431,642,727,875,1196,1197],"internet":[1197],"interpret":[1197],"interrupt":[8,1197],"interv":[308],"introduc":[1196],"introduct":[1196,1197],"invalid":[45,50,57,269,304,465,1197],"invers":[1196],"invok":[211,263],"involv":[314,1197],"io":[10,502],"ioctl":[685],"ioctl_retry":[13],"iommu":[1197],"iommu=pt`":[1197],"iot_gateway":[998],"ipu":[494,496],"is":[1196],"is_feature":[8],"isn't":[1196],"iso9660":[984],"issu":[211,263,961,1127,1143,1197],"it":[556,585,1056,1196,1197],"it'":[43,96,543,544,633,1196],"item":[233,234,235,276,301,302,303,1094,1097,1196],"iter":[14,15,17,18,19,23,164,533,638],"itself":[246,795,1196,1197],"ivr":[1197],"i\u00b2c":[479,480,481,482,483,484],"jargon":[1197],"jcat":[76,78],"jedec":[94,489],"join":[230,1094],"journal":[1196],"journalist":[1197],"just":[272,314,338,339,633,1014,1118,1196,1197],"kb":[1090,1121],"keep":[1196,1197],"kei":[11,43,83,86,87,88,143,152,153,208,209,365,471,473,474,475,476,543,544,635,895,896,897,898,899,900,901,902,903,904,905,906,907,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,1043,1089,1090,1091,1092,1195,1196,1197],"kek":[365],"kenv":[1054],"kernel":[8,207,323,656,995,1048,1049,1054,1055,1056,1057,1058,1059,1196,1197],"kind":[249,362,364,732,901,991,992,995,998,1083,1196,1197],"kit":[995],"know":[1196,1197],"known":[474,601,1037,1196,1197],"ku":[1091],"kv":[1122],"kx":[1092,1123],"lab":[1197],"lang":[1195],"laptop":[147,154,167,170,780,998,1197],"larger":[392,438],"largest":[83,86,89,91],"last":[211,250,282,284,610,979,1096],"launch":[1197],"layer":[1196,1197],"layout":[1195],"lead":[1098,1197],"leaf":[1027],"leak":[197,255,275],"least":[1055,1196,1197],"left":[96,1136,1173],"length":[406,442,443,444,445,446,519,1000],"less":[135,136,137,314,1048],"let":[245,1022,1196],"level":[146,166,172,176,221,289,290,697,788,790,1051,1196,1197],"leverag":[1196],"lgpl-2.1+":[1196],"libcurl":[1195],"libfwupd":[1124],"libfwupdplugin":[1119,1195],"librari":[1119,1196],"lid":[154,170,175,780,994,1060],"like":[267,307,494,496,501,1024,1195,1196,1197],"limit":[267,1063,1197],"limonciello":[1197],"line":[500],"linear":[136,137,500,513,660],"link":[183,198,199,218,219,286,287],"linux":[220,288,656,661,1054,1196,1197],"list":[200,241,256,257,365,489,500,533,539,541,551,660,665,676,779,883,1044,1195,1196],"listen":[1196],"littl":[1197],"live":[1025,1196,1197],"load":[5,11,96,161,162,636,987,995,1195,1196,1197],"loader":[1195,1196],"local":[995,1197],"localconfdir_pkg":[995],"localstatedir":[995],"localstatedir_metadata":[995],"localstatedir_pkg":[995],"localstatedir_quirks":[995],"localstatedir_remotes":[995],"locat":[725,995,1197],"lock":[729,995,1057,1197],"lockdir":[995],"lockdown":[1057],"locked]#org.fwupd.hsi.platformdebuglock":[1197],"locker":[16,82,265,337,340,729],"log":[1197],"logic":[180,183,198,199,217,223,232,237,251,300,306,307,330,693,786,1196],"long":[983,1094,1197],"long-term":[633],"longer":[314,1196],"look":[163,164,637,638,995,1024,1081,1196],"lookup":[15,24,46,163,164,537,637,638],"loop":[613,623,1196],"loss":[182],"lot":[1196],"low":[289,290,697],"low-level":[685,700,701,714],"low_profile_desktop":[998],"lower":[236,305,549,583],"lowest":[320,1161,1162,1184,1196,1197],"lrzip":[983],"lun":[694],"lunch_box":[998],"lvf":[1197],"lvfs*":[1197],"lz4":[983],"lzip":[983],"lzma":[983],"lzo":[983],"lzop":[983],"lzw":[983],"machin":[525,526,527,927,1195,1197],"macro":[1124,1196],"made":[513,514],"magic":[633,796],"mai":[96,165,177,198,199,215,218,219,220,223,230,237,251,263,286,287,291,306,313,523,533,540,588,596,621,690,1013,1048,1119,1195,1196,1197],"main":[1196],"main_server":[998],"maintain":[1196],"mainten":[1196],"major":[897,903,923],"major.minor.micro":[1124],"make":[107,117,621,1195,1196,1197],"malici":[1062,1063,1066,1069,1071,1072,1074,1077,1079,1080,1197],"manag":[66,340,517,1196,1197],"mani":[613,623,1196,1197],"manifest":[393,394,448,908],"manual":[96,212,338,339,340,393,394,448,540,596,1196],"manufactur":[1197],"map":[633,1197],"mario":[1197],"mark":[238,239,644],"market":[1197],"match":[6,184,198,199,215,218,238,239,245,256,257,292,422,423,468,705,786,1044,1082,1085,1118,1120,1195,1196,1197],"matrix":[1196],"matrosov":[1197],"matter":[1196],"max":[77,228,296,519,993],"maximum":[77,88,93,228,248,296,519,953,993,1096],"me":[993,1197],"me]https://chromium.googlesource.com/chromiumos/third_party/flashrom/+/master/documentation/mysteries_intel.txt":[1197],"mean":[182,207,218,323,692,1196,1197],"meant":[1196],"measur":[930,1197],"mechan":[1196,1197],"media":[1025],"meet":[1197],"mei":[517,518],"member":[1122,1123],"memcmp":[1061],"memcpi":[1062],"memdup":[1063],"memmem":[1064],"memori":[21,79,135,136,137,270,1008,1023,1024,1028,1029,1030,1031,1032,1033,1062,1063,1064,1066,1069,1071,1072,1074,1077,1079,1080,1197],"memread":[1065,1066,1067,1068,1069,1070,1071,1072],"memwrit":[1073,1074,1075,1076,1077,1078,1079,1080],"merg":[393,394,448],"meson":[1195],"messag":[230,462,519,971,1152,1181,1196],"metadata":[74,204,233,234,235,276,279,280,301,302,303,322,532,540,551,587,596,633,771,772,773,774,775,776,784,883,909,995,996,1196],"metadata_source":[996],"metainfo":[74,1196],"method":[45,57,61,62,142,143,145,211,263,269,308,530,531,534,604,623,1196,1197],"micro":[924],"microsecond":[1196],"microsoft":[468],"might":[198,199,500,660,1052,1195,1196,1197],"migrat":[1196],"mileston":[103,113],"millisecond":[968],"min":[229,297],"mini_pc":[998],"mini_tower":[998],"minimum":[229,297,954,1016,1196,1197],"minor":[898,904,925,1197],"mismatch":[100,110],"miss":[1197],"mitig":[1197],"mkdir":[1086,1087],"mmap":[126],"mode":[184,205,206,213,214,248,272,314,791,1196,1197],"mode]#org.fwupd.hsi.mei.manufacturingmod":[1197],"model":[671,679,1196,1197],"modern":[1197],"modif":[1118,1197],"modifi":[633,1013,1144,1175,1197],"modul":[556,601,910,1196,1197],"moment":[126],"money**":[1197],"monitor":[606,1043],"monoton":[1197],"more":[198,199,399,588,1195,1196,1197],"most":[416,465,633,693,1195,1196,1197],"motherboard":[895,896,976,1197],"mount":[723,725,728,729,730,733],"mous":[693,694],"mpx":[1197],"ms":[1195],"msg":[519],"mtree":[984],"much":[96,1196],"multi_system":[998],"multipl":[45,57,96,98,108,211,240,263,269,307,465,481,483,523,715,1093,1104,1105,1108,1109,1196],"must":[604,619,623,1104,1105,1108,1109,1196,1197],"mutabl":[120,126,135],"my_private_flag":[1196],"myflag,is-bootloader`":[1196],"name":[44,52,142,143,200,241,304,316,531,533,548,555,557,582,586,609,618,635,673,772,773,906,962,964,972,1037,1044,1052,1145,1196],"namespac":[143,635],"nativ":[1196],"natur":[1197],"nearli":[523],"necessari":[1196],"need":[212,268,336,633,690,765,792,793,794,1062,1063,1066,1069,1071,1072,1074,1077,1079,1080,1196,1197],"nest":[30,393,394,395,396,448,449],"network":[96,1195],"never":[1062],"new":[21,31,70,80,82,97,101,111,119,121,122,135,136,137,140,179,181,182,265,338,339,342,352,354,356,358,360,366,368,373,386,387,388,455,459,461,469,486,488,491,495,497,499,503,504,514,524,529,602,633,634,640,650,659,662,696,703,716,718,719,720,721,732,1015,1196,1197],"newer":[1197],"next":[45,57,101,111,269,308,1197],"nice":[601,609,618,1037],"no_cache":[11],"no_kernel_rebind":[8],"no_kernel_unbind":[8],"no_proxi":[1195],"no_quirks":[6],"no_verify":[11],"node":[393,394,448,667,1121,1122,1123,1196],"non-consum":[1197],"non-empti":[1197],"non-fat":[282,284],"non-fre":[1197],"non-privileg":[585],"non-specif":[1196],"non-standard":[1195],"non-volatil":[995],"non-writ":[1197],"nonblock":[13],"none":[5,6,7,8,9,10,11,12,13,983,986,987,988,997],"nor":[1062,1063,1066,1069,1071,1072,1074,1077,1079,1080],"normal":[44,45,57,182,207,269,323,608,609,612,1196,1197],"not":[1196],"notabl":[1196],"note":[263,314,338,339,468,513,533,619,1011,1063,1196,1197],"notebook":[998],"notif":[61,62],"notifi":[61,62],"now":[1196,1197],"nul":[375,376],"null":[208,1196],"number":[106,116,118,211,215,236,242,249,263,270,282,284,305,309,442,443,444,445,446,463,465,479,480,482,484,549,550,583,584,601,613,623,672,767,782,1112,1113,1114,1115,1116,1117,1118,1196,1197],"nvram":[1038,1039,1041,1042,1046,1047],"o_nonblock":[13],"o_rdonli":[692],"o_rdwr":[692],"o_sync":[13],"object":[66,67,139,218,237,244,259,260,268,311,321,337,338,339,386,387,393,394,395,396,435,448,449,503,504,530,536,537,538,601,616,634,645,647,648,650,663,691,874,1119,1196],"object-specif":[211,263],"obscur":[1197],"obsolet":[644,1197],"obtain":[1197],"obvious":[633],"occur":[182,1196],"oem":[1197],"off":[1197],"off-the-shelf":[1197],"offer":[96,97,107,117,1018,1197],"offlin":[995,1197],"offline_trigger":[995],"offset":[392,412,430,686,687,688,885,887,888,1015,1062],"often":[633,1196,1197],"okai":[1196],"older":[1197],"omissions]#ommiss":[1197],"on":[10,153,198,199,247,399,476,588,601,604,1094,1097,1102,1103,1104,1105,1106,1107,1108,1109,1196,1197],"onc":[45,57,269,644],"onli":[6,10,45,57,142,143,145,182,211,212,249,263,269,286,431,434,530,531,534,601,644,661,784,785,1062,1063,1066,1069,1071,1072,1074,1077,1079,1080,1099,1117,1196,1197],"onlin":[1197],"only_quirks":[6],"onto":[1196,1197],"open":[8,13,16,263,265,268,291,321,338,339,554,556,670,691,692,711,770,784,787,789,994,1196],"open/read/write?":[1196],"open_nonblock":[13],"open_read":[13],"open_sync":[13],"open_write":[13],"oper":[250,500,660,1093,1196,1197],"opportun":[1197],"oprom":[523],"opt":[265],"option":[45,57,120,211,217,237,263,267,282,283,284,291,306,393,394,402,403,415,427,433,434,448,1094,1195,1196],"optionally-compress":[715],"optionrom":[523,524],"or":[633,1196],"order":[198,199,236,305,388,405,429,533,549,557,583,996,1196],"org.fwupd.hsi.inteldci.en":[1197],"org.fwupd.hsi.inteldci.lock":[1197],"origin":[1008],"orthogon":[1197],"os":[1196,1197],"other":[278,324,540,596,644,792,793,794,995,998,1195,1196,1197],"otherwis":[1196,1197],"otp]#org.fwupd.hsi.intelbootguard.otp":[1197],"our":[1196],"out":[126,160,253,337,477,711,1119,1196,1197],"out-of-band":[1195,1197],"out-of-tre":[1196],"output":[1195,1196],"over":[23,693,694,1196,1197],"overal":[1197],"overflow":[1062],"overly-compl":[533],"overrid":[470,995,1195,1196,1197],"overridden":[79,1083],"override]#org.fwupd.hsi.mei.overridestrap":[1197],"overtaken":[1196],"overview]https://en.wikichip.org/wiki/x86/sm":[1197],"overwrit":[1197],"overwritten":[1197],"own":[1196,1197],"owner":[363],"ownership":[338,339],"pack":[437,439,453],"packag":[135,136,137,995],"packet":[120,121,122,134,135,136,137,138],"pad":[193,194,195,196,398,425,438,501,1016],"page":[86,87,91,92,120,129,133,939,947,989],"page]https://en.wikipedia.org/wiki/cold_boot_attack":[1197],"page]https://en.wikipedia.org/wiki/input%e2%80%93output_memory_management_unit":[1197],"page]https://en.wikipedia.org/wiki/supervisor_mode_access_prevent":[1197],"page]https://en.wikipedia.org/wiki/trusted_platform_modul":[1197],"page]https://wiki.ubuntu.com/uefi/secureboot":[1197],"page]https://wiki.ubuntu.com/uefi/secureboot/test":[1197],"page_prog":[989],"pages":[79],"paramet":[189,268,321,692,1196,1197],"parent":[13,198,199,208,237,238,239,251,256,257,306,331,413,431,447,601,606,673,674,766,769,788,789,790,963,1017,1086,1087,1195,1196],"pars":[21,75,267,366,388,393,394,418,419,420,442,443,444,445,446,448,451,515,650,987,1100,1118,1195,1196],"parser":[69],"part":[106,116,161,304,393,394,448,1124,1196,1197],"parti":[1197],"partial":[263,1196],"particip":[1197],"particular":[1196],"partit":[494,495,732],"partition]https://wiki.archlinux.org/index.php/dm-crypt/swap_encrypt":[1197],"pass":[126,1195,1196],"past":[1062],"patch":[392,400],"path":[5,220,288,370,657,683,721,723,733,995,1056,1058,1059,1081,1082,1083,1084,1085,1086,1087,1088,1196],"pattern":[1082,1085],"paus":[764],"pax":[984],"payload":[96,118,119,399,400,401,450,774,880,1196],"pc":[1197],"pch":[1197],"pci":[184,523,678,694],"pcie":[1197],"pcr":[1197],"pcr0":[1197],"pend":[10,282,284],"peopl":[1197],"per-devic":[633,1196],"per-plugin":[535,536,537,538,546,633,1196],"per-s":[1197],"percent":[146,148,166,168,172,174,934],"percentag":[598,601,606,610,619,620,629,631,1196],"perfectli":[1196],"perform":[45,47,57,58,222,244,289,290,312,970,1062,1063,1066,1069,1071,1072,1074,1077,1079,1080,1093,1196,1197],"perhap":[1197],"period":[308],"peripher":[1197],"peripheral":[998],"permiss":[9,1084],"persist":[11,1197],"phase":[1196],"physic":[180,199,217,220,232,239,240,257,288,300,307,332,694,786,1023,1195,1196,1197],"physical/log":[1196],"pid":[343,347,707],"piec":[1096],"pizza_box":[998],"pk":[365,1197],"pk]#org.fwupd.hsi.uefi.pk":[1197],"place":[1197],"plain":[475],"platform":[45,57,220,288,708,720,721,993,995,1196,1197],"platform'":[1197],"plausibl":[1024],"pleas":[338,1196],"plug":[298],"plugin":[45,57,96,139,142,143,145,158,169,171,200,201,210,211,212,216,237,241,243,245,249,258,263,266,277,286,292,298,306,310,393,394,448,500,528,530,531,533,534,539,540,542,545,546,547,548,549,550,552,553,554,555,556,557,559,560,561,562,563,565,566,567,568,569,570,571,572,574,575,577,581,582,583,584,585,586,587,589,590,591,596,633,635,636,660,693,694,791,792,793,794,964,995,996,997,1117,1146,1176,1188,1189,1190,1191,1192,1193,1195,1196,1197],"plugin'":[558,564,573,578,579,580],"plugin-alloc":[1192],"plugin-specif":[215,270,325,1195,1196],"plugindir_pkg":[995],"plugins]https://github.com/fwupd/fwupd/tree/main/plugin":[1197],"point":[49,59,723,725,1196],"pointer":[1013],"polici":[995,1196,1197],"policy]#org.fwupd.hsi.intelbootguard.polici":[1197],"polkit_actions":[995],"poll":[264,265,308,764,1196],"popul":[1196],"port":[249,1196,1197],"portable":[998],"pose":[1197],"posit":[398,425,1000,1021],"posix":[984],"possibl":[143,200,241,283,635,979,1113,1117,1196,1197],"post":[279],"post-upd":[1196],"potenti":[399,1197],"power":[147,167,398,425,1000,1021,1196,1197],"power\"":[1196],"powering-off":[1196],"pre":[280],"pre-boot":[1197],"pread":[686],"predetermin":[1196],"prefer":[1097,1196,1197],"prefix":[208,209,1100,1118,1196],"prepar":[266,267,567,575,1196],"present":[391,1196],"present]#org.fwupd.hsi.tpm.version20":[1197],"press":[314,796,1196,1197],"prevent":[202,262,265,1196,1197],"prevention]#org.fwupd.hsi.intelsmap":[1197],"preview]https://software.intel.com/sites/default/files/managed/4d/2a/control-flow-enforcement-technology-preview.pdf":[1197],"previou":[1196,1197],"previous":[46,619,1197],"primari":[183,198,199,218,219,286,287],"primarili":[1197],"primit":[1196],"print":[308,322,435,1095,1196],"priorit":[1197],"prioriti":[242,309,550,584,965,1196],"privat":[197,201,243,255,258,271,275,277,310,535,546,1192,1196,1197],"privileg":[1197],"probabl":[1196],"probe":[45,57,268,269,291,690,781,1196,1197],"problem":[202,278,532],"process":[282,284,494,496,1196,1197],"process-wid":[1196],"processor":[1197],"procf":[995],"procfs":[995],"product":[104,114,343,347,494,496,707,877,896,905,906,907,1196],"profession":[1197],"profil":[611,621,626,931,1195,1196],"program":[496,497,939,989,1081,1196],"programm":[215],"programmat":[1196],"progress":[4,311,601,604,608,609,610,611,612,617,618,619,620,622,623,624,627,628,1196],"project":[1196],"proper":[1196],"properli":[340,1196],"properti":[61,62,259,261,1197],"proprietari":[517,1197],"protect":[1197],"protection]#org.fwupd.hsi.amd.rollbackprotect":[1197],"protection]#org.fwupd.hsi.iommu":[1197],"protection]#org.fwupd.hsi.prebootdma":[1197],"protection]https://www.psacertified.org/blog/anti-rollback-explained/":[1197],"protections]#org.fwupd.hsi.amd.spireplayprotect":[1197],"protections]#org.fwupd.hsi.amd.spiwriteprotect":[1197],"protocol":[105,115,520,966,1128,1147,1167,1196],"proven":[1197],"provid":[387,656,665,674,676,1062,1196,1197],"provis":[1197],"proxi":[67,208,244,245,246,312,313,333,606,734,735,967,1195,1196],"proxy\"":[1196],"psmous":[669],"public":[955],"publicli":[1197],"publish":[1197],"purchas":[1197],"purpos":[201,243,258,277,310,1196],"put":[489,1196],"pwrite":[687],"quad":[975],"queri":[208,264,1196],"quirk":[6,11,18,79,83,86,87,88,143,159,162,163,164,184,200,209,225,241,267,271,292,633,634,635,636,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,995,1195,1196],"quirk-onli":[209],"quot":[1196],"race":[1197],"rack_mount":[998],"raid":[998],"rais":[1197],"ram":[1197],"rang":[118,442,443,444,445,446,501,983,1196],"rate":[1197],"rather":[101,111,500,660,692,785,1196],"ratifi":[1197],"rational":[1196],"raw":[215,416,434,500,507,512,521,522,620,660,884,984,1035,1036,1158,1162,1163,1182,1184,1185,1196,1197],"re-ad":[281],"re-enumer":[314,795],"re-impl":[1196],"re-insert":[1196],"re-plug":[796],"re-us":[601],"reach":[1096],"read":[8,9,10,13,63,64,156,215,270,478,481,502,503,504,505,506,507,521,585,651,652,653,654,655,656,657,681,682,686,690,764,782,940,941,942,943,989,1010,1011,1012,1056,1062,1065,1066,1067,1068,1069,1070,1071,1072,1195,1196,1197],"read-onli":[13],"read/write/ioctl":[1196],"read_data":[989],"read_firmwar":[1196],"read_id":[989],"read_status":[989],"readabl":[9],"readi":[49,59,730,770,1196],"readonli":[11],"readonly_fs":[11],"real":[930,1196],"realiti":[1197],"realli":[1197],"reason":[492,493,633,1062,1196,1197],"rebind":[8],"reboot":[1197],"recogn":[220,1052],"reconnect":[1196],"reconstitut":[1197],"reconstruct":[1197],"reconstruction]#org.fwupd.hsi.tpm.reconstructionpcr0":[1197],"record":[436,452,500,660,992,1196,1197],"recov":[1196,1197],"recoveri":[283,285,1195,1197],"recurs":[1088],"redund":[1028,1029,1030,1031,1032,1033],"refcount":[237,244,1196],"refer":[1196],"referenc":[24,156,157,652,653],"reflect":[223,237,251,306],"refresh":[1197],"refus":[96,1196],"regener":[1195],"region":[993,1051,1052,1053,1197],"regist":[47,58,98,108,145,271,534,540,571,590,596,792,793,794,1027,1196,1197],"regular":[1196],"reinstal":[1197],"reject":[619,1019],"rel":[1197],"relat":[1197],"relax":[1196],"releas":[76,247,322,323,344,348,633,704,1129,1197],"release]https://software.intel.com/content/www/us/en/develop/blogs/intel-releases-new-technology-specification-for-memory-encryption.html":[1197],"relev":[693,1196],"reli":[1196],"reliabl":[1197],"reload":[272,576,1196],"remain":[208],"remaind":[1096],"remot":[995,1197],"remote-attest":[1197],"remov":[40,49,55,59,198,248,273,274,275,276,277,278,304,307,314,335,421,422,423,538,541,547,572,591,597,615,647,778,785,795,796,968,1038,1039,1088,1098,1191,1195,1196,1197],"renam":[1197],"replac":[22,152,391,392,474,475,633,690,691,1093],"replai":[1197],"replay-protect":[1197],"replug":[101,111,248,269,785,786,796,1196],"report":[279,280,462,464,466,532,551,996,1048,1197],"repres":[74,139,240,298,307,385,403,415,416,427,433,434,639,1196,1197],"represent":[134,138,364,1196],"request":[45,57,202,216,249,262,269,278,324,336,438,539,685],"requir":[13,79,158,298,315,317,318,320,321,438,633,644,722,729,952,1007,1017,1055,1086,1087,1112,1196,1197],"rescan":[281],"research":[1197],"reserv":[992],"reset":[101,111,282,283,284,314,616,765,795,1058,1196],"resourc":[337],"respect":[1195],"respons":[1197],"rest":[1196],"restrict":[343,344,346,984,1197],"result":[250,468,564,573,601,931,1085,1094,1197],"results:**":[1197],"resum":[1197],"ret":[1197],"retri":[8,13,17,282,283,284,285,787],"retriev":[1196],"retry_failure":[8],"return":[23,32,43,44,126,149,150,151,159,211,218,221,222,237,243,244,248,249,251,265,268,270,282,283,284,298,308,314,321,323,362,363,392,401,411,438,442,443,444,445,446,450,472,473,500,543,544,546,547,551,608,609,611,612,660,668,673,724,1008,1013,1021,1022,1023,1027,1028,1029,1030,1031,1032,1033,1043,1056,1084,1085,1094,1097,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1113,1114,1115,1116,1117,1118,1196],"reus":[601,1196],"revers":[1196],"review":[1196,1197],"revis":[105,115,675,709,1196],"rewritten":[1196],"richard":[1196,1197],"right":[1197],"risc-v":[1197],"risk":[1197],"riski":[1197],"rmtree":[1088],"robust":[1197],"rollback":[1197],"rom":[1197],"root":[251,995,1197],"root-of-trust":[1197],"rop":[1197],"routin":[558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580],"rule":[533,552,553,592,599,996,1196],"run":[37,56,211,212,263,549,552,553,559,560,563,565,566,567,568,574,575,576,577,583,588,601,1025,1055,1195,1196,1197],"run_after":[996],"run_before":[996],"runner":[558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580],"runtim":[144,171,184,995,1119,1195,1196,1197],"runtime_directori":[1195],"rzip":[983],"s0_header":[992],"s1_data_16":[992],"s2_data_24":[992],"s3":[1197],"s3_data_32":[992],"s4_reserved":[992],"s5_count_16":[992],"s6_count_24":[992],"s7_count_32":[992],"s8_termination_24":[992],"s9_termination_16":[992],"sa-00086]https://www.intel.com/content/www/us/en/security-center/advisory/intel-sa-00086.html":[1197],"safe":[45,57,442,443,444,445,446,791,1013,1061,1062,1063,1064,1066,1069,1071,1072,1074,1077,1079,1080,1095],"sai":[1197],"same":[118,126,184,202,211,220,232,262,263,288,298,300,391,414,432,1013,1196,1197],"sanit":[191,317,318,320],"saniti":[416,642,1195],"save":[11,1196,1197],"saving*":[1196],"scale":[1196],"scan":[23,1097],"scenario":[1196],"scope":[337],"scratch":[1196],"screen":[1034,1035,1036],"script":[1197],"scsi":[694],"sealed_case_pc":[998],"search":[198,199,256,257,1056,1058,1059,1093],"second":[960,1196],"secret":[1196,1197],"section":[178,357,393,394,399,448,485,601,651,715,1196],"sector":[87,92,944,948,989],"sector_erase":[989],"sectors":[79],"secur":[12,165,176,177,203,559,585,633,639,961,995,1045,1197],"secureboot":[1197],"secureboot]#org.fwupd.hsi.uefi.secureboot":[1197],"security]#verifi":[1197],"see":[30,36,60,69,79,96,118,178,180,337,341,351,353,355,357,359,361,365,367,372,385,454,458,460,468,479,485,487,489,490,494,496,498,513,517,523,528,601,633,649,658,661,702,715,1195,1196],"seek":[688],"segment":[106,116],"select":[81,82,95],"self":[84,665,674,676,1195,1196],"semant":[767],"semver":[1113],"sens":[1197],"sent":[532],"separ":[767,1094],"sequenc":[1196],"serial":[215,270,648,782,1148,1177,1196],"seriou":[1197],"server":[532,1197],"servic":[68,1197],"session":[1195],"set":[5,6,7,8,10,11,12,13,34,35,44,45,48,49,57,59,76,77,79,81,83,86,87,88,89,90,91,92,93,95,108,109,110,111,112,113,114,115,116,117,130,131,132,133,141,144,166,167,168,169,170,171,183,189,198,199,212,217,218,220,232,240,245,246,259,263,267,268,271,283,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,338,347,348,349,350,371,380,381,382,383,384,387,391,404,414,424,425,426,427,428,429,430,431,432,433,434,457,462,465,466,470,482,493,501,532,540,581,582,583,584,585,596,601,604,608,609,610,617,618,619,620,621,622,623,624,639,689,690,691,692,693,694,712,713,771,772,773,774,775,776,783,871,878,933,936,937,938,939,940,941,942,943,944,945,946,947,948,959,986,987,988,997,1007,1013,1017,1044,1046,1047,1059,1085,1117,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1195,1196,1197],"set_progress":[1196],"setreport":[466],"setup":[49,59,321,478,601,654,655,656,657,1196,1197],"sever":[314,633,1197],"sftp_proxi":[1195],"sgx":[1197],"sha1":[298],"sha256":[991],"shar":[984],"share":[45,47,57,58,139,240,307,337,1195,1196,1197],"shim":[1196],"should":[45,49,57,59,100,101,110,111,126,143,182,188,215,268,269,270,298,314,321,393,394,399,432,448,540,552,553,588,596,601,635,644,693,694,795,796,932,949,1013,1062,1063,1066,1069,1071,1072,1074,1077,1079,1080,1117,1196,1197],"show":[7,289,290,1195,1196,1197],"show_addresses":[7],"show_ascii":[7],"shown":[151,152,932,970,971,1197],"shutdown":[508,996,1197],"sibl":[676],"sift":[1197],"sign":[78,988,1196,1197],"signal":[38,39,40,53,54,55,68,82,176,334,335,336,587,588,589,590,591,629,630,663,701],"signatur":[361,362,363,364,365,881,991],"signed/unsign":[774],"significantli":[314],"silo":[71,74,1195],"similar":[298,1196],"similarli":[1196],"simpl":[500,633,660,1196,1197],"simplest":[1196],"simpli":[1196],"sinc":[778],"singl":[240,1094],"single_shot":[10],"size":[77,83,86,87,88,89,91,92,93,118,127,135,136,137,228,229,267,295,296,297,392,414,432,438,876,886,936,942,947,948,952,953,954,1007,1013,1023,1048,1062,1063,1105,1109,1195,1196],"sizeoffuplugindata":[1196],"skip":[887],"sku":[907],"sleep":[624,1197],"slot":[298,677],"slow":[621,795,796],"small":[1048,1196],"smaller":[438,1196],"smallest":[87,92],"smartnic":[494,496],"smbio":[155,156,157,470,478,649,650,651,652,653,654,655,656,657,976,977,978,979,980,998,1195],"sme":[1197],"smi":[1197],"smm":[1197],"smm\\_bwp]#org.fwupd.hsi.spi.smmbwp":[1197],"smm_bwp":[1197],"snap":[1195],"snap_user_data":[1195],"so":[198,199,271,298,323,470,540,585,596,601,1196,1197],"soc":[1197],"socket":[1195],"softwar":[107,117,1196,1197],"sold":[1197],"solut":[1197],"solv":[533],"some":[176,183,198,199,208,209,218,219,281,286,287,1048,1062,1063,1195,1196,1197],"somehow":[1119],"someth":[307,796,1095,1196],"somewher":[1195],"soon":[1197],"sort":[533,644,1085,1112],"sourc":[45,57,403,427,996,1062,1196],"space":[722,1048],"space_saving":[998],"spdx-license-identifi":[1196],"spec":[709],"special":[252,1196],"specif":[68,96,107,117,135,136,137,141,144,151,152,153,156,157,211,249,253,254,260,263,282,284,370,390,392,393,394,417,448,471,476,492,493,518,587,633,646,652,653,657,694,732,961,1011,1012,1043,1085,1195,1196,1197],"specifi":[25,142,392,393,394,448,513,531,533,694,718,719,794,1065,1066,1067,1068,1069,1070,1071,1073,1074,1075,1076,1077,1078,1079,1196],"specification]https://www.amd.com/system/files/techdocs/48882_iommu.pdf":[1197],"spi":[79,215,1197],"split":[416,1096,1097,1113,1196],"squirt":[1196],"srcdir":[1195],"srec":[658,659,660,992],"ssl":[1195],"st":[800],"stage":[1197],"stai":[197,255,275],"standalon":[1196,1197],"standard":[797,798,799,800,801,1195,1196,1197],"standard?":[1196],"start":[61,533,633,1196,1197],"startnotifi":[61],"startup":[577,626,768,1195,1196,1197],"state":[48,139,147,154,165,167,170,173,175,176,177,315,639,985,994,995,999,1060,1153,1195,1196,1197],"state]#hsi-level0":[1197],"state]#hsi-level1":[1197],"state]#hsi-level2":[1197],"state]#hsi-level3":[1197],"state]#hsi-level4":[1197],"state]#hsi-level5":[1197],"state_directori":[1195],"static":[393,394,448,601,1196],"station":[1196],"statu":[264,600,612,622,630,632,768,943,946,989,1020,1197],"step":[311,601,604,607,613,623,625,929,930,931,932,1196],"step_now":[605,625],"stick_pc":[998],"still":[263,605,1196,1197],"stop":[62,1196],"stopnotifi":[62],"store":[302,303,379,888,995,1197],"str":[190,230,375,381],"straight":[282,283,284],"strap":[1197],"stream":[1012,1196],"stress":[1197],"strict":[1195],"string":[12,26,27,28,29,64,134,138,156,157,163,204,230,256,257,292,298,303,317,318,320,322,326,327,364,375,381,406,416,435,440,441,442,443,444,445,446,627,628,637,643,652,653,709,869,879,880,881,882,883,891,892,893,999,1018,1019,1020,1050,1053,1054,1058,1060,1082,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1113,1114,1115,1116,1118,1119,1122,1196],"stringlist":[376,382],"strjoin":[1094],"strlist":[376,382],"strpars":[442,443,444,445,446],"strsafe":[191,1095],"strsplit":[19,1096,1097],"strstrip":[1098],"strtobool":[1099],"strtoull":[1100],"struct":[1196],"structur":[156,652,653,976,977,978,979,980,1196],"strup":[192],"strwidth":[1101],"stuck":[791],"studi":[1196],"sub":[179,342,352,368,373,455,459,488,499,601,716],"sub-modul":[601],"sub-process":[601],"sub-task":[605,613,623,625],"sub_notebook":[998],"subchassis":[998],"subclass":[37,44,45,49,56,57,59,270,308,393,394,448,1196],"subclass-specif":[436,452],"subdirectori":[1084],"subject":[1197],"subsect":[501,1015],"subsystem":[45,57,145,158,527,534,665,674,676,678,679,680,693,694,699,1196],"subvert":[1197],"succe":[1196],"success":[244,312,323,1197],"successfulli":[211,263,770],"such":[337,1196,1197],"suffix":[1196,1197],"suggest":[314],"suitabl":[153,476,1196],"sum":[1102,1103,1104,1105,1106,1107,1108,1109,1110,1111],"sum16":[1102,1103],"sum16w":[1104,1105],"sum32":[1106,1107],"sum32w":[1108,1109],"sum8":[1110,1111],"summari":[969,1149,1178],"superclass":[45,47,57,58],"superio":[1195],"superset":[74],"supertyp":[338],"supervisor":[1197],"suppli":[1196],"support":[98,108,393,394,448,587,593,633,784,1049,1118,1195,1196,1197],"suppos":[1197],"sure":[1062,1063,1066,1069,1071,1072,1074,1077,1079,1080,1196],"surfac":[1196],"surviv":[1197],"suspend":[1197],"suspend-to-idl":[1197],"suspend-to-ram":[1197],"swid":[178],"switch":[182,1196],"sync":[13,1119],"synergi":[1197],"synthes":[249],"sysconfdir":[995],"sysconfdir_pkg":[995],"sysf":[220,288,307,681,682,683,695,995,1196],"sysfsdir_drivers":[995],"sysfsdir_fw":[995],"sysfsdir_fw_attrib":[995],"sysfsdir_security":[995],"sysfsdir_tpm":[995],"system":[139,146,147,148,151,152,166,167,168,172,173,174,175,176,225,292,307,468,470,587,639,649,727,980,998,1055,1083,1195,1196,1197],"sz":[127,1196],"tab":[1197],"tabl":[156,652,653,995,1197],"tablet":[998],"tag":[1196],"take":[207,604,795,796,1112,1196,1197],"taken":[1196],"tamper":[1197],"tar":[984],"task":[629,630],"tcg":[1197],"technic":[1197],"technolog":[1197],"tell":[1196],"temporarili":[1196],"term":[1196,1197],"termin":[375,376,992],"test":[255,258,614,875,1040,1195,1196,1197],"test.fw":[393,394,448],"text":[364,393,394,448],"than":[101,111,198,199,314,392,399,438,500,604,660,692,785,995,996,1048,1124,1195,1196,1197],"that":[1196],"that'":[1196],"the":[1196],"them":[1094,1102,1103,1104,1105,1106,1107,1108,1109,1196,1197],"theme":[1196],"then":[1196],"theoret":[1197],"there'":[1196],"thing":[267,1196],"think":[338,339,1196],"those":[1196,1197],"threshold":[148,168,174,222,290,788,790,934,1195,1196],"through":[1196,1197],"thu":[1196],"thunderbolt":[791,1197],"time":[8,45,57,101,111,169,211,263,269,282,284,314,604,613,623,624,785,787,1102,1103,1104,1105,1106,1107,1108,1109,1124,1196,1197],"timestamp":[456,457,889],"tip":[1196],"tme":[1197],"to":[398,425,502,1000,1021,1196,1197],"to_str":[1196],"togeth":[1094,1196],"token":[107,117,436,452,500,660,1096,1097,1196],"too":[289,290,1196],"tool":[223,237,251,306,496,497,1195,1197],"top":[1196],"top-level":[905,906,907],"total":[414,432,1048,1196],"touch":[601],"tower":[998],"tpm":[995,1195,1197],"tpm]#org.fwupd.hsi.tpm.emptypcr":[1197],"tpm_server_run":[1195],"trace":[1196],"traceback":[626,932,1195],"tradition":[1197],"traffic":[1195],"trail":[1098],"transact":[971],"transfer":[8,106,116,135,136,137,1197],"translat":[1195],"transpar":[1197],"transport":[1196],"tree":[454,649,693,694,1195,1196],"tri":[388,586],"trigger":[995],"true":[302,1099,1196,1197],"truncat":[8],"trust":[76,1197],"truth":[1197],"try":[270,282,284,1196],"tty":[10,505,506,507,510,511,512],"turn":[1197],"twice":[765],"two":[555,557,1006,1196],"tyical":[200],"type":[1,179,184,227,252,294,338,342,352,368,373,406,455,459,488,499,513,525,526,527,659,668,716,724,732,793,927,976,977,978,979,980,995,999,1018,1019,1020,1060,1195,1196],"type\"":[1196],"typic":[30,49,59,79,83,86,87,88,89,91,92,159,184,220,241,264,288,291,338,339,365,393,394,404,414,418,419,420,434,436,437,439,448,452,453,661,882,883,884,885,886,887,888,889,890,891,1197],"u16":[193],"u32":[194,377],"u4":[195],"u64":[378],"u8":[196],"udev":[13,36,145,158,534,661,668,681,682,693,694,700,705,1195,1196],"udisk":[717,721],"uefi":[353,355,357,359,361,365,792,793,794,1041,1042,1046,1047,1195,1197],"uefi-centr":[1197],"uint16":[442,1002,1065,1066,1073,1074,1114],"uint24":[443,1067,1075],"uint32":[377,383,444,885,886,887,888,889,1003,1068,1069,1076,1077,1115],"uint4":[445],"uint64":[378,384,682,1004,1070,1071,1078,1079,1116],"uint8":[446,1005,1072,1080],"un-encrypt":[1197],"unbind":[8,323],"unbrand":[1197],"unchang":[1000,1021],"under":[222,393,394,448,1084],"undergo":[1196],"understand":[1196],"unencrypt":[1197],"unfortun":[1197],"unfus":[1197],"uninhibit":[324],"uniqu":[1196],"unit":[494,496],"univers":[1196],"unix":[504,509,721,733],"unix-to-unix":[983],"unknown":[801,983,984,985,990,991,994,998],"unless":[546,1100,1197],"unlock":[578,1197],"unmount":[729,731],"unplug":[796],"unrel":[1197],"unset":[208,209,220,520,616,1197],"unsign":[794,1091,1197],"unspecifi":[21],"unsuit":[1196],"unsur":[1022],"until":[282,284,308],"untrust":[1097],"unus":[997],"up":[8,49,59,147,163,164,167,182,210,245,321,340,513,514,601,606,637,638,677,787,1000,1021,1196,1197],"up\"":[601],"updat":[45,57,99,109,202,210,222,244,250,262,266,278,279,280,289,290,312,313,315,324,528,585,601,765,780,792,793,794,959,970,971,1022,1150,1151,1152,1153,1179,1180,1181,1196,1197],"update]https://www.intel.com/content/www/us/en/security-center/advisory/intel-sa-00086.html":[1197],"update_attach":[560],"update_cleanup":[563],"update_detach":[568],"update_prepar":[575],"updatecapsul":[1196],"upgrad":[1196],"upgradable?":[1196],"upload":[1196,1197],"upon":[1197],"uppercas":[192],"upstream":[1196,1197],"upward":[1196],"uri":[1195],"us":[5,6,7,8,9,10,11,12,13,16,37,45,49,51,56,57,59,76,78,85,90,96,98,103,108,113,126,131,142,143,145,149,151,152,163,164,184,186,187,188,198,199,201,211,212,215,222,230,240,243,244,249,258,263,265,267,270,277,279,280,282,284,291,292,307,310,311,312,322,323,329,333,338,339,340,393,394,395,396,399,405,406,407,408,409,410,414,416,429,431,434,435,436,438,448,449,452,462,465,467,494,496,500,501,515,528,530,531,533,534,540,547,596,601,604,620,621,623,626,633,635,636,637,638,649,660,664,685,689,690,691,692,694,696,697,698,713,717,721,730,731,770,785,788,789,790,795,796,874,986,987,988,989,995,996,997,1008,1013,1025,1026,1048,1062,1063,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1096,1097,1118,1195,1196,1197],"usabl":[286],"usb":[36,184,220,269,288,463,465,693,694,702,709,711,714,795,1195,1196,1197],"usb/udev":[1196],"usb3":[1197],"usb?":[1196],"use_blocking_io":[10],"use_config":[13],"use_interrupt_transfer":[8],"user":[107,117,314,336,532,585,633,796,1022,1025,1052,1124,1196,1197],"user-configur":[270],"user-spac":[1197],"userspac":[323,1048,1197],"ustar":[984],"usual":[601,633,879,880,881,892,893,1195,1196,1197],"uswid":[715,716],"utf-8":[869],"uu":[983],"uuid":[61,62,63,64,65,68],"v2":[1197],"valid":[153,184,186,187,188,476,767,1196,1197],"valu":[43,81,95,152,153,156,163,164,190,191,192,193,194,195,196,208,209,220,222,260,270,302,314,470,474,475,476,478,501,543,544,581,585,601,620,637,638,652,654,655,656,657,890,992,993,1008,1021,1028,1029,1030,1031,1032,1033,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1089,1090,1094,1099,1100,1113,1121,1122,1123,1195,1196,1197],"variabl":[118,1038,1039,1040,1041,1042,1046,1047,1048,1049,1081,1083,1195,1196],"variant":[102,112,648],"variou":[494,496,636,1025,1083,1197],"vendor":[13,84,316,346,350,680,684,710,775,877,895,899,905,972,973,990,1026,1130,1154,1155,1168,1196,1197],"vendor-specif":[1196],"vendor_from_parent":[13],"verbos":[1195,1196],"veri":[621,633,1196],"verif":[1196,1197],"verifi":[126,237,306,393,394,448,579,997,1120,1197],"verified]#org.fwupd.hsi.intelbootguard.verifi":[1197],"version":[12,100,103,105,110,113,115,141,144,169,171,182,237,306,317,318,319,320,345,349,415,416,433,434,520,633,767,776,794,797,798,799,800,801,891,897,898,900,903,904,923,924,925,974,975,1055,1112,1113,1114,1115,1116,1117,1118,1119,1120,1124,1156,1157,1158,1159,1160,1161,1162,1163,1182,1183,1184,1185,1196,1197],"version]#org.fwupd.hsi.mei.vers":[1197],"vfunc":[45,47,57,58,211,215,250,263,267,270,325,393,394,448,1193,1196],"vfuncs->attach":[1196],"vfuncs->build_hash":[1196],"vfuncs->cleanup":[1196],"vfuncs->coldplug":[1196],"vfuncs->destroi":[1196],"vfuncs->detach":[1196],"vfuncs->init":[1196],"vfuncs->prepar":[1196],"vfuncs->reload":[1196],"vfuncs->startup":[1196],"vfuncs->write_firmwar":[1196],"via":[1197],"vid":[346,350,710],"virtual":[212,1193,1195,1197],"visibl":[1196],"void":[601,1196],"volum":[30,359,717,718,719,722,724,725,726,728,729,730,731,732,1022],"vt-d":[1197],"vulner":[1197],"wai":[96,183,198,199,218,219,286,287,633,1062,1063,1064,1066,1069,1071,1072,1074,1077,1079,1080,1196,1197],"wait":[10,101,111,785,1196],"want":[587,604,605,1097,1196],"warc":[984],"warn":[126,289,290,308,621,1197],"watch":[145,534],"we":[633,1196,1197],"we'll":[1196],"we'r":[1196],"weight":[604],"well":[474,1196],"well-known":[1197],"wget":[1195],"what":[298,619,1196,1197],"whatev":[1196],"when":[5,6,7,8,10,11,12,13,16,45,53,54,55,57,68,142,176,182,211,212,248,263,269,283,302,307,334,335,336,337,338,339,416,515,530,531,533,540,551,587,588,589,590,591,596,605,625,629,630,633,644,691,692,694,696,701,729,764,780,785,792,793,794,795,796,870,887,986,987,988,989,995,997,1011,1013,1062,1063,1066,1069,1071,1072,1074,1077,1079,1080,1097,1195,1196,1197],"whenev":[1117,1196],"where":[79,143,236,242,305,309,398,425,465,549,550,583,584,635,786,1000,1021,1044,1100,1196,1197],"whether":[1024,1124,1196,1197],"which":[44,49,59,76,96,103,113,142,182,193,194,195,196,207,222,230,232,240,245,249,267,283,291,307,323,385,393,394,399,405,414,429,432,448,494,496,502,528,530,531,588,604,608,609,612,651,692,694,890,1013,1015,1195,1196,1197],"while":[1197],"whitespac":[1098],"whole":[980,989,1196],"whole*":[1197],"why":[633],"wide":[1197],"width":[1101],"wiki":[1197],"wikipedia":[1197],"win32_basedir":[995],"window":[468,995,1054],"wipe":[1197],"wirelessli":[1196],"wish":[540,596],"with":[542,1196],"within":[385,1197],"without":[211,263,282,284,323,601,633,1118,1195,1196,1197],"won't":[1196],"wonder":[1196],"word":[1104,1105],"work":[338,633,1054,1195,1196,1197],"world":[1196],"worsen":[1197],"would":[279,280,314,393,394,448,633,692,1196,1197],"writabl":[9,86,91,126],"write":[8,9,10,13,25,65,311,325,437,438,439,453,483,503,504,510,511,512,522,580,687,690,695,764,869,887,945,946,989,1017,1059,1073,1074,1075,1076,1077,1078,1079,1080,1195,1196,1197],"write-onli":[13],"write_en":[989],"write_firmwar":[1196],"write_status":[989],"writer":[69],"written":[502,1197],"wrong":[1197],"wvalu":[8],"x10":[1196],"x509":[991],"x86":[1197],"xar":[984],"xml":[393,394,395,396,448,449,1121,1122,1123,1195,1196],"xmlb":[1121,1122,1123,1195],"xz":[983],"yet":[249,547,1196,1197],"you":[393,394,448,470,601,604,1062,1063,1066,1069,1071,1072,1074,1077,1079,1080,1097,1196,1197],"you'r":[1062,1063,1066,1069,1071,1072,1074,1077,1079,1080,1196],"your":[1195,1196,1197],"yyyymmdd":[1118],"zero":[501,1000,1013,1021],"zero-length":[1013],"zip":[983,984],"zstd":[983],"{":[601,1196],"}":[601,1196],"\u2026":[1196]}}