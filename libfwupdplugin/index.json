{"meta":{"ns":"FwupdPlugin","version":"1.0","generator":"gi-docgen","generator-version":"2021.6"},"symbols":[{"type":"alias","name":"EndianType","ctype":"FuEndianType","summary":"The endian type, e.g. %G_LITTLE_ENDIAN"},{"type":"alias","name":"FirmwareExportFlags","ctype":"FuFirmwareExportFlags","summary":"The firmware export flags."},{"type":"alias","name":"FirmwareFlags","ctype":"FuFirmwareFlags","summary":"The firmware flags."},{"type":"bitfield","name":"AppFlags","ctype":"FuAppFlags","summary":"The flags to use when loading an application."},{"type":"bitfield","name":"ArchiveFlags","ctype":"FuArchiveFlags","summary":"The flags to use when loading the archive."},{"type":"bitfield","name":"DeviceInstanceFlags","ctype":"FuDeviceInstanceFlags","summary":"The flags to use when interacting with a device instance"},{"type":"bitfield","name":"DeviceInternalFlags","ctype":"FuDeviceInternalFlags","summary":"The device internal flags."},{"type":"bitfield","name":"DumpFlags","ctype":"FuDumpFlags","summary":"The flags to use when configuring debugging"},{"type":"bitfield","name":"HidDeviceFlags","ctype":"FuHidDeviceFlags","summary":"Flags used when calling fu_hid_device_get_report() and fu_hid_device_set_report()."},{"type":"bitfield","name":"IOChannelFlags","ctype":"FuIOChannelFlags","summary":"The flags used when reading data from the TTY."},{"type":"bitfield","name":"IfdAccess","ctype":"FuIfdAccess","summary":"No description available."},{"type":"bitfield","name":"QuirksLoadFlags","ctype":"FuQuirksLoadFlags","summary":"The flags to use when loading quirks."},{"type":"bitfield","name":"SecurityAttrsFlags","ctype":"FuSecurityAttrsFlags","summary":"The flags to use when calculating an HSI version."},{"type":"bitfield","name":"UdevDeviceFlags","ctype":"FuUdevDeviceFlags","summary":"Flags used when opening the device using fu_device_open()."},{"type":"callback","name":"ArchiveIterateFunc","summary":"The archive iteration callback."},{"type":"callback","name":"ContextLookupIter","summary":"The context lookup iteration callback."},{"type":"callback","name":"DeviceLockerFunc","summary":"Callback to use when opening and closing using [ctor@DeviceLocker.new_full]."},{"type":"callback","name":"DeviceRetryFunc","summary":"The device retry iteration callback."},{"type":"callback","name":"OutputHandler","summary":"The process spawn iteration callback."},{"type":"callback","name":"QuirksIter","summary":"The quirks iteration callback."},{"type":"class","name":"Archive","ctype":"FuArchive","summary":"An in-memory archive decompressor"},{"type":"class","name":"Backend","ctype":"FuBackend","summary":"An device discovery backend, for instance USB, BlueZ or ..."},{"type":"class","name":"BluezDevice","ctype":"FuBluezDevice","summary":"A BlueZ Bluetooth device.  See also: [class@FuDevice]"},{"type":"class","name":"Cabinet","ctype":"FuCabinet","summary":"Cabinet archive parser and writer.  See also: [class@FuArchive]"},{"type":"class","name":"Chunk","ctype":"FuChunk","summary":"A optionally mutable packet of chunked data with address, ..."},{"type":"class","name":"Context","ctype":"FuContext","summary":"A context that represents the shared system state. This ..."},{"type":"class","name":"Device","ctype":"FuDevice","summary":"A physical or logical device that is exported to ..."},{"type":"class","name":"DeviceLocker","ctype":"FuDeviceLocker","summary":"Easily close a shared resource (such as a device) ..."},{"type":"class","name":"DfuFirmware","ctype":"FuDfuFirmware","summary":"A DFU firmware image.  See also: [class@FuFirmware]"},{"type":"class","name":"DfuseFirmware","ctype":"FuDfuseFirmware","summary":"A DfuSe firmware image.  See also: [class@FuDfuFirmware]"},{"type":"class","name":"EfiFirmwareFile","ctype":"FuEfiFirmwareFile","summary":"No description available."},{"type":"class","name":"EfiFirmwareFilesystem","ctype":"FuEfiFirmwareFilesystem","summary":"A UEFI filesystem.  See also: [class@FuFirmware]"},{"type":"class","name":"EfiFirmwareSection","ctype":"FuEfiFirmwareSection","summary":"No description available."},{"type":"class","name":"EfiFirmwareVolume","ctype":"FuEfiFirmwareVolume","summary":"A UEFI file volume.  See also: [class@FuFirmware]"},{"type":"class","name":"EfiSignature","ctype":"FuEfiSignature","summary":"A UEFI Signature as found in an `EFI_SIGNATURE_LIST`.  ..."},{"type":"class","name":"EfiSignatureList","ctype":"FuEfiSignatureList","summary":"A UEFI signature list typically found in the `PK` ..."},{"type":"class","name":"Firmware","ctype":"FuFirmware","summary":"A firmware file which can have children which represent ..."},{"type":"class","name":"FmapFirmware","ctype":"FuFmapFirmware","summary":"A FMAP firmware image.  See also: [class@FuFirmware]"},{"type":"class","name":"HidDevice","ctype":"FuHidDevice","summary":"A Human Interface Device (HID) device.  See also: ..."},{"type":"class","name":"Hwids","ctype":"FuHwids","summary":"A the hardware IDs on the system.  Note, ..."},{"type":"class","name":"I2cDevice","ctype":"FuI2cDevice","summary":"A I\u00b2C device with an assigned bus number.  ..."},{"type":"class","name":"IOChannel","ctype":"FuIOChannel","summary":"A bidirectional IO channel which can be read from ..."},{"type":"class","name":"IfdBios","ctype":"FuIfdBios","summary":"An Intel BIOS section.  See also: [class@FuFirmware]"},{"type":"class","name":"IfdFirmware","ctype":"FuIfdFirmware","summary":"An Intel Flash Descriptor.  See also: [class@FuFirmware]"},{"type":"class","name":"IfdImage","ctype":"FuIfdImage","summary":"No description available."},{"type":"class","name":"IhexFirmware","ctype":"FuIhexFirmware","summary":"A Intel hex (ihex) firmware image.  See also: [class@FuFirmware]"},{"type":"class","name":"Plugin","ctype":"FuPlugin","summary":"A plugin which is used by fwupd to enumerate ..."},{"type":"class","name":"Quirks","ctype":"FuQuirks","summary":"Quirks can be used to modify device behavior. When ..."},{"type":"class","name":"SecurityAttrs","ctype":"FuSecurityAttrs","summary":"A set of Host Security ID attributes that represents ..."},{"type":"class","name":"Smbios","ctype":"FuSmbios","summary":"Enumerate the SMBIOS data on the system, either using ..."},{"type":"class","name":"SrecFirmware","ctype":"FuSrecFirmware","summary":"A SREC firmware image.  See also: [class@FuFirmware]"},{"type":"class","name":"UdevDevice","ctype":"FuUdevDevice","summary":"A UDev device, typically only available on Linux.  ..."},{"type":"class","name":"UsbDevice","ctype":"FuUsbDevice","summary":"A USB device.  See also: [class@FuDevice], [class@FuHidDevice]"},{"type":"class","name":"Volume","ctype":"FuVolume","summary":"Volume abstraction that uses UDisks"},{"type":"constant","name":"BATTERY_VALUE_INVALID","ident":"FU_BATTERY_VALUE_INVALID","summary":"This value signifies the battery level is either unset, ..."},{"type":"constant","name":"BUILD_HASH","ident":"FU_BUILD_HASH","summary":"No description available."},{"type":"constant","name":"DEVICE_METADATA_TBT_IS_SAFE_MODE","ident":"FU_DEVICE_METADATA_TBT_IS_SAFE_MODE","summary":"If the Thunderbolt hardware is stuck in safe mode. ..."},{"type":"constant","name":"DEVICE_METADATA_UEFI_CAPSULE_FLAGS","ident":"FU_DEVICE_METADATA_UEFI_CAPSULE_FLAGS","summary":"The capsule flags for the UEFI device, e.g. %EFI_CAPSULE_HEADER_FLAGS_PERSIST_ACROSS_RESET ..."},{"type":"constant","name":"DEVICE_METADATA_UEFI_DEVICE_KIND","ident":"FU_DEVICE_METADATA_UEFI_DEVICE_KIND","summary":"The type of UEFI device, e.g. \"system-firmware\" or \"device-firmware\" ..."},{"type":"constant","name":"DEVICE_METADATA_UEFI_FW_VERSION","ident":"FU_DEVICE_METADATA_UEFI_FW_VERSION","summary":"The firmware version of the UEFI device specified as ..."},{"type":"constant","name":"DEVICE_REMOVE_DELAY_RE_ENUMERATE","ident":"FU_DEVICE_REMOVE_DELAY_RE_ENUMERATE","summary":"The default removal delay for device re-enumeration taking into ..."},{"type":"constant","name":"DEVICE_REMOVE_DELAY_USER_REPLUG","ident":"FU_DEVICE_REMOVE_DELAY_USER_REPLUG","summary":"The default removal delay for device re-plug taking into ..."},{"type":"constant","name":"DFU_FIRMARE_VERSION_ATMEL_AVR","ident":"FU_DFU_FIRMARE_VERSION_ATMEL_AVR","summary":"The Atmel AVR version of the DFU standard in ..."},{"type":"constant","name":"DFU_FIRMARE_VERSION_DFUSE","ident":"FU_DFU_FIRMARE_VERSION_DFUSE","summary":"The DfuSe version of the DFU standard in BCD ..."},{"type":"constant","name":"DFU_FIRMARE_VERSION_DFU_1_0","ident":"FU_DFU_FIRMARE_VERSION_DFU_1_0","summary":"The 1.0 version of the DFU standard in BCD format."},{"type":"constant","name":"DFU_FIRMARE_VERSION_DFU_1_1","ident":"FU_DFU_FIRMARE_VERSION_DFU_1_1","summary":"The 1.1 version of the DFU standard in BCD format."},{"type":"constant","name":"DFU_FIRMARE_VERSION_UNKNOWN","ident":"FU_DFU_FIRMARE_VERSION_UNKNOWN","summary":"Unknown version of the DFU standard in BCD format."},{"type":"constant","name":"EFIVAR_ATTR_APPEND_WRITE","ident":"FU_EFIVAR_ATTR_APPEND_WRITE","summary":"No description available."},{"type":"constant","name":"EFIVAR_ATTR_AUTHENTICATED_WRITE_ACCESS","ident":"FU_EFIVAR_ATTR_AUTHENTICATED_WRITE_ACCESS","summary":"No description available."},{"type":"constant","name":"EFIVAR_ATTR_BOOTSERVICE_ACCESS","ident":"FU_EFIVAR_ATTR_BOOTSERVICE_ACCESS","summary":"No description available."},{"type":"constant","name":"EFIVAR_ATTR_HARDWARE_ERROR_RECORD","ident":"FU_EFIVAR_ATTR_HARDWARE_ERROR_RECORD","summary":"No description available."},{"type":"constant","name":"EFIVAR_ATTR_NON_VOLATILE","ident":"FU_EFIVAR_ATTR_NON_VOLATILE","summary":"No description available."},{"type":"constant","name":"EFIVAR_ATTR_RUNTIME_ACCESS","ident":"FU_EFIVAR_ATTR_RUNTIME_ACCESS","summary":"No description available."},{"type":"constant","name":"EFIVAR_ATTR_TIME_BASED_AUTHENTICATED_WRITE_ACCESS","ident":"FU_EFIVAR_ATTR_TIME_BASED_AUTHENTICATED_WRITE_ACCESS","summary":"No description available."},{"type":"constant","name":"EFIVAR_GUID_EFI_CAPSULE_REPORT","ident":"FU_EFIVAR_GUID_EFI_CAPSULE_REPORT","summary":"No description available."},{"type":"constant","name":"EFIVAR_GUID_EFI_GLOBAL","ident":"FU_EFIVAR_GUID_EFI_GLOBAL","summary":"No description available."},{"type":"constant","name":"EFIVAR_GUID_FWUPDATE","ident":"FU_EFIVAR_GUID_FWUPDATE","summary":"No description available."},{"type":"constant","name":"EFIVAR_GUID_SECURITY_DATABASE","ident":"FU_EFIVAR_GUID_SECURITY_DATABASE","summary":"No description available."},{"type":"constant","name":"EFIVAR_GUID_UX_CAPSULE","ident":"FU_EFIVAR_GUID_UX_CAPSULE","summary":"No description available."},{"type":"constant","name":"EFI_FIRMWARE_FILE_BIOS_GUARD","ident":"FU_EFI_FIRMWARE_FILE_BIOS_GUARD","summary":"No description available."},{"type":"constant","name":"EFI_FIRMWARE_FILE_FV_IMAGE","ident":"FU_EFI_FIRMWARE_FILE_FV_IMAGE","summary":"No description available."},{"type":"constant","name":"EFI_FIRMWARE_FILE_MICROCODE","ident":"FU_EFI_FIRMWARE_FILE_MICROCODE","summary":"No description available."},{"type":"constant","name":"EFI_FIRMWARE_SECTION_ACPI1_TABLE","ident":"FU_EFI_FIRMWARE_SECTION_ACPI1_TABLE","summary":"No description available."},{"type":"constant","name":"EFI_FIRMWARE_SECTION_ACPI2_TABLE","ident":"FU_EFI_FIRMWARE_SECTION_ACPI2_TABLE","summary":"No description available."},{"type":"constant","name":"EFI_FIRMWARE_SECTION_ESRT_TABLE","ident":"FU_EFI_FIRMWARE_SECTION_ESRT_TABLE","summary":"No description available."},{"type":"constant","name":"EFI_FIRMWARE_SECTION_LZMA_COMPRESS","ident":"FU_EFI_FIRMWARE_SECTION_LZMA_COMPRESS","summary":"No description available."},{"type":"constant","name":"EFI_FIRMWARE_SECTION_SMBIOS_TABLE","ident":"FU_EFI_FIRMWARE_SECTION_SMBIOS_TABLE","summary":"No description available."},{"type":"constant","name":"EFI_FIRMWARE_SECTION_TIANO_COMPRESS","ident":"FU_EFI_FIRMWARE_SECTION_TIANO_COMPRESS","summary":"No description available."},{"type":"constant","name":"EFI_FIRMWARE_VOLUME_GUID_APPLE_BOOT","ident":"FU_EFI_FIRMWARE_VOLUME_GUID_APPLE_BOOT","summary":"No description available."},{"type":"constant","name":"EFI_FIRMWARE_VOLUME_GUID_FFS1","ident":"FU_EFI_FIRMWARE_VOLUME_GUID_FFS1","summary":"No description available."},{"type":"constant","name":"EFI_FIRMWARE_VOLUME_GUID_FFS2","ident":"FU_EFI_FIRMWARE_VOLUME_GUID_FFS2","summary":"No description available."},{"type":"constant","name":"EFI_FIRMWARE_VOLUME_GUID_FFS3","ident":"FU_EFI_FIRMWARE_VOLUME_GUID_FFS3","summary":"No description available."},{"type":"constant","name":"EFI_FIRMWARE_VOLUME_GUID_NVRAM_EVSA","ident":"FU_EFI_FIRMWARE_VOLUME_GUID_NVRAM_EVSA","summary":"No description available."},{"type":"constant","name":"EFI_FIRMWARE_VOLUME_GUID_NVRAM_EVSA2","ident":"FU_EFI_FIRMWARE_VOLUME_GUID_NVRAM_EVSA2","summary":"No description available."},{"type":"constant","name":"EFI_FIRMWARE_VOLUME_GUID_NVRAM_NVAR","ident":"FU_EFI_FIRMWARE_VOLUME_GUID_NVRAM_NVAR","summary":"No description available."},{"type":"constant","name":"EFI_FIRMWARE_VOLUME_GUID_PFH1","ident":"FU_EFI_FIRMWARE_VOLUME_GUID_PFH1","summary":"No description available."},{"type":"constant","name":"EFI_FIRMWARE_VOLUME_GUID_PFH2","ident":"FU_EFI_FIRMWARE_VOLUME_GUID_PFH2","summary":"No description available."},{"type":"constant","name":"EFI_SIGNATURE_GUID_MICROSOFT","ident":"FU_EFI_SIGNATURE_GUID_MICROSOFT","summary":"No description available."},{"type":"constant","name":"EFI_SIGNATURE_GUID_OVMF","ident":"FU_EFI_SIGNATURE_GUID_OVMF","summary":"No description available."},{"type":"constant","name":"EFI_SIGNATURE_GUID_OVMF_LEGACY","ident":"FU_EFI_SIGNATURE_GUID_OVMF_LEGACY","summary":"No description available."},{"type":"constant","name":"EFI_SIGNATURE_GUID_ZERO","ident":"FU_EFI_SIGNATURE_GUID_ZERO","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_1","ident":"FU_FIRMWARE_ALIGNMENT_1","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_128","ident":"FU_FIRMWARE_ALIGNMENT_128","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_128K","ident":"FU_FIRMWARE_ALIGNMENT_128K","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_128M","ident":"FU_FIRMWARE_ALIGNMENT_128M","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_16","ident":"FU_FIRMWARE_ALIGNMENT_16","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_16K","ident":"FU_FIRMWARE_ALIGNMENT_16K","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_16M","ident":"FU_FIRMWARE_ALIGNMENT_16M","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_1G","ident":"FU_FIRMWARE_ALIGNMENT_1G","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_1K","ident":"FU_FIRMWARE_ALIGNMENT_1K","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_1M","ident":"FU_FIRMWARE_ALIGNMENT_1M","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_2","ident":"FU_FIRMWARE_ALIGNMENT_2","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_256","ident":"FU_FIRMWARE_ALIGNMENT_256","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_256K","ident":"FU_FIRMWARE_ALIGNMENT_256K","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_256M","ident":"FU_FIRMWARE_ALIGNMENT_256M","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_2G","ident":"FU_FIRMWARE_ALIGNMENT_2G","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_2K","ident":"FU_FIRMWARE_ALIGNMENT_2K","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_2M","ident":"FU_FIRMWARE_ALIGNMENT_2M","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_32","ident":"FU_FIRMWARE_ALIGNMENT_32","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_32K","ident":"FU_FIRMWARE_ALIGNMENT_32K","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_32M","ident":"FU_FIRMWARE_ALIGNMENT_32M","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_4","ident":"FU_FIRMWARE_ALIGNMENT_4","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_4G","ident":"FU_FIRMWARE_ALIGNMENT_4G","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_4K","ident":"FU_FIRMWARE_ALIGNMENT_4K","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_4M","ident":"FU_FIRMWARE_ALIGNMENT_4M","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_512","ident":"FU_FIRMWARE_ALIGNMENT_512","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_512K","ident":"FU_FIRMWARE_ALIGNMENT_512K","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_512M","ident":"FU_FIRMWARE_ALIGNMENT_512M","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_64","ident":"FU_FIRMWARE_ALIGNMENT_64","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_64K","ident":"FU_FIRMWARE_ALIGNMENT_64K","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_64M","ident":"FU_FIRMWARE_ALIGNMENT_64M","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_8","ident":"FU_FIRMWARE_ALIGNMENT_8","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_8K","ident":"FU_FIRMWARE_ALIGNMENT_8K","summary":"No description available."},{"type":"constant","name":"FIRMWARE_ALIGNMENT_8M","ident":"FU_FIRMWARE_ALIGNMENT_8M","summary":"No description available."},{"type":"constant","name":"FIRMWARE_EXPORT_FLAG_ASCII_DATA","ident":"FU_FIRMWARE_EXPORT_FLAG_ASCII_DATA","summary":"Write the data as UTF-8 strings."},{"type":"constant","name":"FIRMWARE_EXPORT_FLAG_INCLUDE_DEBUG","ident":"FU_FIRMWARE_EXPORT_FLAG_INCLUDE_DEBUG","summary":"Include debug information when exporting."},{"type":"constant","name":"FIRMWARE_EXPORT_FLAG_NONE","ident":"FU_FIRMWARE_EXPORT_FLAG_NONE","summary":"No flags set."},{"type":"constant","name":"FIRMWARE_FLAG_DEDUPE_ID","ident":"FU_FIRMWARE_FLAG_DEDUPE_ID","summary":"Dedupe imges by ID."},{"type":"constant","name":"FIRMWARE_FLAG_DEDUPE_IDX","ident":"FU_FIRMWARE_FLAG_DEDUPE_IDX","summary":"Dedupe imges by IDX."},{"type":"constant","name":"FIRMWARE_FLAG_HAS_CHECKSUM","ident":"FU_FIRMWARE_FLAG_HAS_CHECKSUM","summary":"Has a CRC or checksum to test internal consistency."},{"type":"constant","name":"FIRMWARE_FLAG_HAS_VID_PID","ident":"FU_FIRMWARE_FLAG_HAS_VID_PID","summary":"Has a vendor or product ID in the firmware."},{"type":"constant","name":"FIRMWARE_FLAG_NONE","ident":"FU_FIRMWARE_FLAG_NONE","summary":"No flags set."},{"type":"constant","name":"FIRMWARE_ID_HEADER","ident":"FU_FIRMWARE_ID_HEADER","summary":"The usual firmware ID string for the header."},{"type":"constant","name":"FIRMWARE_ID_PAYLOAD","ident":"FU_FIRMWARE_ID_PAYLOAD","summary":"The usual firmware ID string for the payload."},{"type":"constant","name":"FIRMWARE_ID_SIGNATURE","ident":"FU_FIRMWARE_ID_SIGNATURE","summary":"The usual firmware ID string for the signature."},{"type":"constant","name":"FMAP_FIRMWARE_STRLEN","ident":"FU_FMAP_FIRMWARE_STRLEN","summary":"No description available."},{"type":"constant","name":"HWIDS_KEY_BASEBOARD_MANUFACTURER","ident":"FU_HWIDS_KEY_BASEBOARD_MANUFACTURER","summary":"The HwID key for the baseboard (motherboard) vendor."},{"type":"constant","name":"HWIDS_KEY_BASEBOARD_PRODUCT","ident":"FU_HWIDS_KEY_BASEBOARD_PRODUCT","summary":"The HwID key for baseboard (motherboard) product."},{"type":"constant","name":"HWIDS_KEY_BIOS_MAJOR_RELEASE","ident":"FU_HWIDS_KEY_BIOS_MAJOR_RELEASE","summary":"The HwID key for the BIOS major version."},{"type":"constant","name":"HWIDS_KEY_BIOS_MINOR_RELEASE","ident":"FU_HWIDS_KEY_BIOS_MINOR_RELEASE","summary":"The HwID key for the BIOS minor version."},{"type":"constant","name":"HWIDS_KEY_BIOS_VENDOR","ident":"FU_HWIDS_KEY_BIOS_VENDOR","summary":"The HwID key for the BIOS vendor."},{"type":"constant","name":"HWIDS_KEY_BIOS_VERSION","ident":"FU_HWIDS_KEY_BIOS_VERSION","summary":"The HwID key for the BIOS version."},{"type":"constant","name":"HWIDS_KEY_ENCLOSURE_KIND","ident":"FU_HWIDS_KEY_ENCLOSURE_KIND","summary":"The HwID key for the enclosure kind."},{"type":"constant","name":"HWIDS_KEY_FAMILY","ident":"FU_HWIDS_KEY_FAMILY","summary":"The HwID key for the deice family."},{"type":"constant","name":"HWIDS_KEY_FIRMWARE_MAJOR_RELEASE","ident":"FU_HWIDS_KEY_FIRMWARE_MAJOR_RELEASE","summary":"The HwID key for the firmware major version."},{"type":"constant","name":"HWIDS_KEY_FIRMWARE_MINOR_RELEASE","ident":"FU_HWIDS_KEY_FIRMWARE_MINOR_RELEASE","summary":"The HwID key for the firmware minor version."},{"type":"constant","name":"HWIDS_KEY_MANUFACTURER","ident":"FU_HWIDS_KEY_MANUFACTURER","summary":"The HwID key for the top-level product vendor."},{"type":"constant","name":"HWIDS_KEY_PRODUCT_NAME","ident":"FU_HWIDS_KEY_PRODUCT_NAME","summary":"The HwID key for the top-level product product name."},{"type":"constant","name":"HWIDS_KEY_PRODUCT_SKU","ident":"FU_HWIDS_KEY_PRODUCT_SKU","summary":"The HwID key for the top-level product SKU."},{"type":"constant","name":"IHEX_FIRMWARE_RECORD_TYPE_DATA","ident":"FU_IHEX_FIRMWARE_RECORD_TYPE_DATA","summary":"No description available."},{"type":"constant","name":"IHEX_FIRMWARE_RECORD_TYPE_EOF","ident":"FU_IHEX_FIRMWARE_RECORD_TYPE_EOF","summary":"No description available."},{"type":"constant","name":"IHEX_FIRMWARE_RECORD_TYPE_EXTENDED_LINEAR","ident":"FU_IHEX_FIRMWARE_RECORD_TYPE_EXTENDED_LINEAR","summary":"No description available."},{"type":"constant","name":"IHEX_FIRMWARE_RECORD_TYPE_EXTENDED_SEGMENT","ident":"FU_IHEX_FIRMWARE_RECORD_TYPE_EXTENDED_SEGMENT","summary":"No description available."},{"type":"constant","name":"IHEX_FIRMWARE_RECORD_TYPE_SIGNATURE","ident":"FU_IHEX_FIRMWARE_RECORD_TYPE_SIGNATURE","summary":"No description available."},{"type":"constant","name":"IHEX_FIRMWARE_RECORD_TYPE_START_LINEAR","ident":"FU_IHEX_FIRMWARE_RECORD_TYPE_START_LINEAR","summary":"No description available."},{"type":"constant","name":"IHEX_FIRMWARE_RECORD_TYPE_START_SEGMENT","ident":"FU_IHEX_FIRMWARE_RECORD_TYPE_START_SEGMENT","summary":"No description available."},{"type":"constant","name":"QUIRKS_BATTERY_THRESHOLD","ident":"FU_QUIRKS_BATTERY_THRESHOLD","summary":"The quirk key for the battery threshold in percent."},{"type":"constant","name":"QUIRKS_BRANCH","ident":"FU_QUIRKS_BRANCH","summary":"The quirk key for the firmware branch."},{"type":"constant","name":"QUIRKS_CHILDREN","ident":"FU_QUIRKS_CHILDREN","summary":"The quirk key for the children. This should contain ..."},{"type":"constant","name":"QUIRKS_COUNTERPART_GUID","ident":"FU_QUIRKS_COUNTERPART_GUID","summary":"The quirk key for the counterpart GUID."},{"type":"constant","name":"QUIRKS_FIRMWARE_SIZE","ident":"FU_QUIRKS_FIRMWARE_SIZE","summary":"The quirk key for the exact required firmware size ..."},{"type":"constant","name":"QUIRKS_FIRMWARE_SIZE_MAX","ident":"FU_QUIRKS_FIRMWARE_SIZE_MAX","summary":"The quirk key for the maximum firmware size in bytes."},{"type":"constant","name":"QUIRKS_FIRMWARE_SIZE_MIN","ident":"FU_QUIRKS_FIRMWARE_SIZE_MIN","summary":"The quirk key for the minimum firmware size in bytes."},{"type":"constant","name":"QUIRKS_FLAGS","ident":"FU_QUIRKS_FLAGS","summary":"The quirk key for the public flags."},{"type":"constant","name":"QUIRKS_GTYPE","ident":"FU_QUIRKS_GTYPE","summary":"The quirk key for the custom GType."},{"type":"constant","name":"QUIRKS_GUID","ident":"FU_QUIRKS_GUID","summary":"The quirk key for the GUID."},{"type":"constant","name":"QUIRKS_ICON","ident":"FU_QUIRKS_ICON","summary":"The quirk key for the icon."},{"type":"constant","name":"QUIRKS_INHIBIT","ident":"FU_QUIRKS_INHIBIT","summary":"The quirk key to inhibit the UPDATABLE flag and ..."},{"type":"constant","name":"QUIRKS_INSTALL_DURATION","ident":"FU_QUIRKS_INSTALL_DURATION","summary":"The quirk key for the install duration in seconds."},{"type":"constant","name":"QUIRKS_NAME","ident":"FU_QUIRKS_NAME","summary":"The quirk key for the name."},{"type":"constant","name":"QUIRKS_PARENT_GUID","ident":"FU_QUIRKS_PARENT_GUID","summary":"The quirk key for the parent GUID."},{"type":"constant","name":"QUIRKS_PLUGIN","ident":"FU_QUIRKS_PLUGIN","summary":"The quirk key for the plugin name."},{"type":"constant","name":"QUIRKS_PRIORITY","ident":"FU_QUIRKS_PRIORITY","summary":"The quirk key for the device priority."},{"type":"constant","name":"QUIRKS_PROTOCOL","ident":"FU_QUIRKS_PROTOCOL","summary":"The quirk key for the protocol, e.g. `org.usb.dfu`."},{"type":"constant","name":"QUIRKS_PROXY_GUID","ident":"FU_QUIRKS_PROXY_GUID","summary":"The quirk key for the proxy GUID."},{"type":"constant","name":"QUIRKS_REMOVE_DELAY","ident":"FU_QUIRKS_REMOVE_DELAY","summary":"The quirk key for the device removal delay in seconds."},{"type":"constant","name":"QUIRKS_SUMMARY","ident":"FU_QUIRKS_SUMMARY","summary":"The quirk key for the summary."},{"type":"constant","name":"QUIRKS_UPDATE_IMAGE","ident":"FU_QUIRKS_UPDATE_IMAGE","summary":"The quirk key for the update image shown before ..."},{"type":"constant","name":"QUIRKS_UPDATE_MESSAGE","ident":"FU_QUIRKS_UPDATE_MESSAGE","summary":"The quirk key for the update message shown after ..."},{"type":"constant","name":"QUIRKS_VENDOR","ident":"FU_QUIRKS_VENDOR","summary":"The quirk key for the vendor name."},{"type":"constant","name":"QUIRKS_VENDOR_ID","ident":"FU_QUIRKS_VENDOR_ID","summary":"The quirk key for the vendor ID."},{"type":"constant","name":"QUIRKS_VERSION","ident":"FU_QUIRKS_VERSION","summary":"The quirk key for the version."},{"type":"constant","name":"QUIRKS_VERSION_FORMAT","ident":"FU_QUIRKS_VERSION_FORMAT","summary":"The quirk key for the version format, e.g. `quad`."},{"type":"constant","name":"SMBIOS_STRUCTURE_TYPE_BASEBOARD","ident":"FU_SMBIOS_STRUCTURE_TYPE_BASEBOARD","summary":"The SMBIOS structure type for the baseboard (motherboard)."},{"type":"constant","name":"SMBIOS_STRUCTURE_TYPE_BIOS","ident":"FU_SMBIOS_STRUCTURE_TYPE_BIOS","summary":"The SMBIOS structure type for the BIOS."},{"type":"constant","name":"SMBIOS_STRUCTURE_TYPE_CHASSIS","ident":"FU_SMBIOS_STRUCTURE_TYPE_CHASSIS","summary":"The SMBIOS structure type for the chassis."},{"type":"constant","name":"SMBIOS_STRUCTURE_TYPE_LAST","ident":"FU_SMBIOS_STRUCTURE_TYPE_LAST","summary":"The last possible SMBIOS structure type."},{"type":"constant","name":"SMBIOS_STRUCTURE_TYPE_SYSTEM","ident":"FU_SMBIOS_STRUCTURE_TYPE_SYSTEM","summary":"The SMBIOS structure type for the system as a whole."},{"type":"constant","name":"VOLUME_KIND_BDP","ident":"FU_VOLUME_KIND_BDP","summary":"The GUID for the BDP."},{"type":"constant","name":"VOLUME_KIND_ESP","ident":"FU_VOLUME_KIND_ESP","summary":"The GUID for the ESP."},{"type":"ctor","name":"bytes_new","type_name":"Chunk","ident":"fu_chunk_bytes_new","summary":"Creates a new packet of data."},{"type":"ctor","name":"new","type_name":"Archive","ident":"fu_archive_new","summary":"Parses @data as an archive and decompresses all files ..."},{"type":"ctor","name":"new","type_name":"Cabinet","ident":"fu_cabinet_new","summary":"No description available."},{"type":"ctor","name":"new","type_name":"Chunk","ident":"fu_chunk_new","summary":"Creates a new packet of chunked data."},{"type":"ctor","name":"new","type_name":"Context","ident":"fu_context_new","summary":"Creates a new #FuContext"},{"type":"ctor","name":"new","type_name":"Device","ident":"fu_device_new","summary":"Creates a new #Fudevice"},{"type":"ctor","name":"new","type_name":"DeviceLocker","ident":"fu_device_locker_new","summary":"Opens the device for use. When the #FuDeviceLocker is ..."},{"type":"ctor","name":"new","type_name":"DfuFirmware","ident":"fu_dfu_firmware_new","summary":"Creates a new #FuFirmware of sub type Dfu"},{"type":"ctor","name":"new","type_name":"DfuseFirmware","ident":"fu_dfuse_firmware_new","summary":"Creates a new #FuFirmware of sub type DfuSe"},{"type":"ctor","name":"new","type_name":"EfiFirmwareFile","ident":"fu_efi_firmware_file_new","summary":"Creates a new #FuFirmware"},{"type":"ctor","name":"new","type_name":"EfiFirmwareFilesystem","ident":"fu_efi_firmware_filesystem_new","summary":"Creates a new #FuFirmware"},{"type":"ctor","name":"new","type_name":"EfiFirmwareSection","ident":"fu_efi_firmware_section_new","summary":"Creates a new #FuFirmware"},{"type":"ctor","name":"new","type_name":"EfiFirmwareVolume","ident":"fu_efi_firmware_volume_new","summary":"Creates a new #FuFirmware"},{"type":"ctor","name":"new","type_name":"EfiSignatureList","ident":"fu_efi_signature_list_new","summary":"Creates a new #FuFirmware that can parse an EFI_SIGNATURE_LIST"},{"type":"ctor","name":"new","type_name":"Firmware","ident":"fu_firmware_new","summary":"Creates an empty firmware object."},{"type":"ctor","name":"new","type_name":"FmapFirmware","ident":"fu_fmap_firmware_new","summary":"Creates a new #FuFirmware of sub type fmap"},{"type":"ctor","name":"new","type_name":"HidDevice","ident":"fu_hid_device_new","summary":"Creates a new HID device."},{"type":"ctor","name":"new","type_name":"Hwids","ident":"fu_hwids_new","summary":"Creates a new #FuHwids"},{"type":"ctor","name":"new","type_name":"IfdBios","ident":"fu_ifd_bios_new","summary":"Creates a new #FuFirmware"},{"type":"ctor","name":"new","type_name":"IfdFirmware","ident":"fu_ifd_firmware_new","summary":"Creates a new #FuFirmware of sub type Ifd"},{"type":"ctor","name":"new","type_name":"IfdImage","ident":"fu_ifd_image_new","summary":"Creates a new #FuFirmware"},{"type":"ctor","name":"new","type_name":"IhexFirmware","ident":"fu_ihex_firmware_new","summary":"Creates a new #FuFirmware of sub type Ihex"},{"type":"ctor","name":"new","type_name":"Plugin","ident":"fu_plugin_new","summary":"Creates a new #FuPlugin"},{"type":"ctor","name":"new","type_name":"Quirks","ident":"fu_quirks_new","summary":"Creates a new quirks object."},{"type":"ctor","name":"new","type_name":"SecurityAttrs","ident":"fu_security_attrs_new","summary":"No description available."},{"type":"ctor","name":"new","type_name":"Smbios","ident":"fu_smbios_new","summary":"Creates a new object to parse SMBIOS data."},{"type":"ctor","name":"new","type_name":"SrecFirmware","ident":"fu_srec_firmware_new","summary":"Creates a new #FuFirmware of type SREC"},{"type":"ctor","name":"new","type_name":"UdevDevice","ident":"fu_udev_device_new","summary":"Creates a new #FuUdevDevice."},{"type":"ctor","name":"new","type_name":"UsbDevice","ident":"fu_usb_device_new","summary":"Creates a new #FuUsbDevice."},{"type":"ctor","name":"new_file","type_name":"IOChannel","ident":"fu_io_channel_new_file","summary":"Creates a new object to write and read from."},{"type":"ctor","name":"new_from_bytes","type_name":"Firmware","ident":"fu_firmware_new_from_bytes","summary":"Creates a firmware object with the provided image set ..."},{"type":"ctor","name":"new_from_gtypes","type_name":"Firmware","ident":"fu_firmware_new_from_gtypes","summary":"Tries to parse the firmware with each #GType in order."},{"type":"ctor","name":"new_full","type_name":"DeviceLocker","ident":"fu_device_locker_new_full","summary":"Opens the device for use. When the #FuDeviceLocker is ..."},{"type":"ctor","name":"new_with_context","type_name":"Device","ident":"fu_device_new_with_context","summary":"Creates a new #Fudevice"},{"type":"ctor","name":"unix_new","type_name":"IOChannel","ident":"fu_io_channel_unix_new","summary":"Creates a new object to write and read from."},{"type":"enum","name":"BatteryState","ctype":"FuBatteryState","summary":"The device battery state."},{"type":"enum","name":"CabinetExportFlags","ctype":"FuCabinetExportFlags","summary":"The flags to use when exporting the archive."},{"type":"enum","name":"CabinetParseFlags","ctype":"FuCabinetParseFlags","summary":"The flags to use when loading the cabinet."},{"type":"enum","name":"CabinetSignFlags","ctype":"FuCabinetSignFlags","summary":"The flags to use when signing the archive."},{"type":"enum","name":"CpuVendor","ctype":"FuCpuVendor","summary":"The CPU vendor."},{"type":"enum","name":"EfiSignatureKind","ctype":"FuEfiSignatureKind","summary":"The kind of EFI signature."},{"type":"enum","name":"FirmareSrecRecordKind","ctype":"FuFirmareSrecRecordKind","summary":"The kind of SREC record kind."},{"type":"enum","name":"IfdRegion","ctype":"FuIfdRegion","summary":"No description available."},{"type":"enum","name":"PathKind","ctype":"FuPathKind","summary":"Path types to use when dynamically determining a path ..."},{"type":"enum","name":"PluginRule","ctype":"FuPluginRule","summary":"The rules used for ordering plugins. Plugins are expected ..."},{"type":"enum","name":"PluginVerifyFlags","ctype":"FuPluginVerifyFlags","summary":"Flags used when verifying, currently unused."},{"type":"enum","name":"SmbiosChassisKind","ctype":"FuSmbiosChassisKind","summary":"The system chassis kind."},{"type":"function","name":"battery_state_to_string","ident":"fu_battery_state_to_string","summary":"Converts an enumerated type to a string."},{"type":"function","name":"byte_array_align_up","ident":"fu_byte_array_align_up","summary":"Align a byte array length to a power of ..."},{"type":"function","name":"byte_array_append_bytes","ident":"fu_byte_array_append_bytes","summary":"Adds the contents of a GBytes to a byte array."},{"type":"function","name":"byte_array_append_uint16","ident":"fu_byte_array_append_uint16","summary":"Adds a 16 bit integer to a byte array."},{"type":"function","name":"byte_array_append_uint32","ident":"fu_byte_array_append_uint32","summary":"Adds a 32 bit integer to a byte array."},{"type":"function","name":"byte_array_append_uint64","ident":"fu_byte_array_append_uint64","summary":"Adds a 64 bit integer to a byte array."},{"type":"function","name":"byte_array_append_uint8","ident":"fu_byte_array_append_uint8","summary":"Adds a 8 bit integer to a byte array."},{"type":"function","name":"byte_array_set_size","ident":"fu_byte_array_set_size","summary":"Sets the size of the GByteArray, expanding it with ..."},{"type":"function","name":"byte_array_set_size_full","ident":"fu_byte_array_set_size_full","summary":"Sets the size of the GByteArray, expanding with @data ..."},{"type":"function","name":"bytes_get_data_safe","ident":"fu_bytes_get_data_safe","summary":"Get the byte data in the #GBytes. This data ..."},{"type":"function","name":"common_align_up","ident":"fu_common_align_up","summary":"Align a value to a power of 2 boundary, ..."},{"type":"function","name":"common_bytes_align","ident":"fu_common_bytes_align","summary":"Aligns a block of memory to @blksize using the ..."},{"type":"function","name":"common_bytes_compare","ident":"fu_common_bytes_compare","summary":"Compares the buffers for equality."},{"type":"function","name":"common_bytes_compare_raw","ident":"fu_common_bytes_compare_raw","summary":"Compares the buffers for equality."},{"type":"function","name":"common_bytes_is_empty","ident":"fu_common_bytes_is_empty","summary":"Checks if a byte array are just empty (0xff) bytes."},{"type":"function","name":"common_bytes_new_offset","ident":"fu_common_bytes_new_offset","summary":"Creates a #GBytes which is a subsection of another #GBytes."},{"type":"function","name":"common_bytes_pad","ident":"fu_common_bytes_pad","summary":"Pads a GBytes to a minimum @sz with `0xff`."},{"type":"function","name":"common_cab_build_silo","ident":"fu_common_cab_build_silo","summary":"Create an AppStream silo from a cabinet archive."},{"type":"function","name":"common_check_kernel_version","ident":"fu_common_check_kernel_version","summary":"Determines if the system is running at least a ..."},{"type":"function","name":"common_cpuid","ident":"fu_common_cpuid","summary":"Calls CPUID and returns the registers for the given leaf."},{"type":"function","name":"common_crc16","ident":"fu_common_crc16","summary":"Returns the CRC-16-IBM cyclic redundancy value for the given ..."},{"type":"function","name":"common_crc16_full","ident":"fu_common_crc16_full","summary":"Returns the cyclic redundancy check value for the given ..."},{"type":"function","name":"common_crc32","ident":"fu_common_crc32","summary":"Returns the cyclic redundancy check value for the given ..."},{"type":"function","name":"common_crc32_full","ident":"fu_common_crc32_full","summary":"Returns the cyclic redundancy check value for the given ..."},{"type":"function","name":"common_crc8","ident":"fu_common_crc8","summary":"Returns the cyclic redundancy check value for the given ..."},{"type":"function","name":"common_dump_bytes","ident":"fu_common_dump_bytes","summary":"Dumps a byte buffer to the screen."},{"type":"function","name":"common_dump_full","ident":"fu_common_dump_full","summary":"Dumps a raw buffer to the screen."},{"type":"function","name":"common_dump_raw","ident":"fu_common_dump_raw","summary":"Dumps a raw buffer to the screen."},{"type":"function","name":"common_error_array_get_best","ident":"fu_common_error_array_get_best","summary":"Finds the 'best' error to show the user from ..."},{"type":"function","name":"common_extract_archive","ident":"fu_common_extract_archive","summary":"Extracts an archive to a directory."},{"type":"function","name":"common_filename_glob","ident":"fu_common_filename_glob","summary":"Returns all the filenames that match a specific glob ..."},{"type":"function","name":"common_find_program_in_path","ident":"fu_common_find_program_in_path","summary":"Looks for a program in the PATH variable"},{"type":"function","name":"common_firmware_builder","ident":"fu_common_firmware_builder","summary":"Builds a firmware file using tools from the host ..."},{"type":"function","name":"common_fnmatch","ident":"fu_common_fnmatch","summary":"Matches a string against a glob pattern."},{"type":"function","name":"common_get_contents_bytes","ident":"fu_common_get_contents_bytes","summary":"Reads a blob of data from a file."},{"type":"function","name":"common_get_contents_fd","ident":"fu_common_get_contents_fd","summary":"Reads a blob from a specific file descriptor.  ..."},{"type":"function","name":"common_get_cpu_vendor","ident":"fu_common_get_cpu_vendor","summary":"Uses CPUID to discover the CPU vendor."},{"type":"function","name":"common_get_esp_default","ident":"fu_common_get_esp_default","summary":"Gets the platform default ESP"},{"type":"function","name":"common_get_esp_for_path","ident":"fu_common_get_esp_for_path","summary":"Gets the platform ESP using a UNIX or UDisks path"},{"type":"function","name":"common_get_files_recursive","ident":"fu_common_get_files_recursive","summary":"Returns every file found under @directory, and any subdirectory. ..."},{"type":"function","name":"common_get_firmware_search_path","ident":"fu_common_get_firmware_search_path","summary":"Reads the FU_PATH_KIND_FIRMWARE_SEARCH and returns its contents"},{"type":"function","name":"common_get_memory_size","ident":"fu_common_get_memory_size","summary":"Returns the size of physical memory."},{"type":"function","name":"common_get_path","ident":"fu_common_get_path","summary":"Gets a fwupd-specific system path. These can be overridden ..."},{"type":"function","name":"common_get_volume_by_device","ident":"fu_common_get_volume_by_device","summary":"Finds the first volume from the specified device."},{"type":"function","name":"common_get_volume_by_devnum","ident":"fu_common_get_volume_by_devnum","summary":"Finds the first volume from the specified device."},{"type":"function","name":"common_get_volumes_by_kind","ident":"fu_common_get_volumes_by_kind","summary":"Finds all volumes of a specific partition type"},{"type":"function","name":"common_guid_is_plausible","ident":"fu_common_guid_is_plausible","summary":"Checks whether a chunk of memory looks like it ..."},{"type":"function","name":"common_is_live_media","ident":"fu_common_is_live_media","summary":"Checks if the user is running from a live ..."},{"type":"function","name":"common_kernel_locked_down","ident":"fu_common_kernel_locked_down","summary":"Determines if kernel lockdown in effect"},{"type":"function","name":"common_mkdir_parent","ident":"fu_common_mkdir_parent","summary":"Creates any required directories, including any parent directories."},{"type":"function","name":"common_read_uint16","ident":"fu_common_read_uint16","summary":"Read a value from a buffer using a specified endian."},{"type":"function","name":"common_read_uint16_safe","ident":"fu_common_read_uint16_safe","summary":"Read a value from a buffer using a specified ..."},{"type":"function","name":"common_read_uint32","ident":"fu_common_read_uint32","summary":"Read a value from a buffer using a specified endian."},{"type":"function","name":"common_read_uint32_safe","ident":"fu_common_read_uint32_safe","summary":"Read a value from a buffer using a specified ..."},{"type":"function","name":"common_read_uint64","ident":"fu_common_read_uint64","summary":"Read a value from a buffer using a specified endian."},{"type":"function","name":"common_read_uint64_safe","ident":"fu_common_read_uint64_safe","summary":"Read a value from a buffer using a specified ..."},{"type":"function","name":"common_read_uint8_safe","ident":"fu_common_read_uint8_safe","summary":"Read a value from a buffer in a safe ..."},{"type":"function","name":"common_realpath","ident":"fu_common_realpath","summary":"Finds the canonicalized absolute filename for a path."},{"type":"function","name":"common_reset_firmware_search_path","ident":"fu_common_reset_firmware_search_path","summary":"Resets the FU_PATH_KIND_FIRMWARE_SEARCH to an empty string"},{"type":"function","name":"common_rmtree","ident":"fu_common_rmtree","summary":"Recursively removes a directory."},{"type":"function","name":"common_set_contents_bytes","ident":"fu_common_set_contents_bytes","summary":"Writes a blob of data to a filename, creating ..."},{"type":"function","name":"common_set_firmware_search_path","ident":"fu_common_set_firmware_search_path","summary":"Writes path to the FU_PATH_KIND_FIRMWARE_SEARCH"},{"type":"function","name":"common_spawn_sync","ident":"fu_common_spawn_sync","summary":"Runs a subprocess and waits for it to exit. ..."},{"type":"function","name":"common_string_append_kb","ident":"fu_common_string_append_kb","summary":"Appends a key and boolean value to a string"},{"type":"function","name":"common_string_append_ku","ident":"fu_common_string_append_ku","summary":"Appends a key and unsigned integer to a string"},{"type":"function","name":"common_string_append_kv","ident":"fu_common_string_append_kv","summary":"Appends a key and string value to a string"},{"type":"function","name":"common_string_append_kx","ident":"fu_common_string_append_kx","summary":"Appends a key and hex integer to a string"},{"type":"function","name":"common_string_replace","ident":"fu_common_string_replace","summary":"Performs multiple search and replace operations on the given string."},{"type":"function","name":"common_strjoin_array","ident":"fu_common_strjoin_array","summary":"Joins an array of strings together to form one ..."},{"type":"function","name":"common_strnsplit","ident":"fu_common_strnsplit","summary":"Splits a string into a maximum of @max_tokens pieces, ..."},{"type":"function","name":"common_strsafe","ident":"fu_common_strsafe","summary":"Converts a string into something that can be safely printed."},{"type":"function","name":"common_strstrip","ident":"fu_common_strstrip","summary":"Removes leading and trailing whitespace from a constant string."},{"type":"function","name":"common_strtoull","ident":"fu_common_strtoull","summary":"Converts a string value to an integer. Values are ..."},{"type":"function","name":"common_strwidth","ident":"fu_common_strwidth","summary":"Returns the width of the string in displayed characters ..."},{"type":"function","name":"common_uri_get_scheme","ident":"fu_common_uri_get_scheme","summary":"Returns the USI scheme for the given URI."},{"type":"function","name":"common_vercmp_full","ident":"fu_common_vercmp_full","summary":"Compares version numbers for sorting taking into account the ..."},{"type":"function","name":"common_version_ensure_semver","ident":"fu_common_version_ensure_semver","summary":"Builds a semver from the possibly crazy version number."},{"type":"function","name":"common_version_from_uint16","ident":"fu_common_version_from_uint16","summary":"Returns a dotted decimal version string from a 16 ..."},{"type":"function","name":"common_version_from_uint32","ident":"fu_common_version_from_uint32","summary":"Returns a dotted decimal version string from a 32 ..."},{"type":"function","name":"common_version_from_uint64","ident":"fu_common_version_from_uint64","summary":"Returns a dotted decimal version string from a 64 ..."},{"type":"function","name":"common_version_guess_format","ident":"fu_common_version_guess_format","summary":"Guesses the version format from the version number. This ..."},{"type":"function","name":"common_version_parse_from_format","ident":"fu_common_version_parse_from_format","summary":"Returns a dotted decimal version string from a version ..."},{"type":"function","name":"common_version_verify_format","ident":"fu_common_version_verify_format","summary":"Verifies if a version matches the input format."},{"type":"function","name":"common_write_uint16","ident":"fu_common_write_uint16","summary":"Writes a value to a buffer using a specified endian."},{"type":"function","name":"common_write_uint16_safe","ident":"fu_common_write_uint16_safe","summary":"Write a value to a buffer using a specified ..."},{"type":"function","name":"common_write_uint32","ident":"fu_common_write_uint32","summary":"Writes a value to a buffer using a specified endian."},{"type":"function","name":"common_write_uint32_safe","ident":"fu_common_write_uint32_safe","summary":"Write a value to a buffer using a specified ..."},{"type":"function","name":"common_write_uint64","ident":"fu_common_write_uint64","summary":"Writes a value to a buffer using a specified endian."},{"type":"function","name":"common_write_uint64_safe","ident":"fu_common_write_uint64_safe","summary":"Write a value to a buffer using a specified ..."},{"type":"function","name":"common_write_uint8_safe","ident":"fu_common_write_uint8_safe","summary":"Write a value to a buffer in a safe ..."},{"type":"function","name":"efi_guid_to_name","ident":"fu_efi_guid_to_name","summary":"Converts a GUID to the known nice name."},{"type":"function","name":"efivar_delete","ident":"fu_efivar_delete","summary":"Removes a variable from NVRAM"},{"type":"function","name":"efivar_delete_with_glob","ident":"fu_efivar_delete_with_glob","summary":"Removes a group of variables from NVRAM"},{"type":"function","name":"efivar_exists","ident":"fu_efivar_exists","summary":"Test if a variable exists"},{"type":"function","name":"efivar_get_data","ident":"fu_efivar_get_data","summary":"Gets the data from a UEFI variable in NVRAM"},{"type":"function","name":"efivar_get_data_bytes","ident":"fu_efivar_get_data_bytes","summary":"Gets the data from a UEFI variable in NVRAM"},{"type":"function","name":"efivar_get_monitor","ident":"fu_efivar_get_monitor","summary":"Returns a file monitor for a specific key."},{"type":"function","name":"efivar_get_names","ident":"fu_efivar_get_names","summary":"Gets the list of names where the GUID matches. ..."},{"type":"function","name":"efivar_secure_boot_enabled","ident":"fu_efivar_secure_boot_enabled","summary":"Determines if secure boot was enabled"},{"type":"function","name":"efivar_secure_boot_enabled_full","ident":"fu_efivar_secure_boot_enabled_full","summary":"Determines if secure boot was enabled"},{"type":"function","name":"efivar_set_data","ident":"fu_efivar_set_data","summary":"Sets the data to a UEFI variable in NVRAM"},{"type":"function","name":"efivar_set_data_bytes","ident":"fu_efivar_set_data_bytes","summary":"Sets the data to a UEFI variable in NVRAM"},{"type":"function","name":"efivar_space_used","ident":"fu_efivar_space_used","summary":"Gets the total size used by all EFI variables. ..."},{"type":"function","name":"efivar_supported","ident":"fu_efivar_supported","summary":"Determines if the kernel supports EFI variables"},{"type":"function","name":"ifd_access_to_string","ident":"fu_ifd_access_to_string","summary":"Converts a #FuIfdAccess to a string."},{"type":"function","name":"ifd_region_to_access","ident":"fu_ifd_region_to_access","summary":"Converts a #FuIfdRegion to an access level."},{"type":"function","name":"ifd_region_to_name","ident":"fu_ifd_region_to_name","summary":"Converts a #FuIfdRegion to a name the user might recognize."},{"type":"function","name":"ifd_region_to_string","ident":"fu_ifd_region_to_string","summary":"Converts a #FuIfdRegion to a string."},{"type":"function","name":"kenv_get_string","ident":"fu_kenv_get_string","summary":"Gets a BSD kernel environment string. This will not ..."},{"type":"function","name":"memcpy_safe","ident":"fu_memcpy_safe","summary":"Copies some memory using memcpy in a safe way. ..."},{"type":"function","name":"memdup_safe","ident":"fu_memdup_safe","summary":"Duplicates some memory using memdup in a safe way. ..."},{"type":"function","name":"version_string","ident":"fu_version_string","summary":"Gets the libfwupdplugin installed runtime version.  This may ..."},{"type":"function","name":"xmlb_builder_insert_kb","ident":"fu_xmlb_builder_insert_kb","summary":"Convenience function to add an XML node with a ..."},{"type":"function","name":"xmlb_builder_insert_kv","ident":"fu_xmlb_builder_insert_kv","summary":"Convenience function to add an XML node with a ..."},{"type":"function","name":"xmlb_builder_insert_kx","ident":"fu_xmlb_builder_insert_kx","summary":"Convenience function to add an XML node with an ..."},{"type":"function_macro","name":"IFD_FREG_BASE","ident":"FU_IFD_FREG_BASE","summary":"No description available."},{"type":"function_macro","name":"IFD_FREG_LIMIT","ident":"FU_IFD_FREG_LIMIT","summary":"No description available."},{"type":"function_macro","name":"device_add_checksum","ident":"fu_device_add_checksum","summary":"No description available."},{"type":"function_macro","name":"device_add_icon","ident":"fu_device_add_icon","summary":"No description available."},{"type":"function_macro","name":"device_add_protocol","ident":"fu_device_add_protocol","summary":"No description available."},{"type":"function_macro","name":"device_add_release","ident":"fu_device_add_release","summary":"No description available."},{"type":"function_macro","name":"device_add_vendor_id","ident":"fu_device_add_vendor_id","summary":"No description available."},{"type":"function_macro","name":"device_get_branch","ident":"fu_device_get_branch","summary":"No description available."},{"type":"function_macro","name":"device_get_checksums","ident":"fu_device_get_checksums","summary":"No description available."},{"type":"function_macro","name":"device_get_composite_id","ident":"fu_device_get_composite_id","summary":"No description available."},{"type":"function_macro","name":"device_get_created","ident":"fu_device_get_created","summary":"No description available."},{"type":"function_macro","name":"device_get_flags","ident":"fu_device_get_flags","summary":"No description available."},{"type":"function_macro","name":"device_get_flashes_left","ident":"fu_device_get_flashes_left","summary":"No description available."},{"type":"function_macro","name":"device_get_guid_default","ident":"fu_device_get_guid_default","summary":"No description available."},{"type":"function_macro","name":"device_get_guids","ident":"fu_device_get_guids","summary":"No description available."},{"type":"function_macro","name":"device_get_icons","ident":"fu_device_get_icons","summary":"No description available."},{"type":"function_macro","name":"device_get_id","ident":"fu_device_get_id","summary":"No description available."},{"type":"function_macro","name":"device_get_install_duration","ident":"fu_device_get_install_duration","summary":"No description available."},{"type":"function_macro","name":"device_get_instance_ids","ident":"fu_device_get_instance_ids","summary":"No description available."},{"type":"function_macro","name":"device_get_modified","ident":"fu_device_get_modified","summary":"No description available."},{"type":"function_macro","name":"device_get_name","ident":"fu_device_get_name","summary":"No description available."},{"type":"function_macro","name":"device_get_plugin","ident":"fu_device_get_plugin","summary":"No description available."},{"type":"function_macro","name":"device_get_protocols","ident":"fu_device_get_protocols","summary":"No description available."},{"type":"function_macro","name":"device_get_serial","ident":"fu_device_get_serial","summary":"No description available."},{"type":"function_macro","name":"device_get_summary","ident":"fu_device_get_summary","summary":"No description available."},{"type":"function_macro","name":"device_get_update_error","ident":"fu_device_get_update_error","summary":"No description available."},{"type":"function_macro","name":"device_get_update_image","ident":"fu_device_get_update_image","summary":"No description available."},{"type":"function_macro","name":"device_get_update_message","ident":"fu_device_get_update_message","summary":"No description available."},{"type":"function_macro","name":"device_get_update_state","ident":"fu_device_get_update_state","summary":"No description available."},{"type":"function_macro","name":"device_get_vendor","ident":"fu_device_get_vendor","summary":"No description available."},{"type":"function_macro","name":"device_get_vendor_ids","ident":"fu_device_get_vendor_ids","summary":"No description available."},{"type":"function_macro","name":"device_get_version","ident":"fu_device_get_version","summary":"No description available."},{"type":"function_macro","name":"device_get_version_bootloader","ident":"fu_device_get_version_bootloader","summary":"No description available."},{"type":"function_macro","name":"device_get_version_bootloader_raw","ident":"fu_device_get_version_bootloader_raw","summary":"No description available."},{"type":"function_macro","name":"device_get_version_build_date","ident":"fu_device_get_version_build_date","summary":"No description available."},{"type":"function_macro","name":"device_get_version_format","ident":"fu_device_get_version_format","summary":"No description available."},{"type":"function_macro","name":"device_get_version_lowest","ident":"fu_device_get_version_lowest","summary":"No description available."},{"type":"function_macro","name":"device_get_version_lowest_raw","ident":"fu_device_get_version_lowest_raw","summary":"No description available."},{"type":"function_macro","name":"device_get_version_raw","ident":"fu_device_get_version_raw","summary":"No description available."},{"type":"function_macro","name":"device_has_flag","ident":"fu_device_has_flag","summary":"No description available."},{"type":"function_macro","name":"device_has_icon","ident":"fu_device_has_icon","summary":"No description available."},{"type":"function_macro","name":"device_has_instance_id","ident":"fu_device_has_instance_id","summary":"No description available."},{"type":"function_macro","name":"device_has_protocol","ident":"fu_device_has_protocol","summary":"No description available."},{"type":"function_macro","name":"device_has_vendor_id","ident":"fu_device_has_vendor_id","summary":"No description available."},{"type":"function_macro","name":"device_set_branch","ident":"fu_device_set_branch","summary":"No description available."},{"type":"function_macro","name":"device_set_created","ident":"fu_device_set_created","summary":"No description available."},{"type":"function_macro","name":"device_set_description","ident":"fu_device_set_description","summary":"No description available."},{"type":"function_macro","name":"device_set_flags","ident":"fu_device_set_flags","summary":"No description available."},{"type":"function_macro","name":"device_set_flashes_left","ident":"fu_device_set_flashes_left","summary":"No description available."},{"type":"function_macro","name":"device_set_install_duration","ident":"fu_device_set_install_duration","summary":"No description available."},{"type":"function_macro","name":"device_set_modified","ident":"fu_device_set_modified","summary":"No description available."},{"type":"function_macro","name":"device_set_plugin","ident":"fu_device_set_plugin","summary":"No description available."},{"type":"function_macro","name":"device_set_serial","ident":"fu_device_set_serial","summary":"No description available."},{"type":"function_macro","name":"device_set_summary","ident":"fu_device_set_summary","summary":"No description available."},{"type":"function_macro","name":"device_set_update_error","ident":"fu_device_set_update_error","summary":"No description available."},{"type":"function_macro","name":"device_set_update_image","ident":"fu_device_set_update_image","summary":"No description available."},{"type":"function_macro","name":"device_set_update_message","ident":"fu_device_set_update_message","summary":"No description available."},{"type":"function_macro","name":"device_set_version_bootloader_raw","ident":"fu_device_set_version_bootloader_raw","summary":"No description available."},{"type":"function_macro","name":"device_set_version_build_date","ident":"fu_device_set_version_build_date","summary":"No description available."},{"type":"function_macro","name":"device_set_version_lowest_raw","ident":"fu_device_set_version_lowest_raw","summary":"No description available."},{"type":"function_macro","name":"device_set_version_raw","ident":"fu_device_set_version_raw","summary":"No description available."},{"type":"function_macro","name":"plugin_add_flag","ident":"fu_plugin_add_flag","summary":"No description available."},{"type":"function_macro","name":"plugin_get_flags","ident":"fu_plugin_get_flags","summary":"No description available."},{"type":"function_macro","name":"plugin_has_flag","ident":"fu_plugin_has_flag","summary":"No description available."},{"type":"function_macro","name":"plugin_remove_flag","ident":"fu_plugin_remove_flag","summary":"No description available."},{"type":"method","name":"activate","type_name":"Device","ident":"fu_device_activate","summary":"Activates up a device, which normally means the device ..."},{"type":"method","name":"add_child","type_name":"Device","ident":"fu_device_add_child","summary":"Sets any child device. An child device is logically ..."},{"type":"method","name":"add_chunk","type_name":"Firmware","ident":"fu_firmware_add_chunk","summary":"Adds a chunk to the image."},{"type":"method","name":"add_compile_version","type_name":"Context","ident":"fu_context_add_compile_version","summary":"Sets a compile-time version of a specific dependency."},{"type":"method","name":"add_counterpart_guid","type_name":"Device","ident":"fu_device_add_counterpart_guid","summary":"Adds a GUID to the device. If the @guid ..."},{"type":"method","name":"add_device_gtype","type_name":"Plugin","ident":"fu_plugin_add_device_gtype","summary":"Adds the device #GType which is used when creating ..."},{"type":"method","name":"add_file","type_name":"Cabinet","ident":"fu_cabinet_add_file","summary":"Adds a file to the silo."},{"type":"method","name":"add_firmware_gtype","type_name":"Context","ident":"fu_context_add_firmware_gtype","summary":"Adds a firmware #GType which is used when creating ..."},{"type":"method","name":"add_firmware_gtype","type_name":"Plugin","ident":"fu_plugin_add_firmware_gtype","summary":"Adds a firmware #GType which is used when creating ..."},{"type":"method","name":"add_flag","type_name":"Device","ident":"fu_device_add_flag","summary":"Adds a device flag to the device."},{"type":"method","name":"add_flag","type_name":"Firmware","ident":"fu_firmware_add_flag","summary":"Adds a specific firmware flag to the firmware."},{"type":"method","name":"add_flag","type_name":"HidDevice","ident":"fu_hid_device_add_flag","summary":"Adds a flag to be used for all set ..."},{"type":"method","name":"add_guid","type_name":"Device","ident":"fu_device_add_guid","summary":"Adds a GUID to the device. If the @guid ..."},{"type":"method","name":"add_guid_full","type_name":"Device","ident":"fu_device_add_guid_full","summary":"Adds a GUID to the device. If the @guid ..."},{"type":"method","name":"add_image","type_name":"Firmware","ident":"fu_firmware_add_image","summary":"Adds an image to the firmware.  If %FU_FIRMWARE_FLAG_DEDUPE_ID ..."},{"type":"method","name":"add_instance_id","type_name":"Device","ident":"fu_device_add_instance_id","summary":"Adds an instance ID to the device. If the ..."},{"type":"method","name":"add_instance_id_full","type_name":"Device","ident":"fu_device_add_instance_id_full","summary":"Adds an instance ID with all parameters set"},{"type":"method","name":"add_internal_flag","type_name":"Device","ident":"fu_device_add_internal_flag","summary":"Adds a private flag that stays internal to the ..."},{"type":"method","name":"add_parent_guid","type_name":"Device","ident":"fu_device_add_parent_guid","summary":"Sets any parent device using a GUID. An parent ..."},{"type":"method","name":"add_parent_physical_id","type_name":"Device","ident":"fu_device_add_parent_physical_id","summary":"Sets any parent device using the physical ID. An ..."},{"type":"method","name":"add_possible_key","type_name":"Quirks","ident":"fu_quirks_add_possible_key","summary":"Adds a possible quirk key. If added by a ..."},{"type":"method","name":"add_possible_plugin","type_name":"Device","ident":"fu_device_add_possible_plugin","summary":"Adds a plugin name to the list of plugins ..."},{"type":"method","name":"add_private_flag","type_name":"Device","ident":"fu_device_add_private_flag","summary":"Adds a private flag that can be used by ..."},{"type":"method","name":"add_quirk_key","type_name":"Context","ident":"fu_context_add_quirk_key","summary":"Adds a possible quirk key. If added by a ..."},{"type":"method","name":"add_report_metadata","type_name":"Plugin","ident":"fu_plugin_add_report_metadata","summary":"Sets any additional metadata to be included in the ..."},{"type":"method","name":"add_rule","type_name":"Plugin","ident":"fu_plugin_add_rule","summary":"If the plugin name is found, the rule will ..."},{"type":"method","name":"add_runtime_version","type_name":"Context","ident":"fu_context_add_runtime_version","summary":"Sets a runtime version of a specific dependency."},{"type":"method","name":"add_security_attrs","type_name":"Device","ident":"fu_device_add_security_attrs","summary":"Adds HSI security attributes."},{"type":"method","name":"add_smbios_override","type_name":"Hwids","ident":"fu_hwids_add_smbios_override","summary":"Sets SMBIOS override values so you can emulate another ..."},{"type":"method","name":"add_udev_subsystem","type_name":"Context","ident":"fu_context_add_udev_subsystem","summary":"Registers the udev subsystem to be watched by the ..."},{"type":"method","name":"add_udev_subsystem","type_name":"Plugin","ident":"fu_plugin_add_udev_subsystem","summary":"Registers the udev subsystem to be watched by the ..."},{"type":"method","name":"alloc_data","type_name":"Plugin","ident":"fu_plugin_alloc_data","summary":"Allocates the per-plugin allocated private data."},{"type":"method","name":"append","type_name":"SecurityAttrs","ident":"fu_security_attrs_append","summary":"Adds a #FwupdSecurityAttr to the array."},{"type":"method","name":"attach","type_name":"Device","ident":"fu_device_attach","summary":"Attaches a device from the bootloader into application mode."},{"type":"method","name":"bind_driver","type_name":"Device","ident":"fu_device_bind_driver","summary":"Binds a driver to the device, which normally means ..."},{"type":"method","name":"build","type_name":"Firmware","ident":"fu_firmware_build","summary":"Builds a firmware from an XML manifest. The manifest ..."},{"type":"method","name":"build_from_xml","type_name":"Firmware","ident":"fu_firmware_build_from_xml","summary":"Builds a firmware from an XML manifest. The manifest ..."},{"type":"method","name":"cache_add","type_name":"Plugin","ident":"fu_plugin_cache_add","summary":"Adds an object to the per-plugin cache."},{"type":"method","name":"cache_lookup","type_name":"Plugin","ident":"fu_plugin_cache_lookup","summary":"Finds an object in the per-plugin cache."},{"type":"method","name":"cache_remove","type_name":"Plugin","ident":"fu_plugin_cache_remove","summary":"Removes an object from the per-plugin cache."},{"type":"method","name":"calculate_hsi","type_name":"SecurityAttrs","ident":"fu_security_attrs_calculate_hsi","summary":"Calculates the HSI string from the appended attributes."},{"type":"method","name":"check_free_space","type_name":"Volume","ident":"fu_volume_check_free_space","summary":"Checks the volume for required space."},{"type":"method","name":"check_jedec_cmd","type_name":"IfdFirmware","ident":"fu_ifd_firmware_check_jedec_cmd","summary":"Checks a JEDEC command to see if it has ..."},{"type":"method","name":"cleanup","type_name":"Device","ident":"fu_device_cleanup","summary":"Cleans up a device after an update. A different ..."},{"type":"method","name":"close","type_name":"Device","ident":"fu_device_close","summary":"Closes a device, optionally running a object-specific vfunc.  ..."},{"type":"method","name":"close","type_name":"DeviceLocker","ident":"fu_device_locker_close","summary":"Closes the locker before it gets cleaned up.  ..."},{"type":"method","name":"coldplug","type_name":"Backend","ident":"fu_backend_coldplug","summary":"Adds devices using the subclassed backend. If fu_backend_setup() has ..."},{"type":"method","name":"convert_instance_ids","type_name":"Device","ident":"fu_device_convert_instance_ids","summary":"Converts all the Device Instance IDs added using fu_device_add_instance_id() ..."},{"type":"method","name":"depsolve","type_name":"SecurityAttrs","ident":"fu_security_attrs_depsolve","summary":"Marks any attributes with %FWUPD_SECURITY_ATTR_FLAG_OBSOLETED that have been defined ..."},{"type":"method","name":"detach","type_name":"Device","ident":"fu_device_detach","summary":"Detaches a device from the application into bootloader mode."},{"type":"method","name":"device_add","type_name":"Plugin","ident":"fu_plugin_device_add","summary":"Asks the daemon to add a device to the ..."},{"type":"method","name":"device_added","type_name":"Backend","ident":"fu_backend_device_added","summary":"Emits a signal that indicates the device has been added."},{"type":"method","name":"device_changed","type_name":"Backend","ident":"fu_backend_device_changed","summary":"Emits a signal that indicates the device has been changed."},{"type":"method","name":"device_register","type_name":"Plugin","ident":"fu_plugin_device_register","summary":"Registers the device with other plugins so they can ..."},{"type":"method","name":"device_remove","type_name":"Plugin","ident":"fu_plugin_device_remove","summary":"Asks the daemon to remove a device from the ..."},{"type":"method","name":"device_removed","type_name":"Backend","ident":"fu_backend_device_removed","summary":"Emits a signal that indicates the device has been removed."},{"type":"method","name":"dump_firmware","type_name":"Device","ident":"fu_device_dump_firmware","summary":"Reads the raw firmware image from the device by ..."},{"type":"method","name":"emit_changed","type_name":"UdevDevice","ident":"fu_udev_device_emit_changed","summary":"Emits the ::changed signal for the object."},{"type":"method","name":"emit_request","type_name":"Device","ident":"fu_device_emit_request","summary":"Emit a request from a plugin to the client."},{"type":"method","name":"ensure_id","type_name":"Device","ident":"fu_device_ensure_id","summary":"If not already set, generates a device ID with ..."},{"type":"method","name":"export","type_name":"Cabinet","ident":"fu_cabinet_export","summary":"Exports the cabinet archive."},{"type":"method","name":"export","type_name":"Firmware","ident":"fu_firmware_export","summary":"This allows us to build an XML object for ..."},{"type":"method","name":"export_to_xml","type_name":"Firmware","ident":"fu_firmware_export_to_xml","summary":"This allows us to build an XML object for ..."},{"type":"method","name":"find_udev_device","type_name":"UsbDevice","ident":"fu_usb_device_find_udev_device","summary":"Gets the matching #GUdevDevice for the #GUsbDevice."},{"type":"method","name":"get_access","type_name":"IfdImage","ident":"fu_ifd_image_get_access","summary":"Gets the access control for a specific reason."},{"type":"method","name":"get_addr","type_name":"Firmware","ident":"fu_firmware_get_addr","summary":"Gets the base address of the image."},{"type":"method","name":"get_address","type_name":"Chunk","ident":"fu_chunk_get_address","summary":"Gets the address of the chunk."},{"type":"method","name":"get_alignment","type_name":"Firmware","ident":"fu_firmware_get_alignment","summary":"Gets the alignment of the firmware.  This allows ..."},{"type":"method","name":"get_all","type_name":"SecurityAttrs","ident":"fu_security_attrs_get_all","summary":"Gets all the attributes in the object."},{"type":"method","name":"get_alternate","type_name":"Device","ident":"fu_device_get_alternate","summary":"Gets any alternate device. An alternate device may be ..."},{"type":"method","name":"get_alternate_id","type_name":"Device","ident":"fu_device_get_alternate_id","summary":"Gets any alternate device ID. An alternate device may ..."},{"type":"method","name":"get_backend_id","type_name":"Device","ident":"fu_device_get_backend_id","summary":"Gets the ID set for the device as recognized ..."},{"type":"method","name":"get_battery_level","type_name":"Context","ident":"fu_context_get_battery_level","summary":"Gets the system battery level in percent."},{"type":"method","name":"get_battery_level","type_name":"Device","ident":"fu_device_get_battery_level","summary":"Returns the battery level."},{"type":"method","name":"get_battery_state","type_name":"Context","ident":"fu_context_get_battery_state","summary":"Gets if the system is on battery power, e.g. ..."},{"type":"method","name":"get_battery_threshold","type_name":"Context","ident":"fu_context_get_battery_threshold","summary":"Gets the system battery threshold in percent."},{"type":"method","name":"get_battery_threshold","type_name":"Device","ident":"fu_device_get_battery_threshold","summary":"Returns the battery threshold under which a firmware update ..."},{"type":"method","name":"get_build_hash","type_name":"Plugin","ident":"fu_plugin_get_build_hash","summary":"Gets the build hash a plugin was generated with."},{"type":"method","name":"get_bus_number","type_name":"I2cDevice","ident":"fu_i2c_device_get_bus_number","summary":"Gets the I\u00b2C bus number."},{"type":"method","name":"get_bytes","type_name":"Chunk","ident":"fu_chunk_get_bytes","summary":"Gets the data of the chunk."},{"type":"method","name":"get_bytes","type_name":"Firmware","ident":"fu_firmware_get_bytes","summary":"Gets the firmware payload, which does not have any ..."},{"type":"method","name":"get_checksum","type_name":"Firmware","ident":"fu_firmware_get_checksum","summary":"Returns a checksum of the payload data."},{"type":"method","name":"get_children","type_name":"Device","ident":"fu_device_get_children","summary":"Gets any child devices. A child device is logically ..."},{"type":"method","name":"get_children_with_subsystem","type_name":"UdevDevice","ident":"fu_udev_device_get_children_with_subsystem","summary":"Get a list of devices that are children of ..."},{"type":"method","name":"get_chunks","type_name":"Firmware","ident":"fu_firmware_get_chunks","summary":"Gets the optional image chunks."},{"type":"method","name":"get_config_value","type_name":"Plugin","ident":"fu_plugin_get_config_value","summary":"Return the value of a key if it's been configured"},{"type":"method","name":"get_config_value_boolean","type_name":"Plugin","ident":"fu_plugin_get_config_value_boolean","summary":"Return the boolean value of a key if it's ..."},{"type":"method","name":"get_context","type_name":"Backend","ident":"fu_backend_get_context","summary":"Gets the context for a backend."},{"type":"method","name":"get_context","type_name":"Device","ident":"fu_device_get_context","summary":"Gets the context assigned for this device."},{"type":"method","name":"get_context","type_name":"Plugin","ident":"fu_plugin_get_context","summary":"Gets the context for a plugin."},{"type":"method","name":"get_custom_flags","type_name":"Device","ident":"fu_device_get_custom_flags","summary":"Gets the custom flags for the device from the ..."},{"type":"method","name":"get_data","type_name":"Chunk","ident":"fu_chunk_get_data","summary":"Gets the data of the chunk."},{"type":"method","name":"get_data","type_name":"Plugin","ident":"fu_plugin_get_data","summary":"Gets the per-plugin allocated private data. This will return ..."},{"type":"method","name":"get_data","type_name":"Smbios","ident":"fu_smbios_get_data","summary":"Reads a SMBIOS data blob, which includes the SMBIOS ..."},{"type":"method","name":"get_data_out","type_name":"Chunk","ident":"fu_chunk_get_data_out","summary":"Gets the mutable data of the chunk.  WARNING: ..."},{"type":"method","name":"get_data_sz","type_name":"Chunk","ident":"fu_chunk_get_data_sz","summary":"Gets the data size of the chunk."},{"type":"method","name":"get_dev","type_name":"UdevDevice","ident":"fu_udev_device_get_dev","summary":"Gets the #GUdevDevice."},{"type":"method","name":"get_dev","type_name":"UsbDevice","ident":"fu_usb_device_get_dev","summary":"Gets the #GUsbDevice."},{"type":"method","name":"get_device_file","type_name":"UdevDevice","ident":"fu_udev_device_get_device_file","summary":"Gets the device node."},{"type":"method","name":"get_devices","type_name":"Backend","ident":"fu_backend_get_devices","summary":"Gets all the devices added by the backend."},{"type":"method","name":"get_devices","type_name":"Plugin","ident":"fu_plugin_get_devices","summary":"Returns all devices added by the plugin using fu_plugin_device_add() ..."},{"type":"method","name":"get_devtype","type_name":"UdevDevice","ident":"fu_udev_device_get_devtype","summary":"Returns the Udev device type"},{"type":"method","name":"get_driver","type_name":"UdevDevice","ident":"fu_udev_device_get_driver","summary":"Gets the device driver, e.g. `psmouse`."},{"type":"method","name":"get_enabled","type_name":"Backend","ident":"fu_backend_get_enabled","summary":"Return the boolean value of a key if it's ..."},{"type":"method","name":"get_equivalent_id","type_name":"Device","ident":"fu_device_get_equivalent_id","summary":"Gets any equivalent ID for a device"},{"type":"method","name":"get_fd","type_name":"UdevDevice","ident":"fu_udev_device_get_fd","summary":"Gets the file descriptor if the device is open."},{"type":"method","name":"get_file","type_name":"Cabinet","ident":"fu_cabinet_get_file","summary":"Gets a file from the archive."},{"type":"method","name":"get_filename","type_name":"Firmware","ident":"fu_firmware_get_filename","summary":"Gets an optional filename that represents the image source ..."},{"type":"method","name":"get_firmware_gtype_by_id","type_name":"Context","ident":"fu_context_get_firmware_gtype_by_id","summary":"Returns the #GType using the firmware @id."},{"type":"method","name":"get_firmware_gtype_ids","type_name":"Context","ident":"fu_context_get_firmware_gtype_ids","summary":"Returns all the firmware #GType IDs."},{"type":"method","name":"get_firmware_size_max","type_name":"Device","ident":"fu_device_get_firmware_size_max","summary":"Gets the maximum size of the firmware blob."},{"type":"method","name":"get_firmware_size_min","type_name":"Device","ident":"fu_device_get_firmware_size_min","summary":"Gets the minimum size of the firmware blob."},{"type":"method","name":"get_guid","type_name":"Hwids","ident":"fu_hwids_get_guid","summary":"Gets the GUID for a specific key."},{"type":"method","name":"get_guids","type_name":"Hwids","ident":"fu_hwids_get_guids","summary":"Returns all the defined HWIDs"},{"type":"method","name":"get_guids_as_str","type_name":"Device","ident":"fu_device_get_guids_as_str","summary":"Gets the device GUIDs as a joined string, which ..."},{"type":"method","name":"get_hwid_guids","type_name":"Context","ident":"fu_context_get_hwid_guids","summary":"Returns all the HWIDs defined in the system. All ..."},{"type":"method","name":"get_hwid_replace_value","type_name":"Context","ident":"fu_context_get_hwid_replace_value","summary":"Gets the replacement value for a specific key. All ..."},{"type":"method","name":"get_hwid_value","type_name":"Context","ident":"fu_context_get_hwid_value","summary":"Gets the cached value for one specific key that ..."},{"type":"method","name":"get_id","type_name":"Firmware","ident":"fu_firmware_get_id","summary":"Gets the image ID, typically set at construction."},{"type":"method","name":"get_id","type_name":"Volume","ident":"fu_volume_get_id","summary":"Gets the D-Bus path of the mount point."},{"type":"method","name":"get_id_type","type_name":"Volume","ident":"fu_volume_get_id_type","summary":"Return the IdType of the volume"},{"type":"method","name":"get_idx","type_name":"Chunk","ident":"fu_chunk_get_idx","summary":"Gets the index of the chunk."},{"type":"method","name":"get_idx","type_name":"Firmware","ident":"fu_firmware_get_idx","summary":"Gets the index of the image which is used ..."},{"type":"method","name":"get_image_by_checksum","type_name":"Firmware","ident":"fu_firmware_get_image_by_checksum","summary":"Gets the firmware image using the image checksum. The ..."},{"type":"method","name":"get_image_by_id","type_name":"Firmware","ident":"fu_firmware_get_image_by_id","summary":"Gets the firmware image using the image ID."},{"type":"method","name":"get_image_by_id_bytes","type_name":"Firmware","ident":"fu_firmware_get_image_by_id_bytes","summary":"Gets the firmware image bytes using the image ID."},{"type":"method","name":"get_image_by_idx","type_name":"Firmware","ident":"fu_firmware_get_image_by_idx","summary":"Gets the firmware image using the image index."},{"type":"method","name":"get_image_by_idx_bytes","type_name":"Firmware","ident":"fu_firmware_get_image_by_idx_bytes","summary":"Gets the firmware image bytes using the image index."},{"type":"method","name":"get_images","type_name":"Firmware","ident":"fu_firmware_get_images","summary":"Returns all the images in the firmware."},{"type":"method","name":"get_integer","type_name":"Smbios","ident":"fu_smbios_get_integer","summary":"Reads an integer value from the SMBIOS string table ..."},{"type":"method","name":"get_interface","type_name":"HidDevice","ident":"fu_hid_device_get_interface","summary":"Gets the HID USB interface number."},{"type":"method","name":"get_keys","type_name":"Hwids","ident":"fu_hwids_get_keys","summary":"Returns all the defined HWID keys."},{"type":"method","name":"get_kind","type_name":"EfiSignature","ident":"fu_efi_signature_get_kind","summary":"Returns the signature kind."},{"type":"method","name":"get_logical_id","type_name":"Device","ident":"fu_device_get_logical_id","summary":"Gets the logical ID set for the device, which ..."},{"type":"method","name":"get_metadata","type_name":"Device","ident":"fu_device_get_metadata","summary":"Gets an item of metadata from the device."},{"type":"method","name":"get_metadata_boolean","type_name":"Device","ident":"fu_device_get_metadata_boolean","summary":"Gets an item of metadata from the device."},{"type":"method","name":"get_metadata_integer","type_name":"Device","ident":"fu_device_get_metadata_integer","summary":"Gets an item of metadata from the device."},{"type":"method","name":"get_model","type_name":"UdevDevice","ident":"fu_udev_device_get_model","summary":"Gets the device device code."},{"type":"method","name":"get_mount_point","type_name":"Volume","ident":"fu_volume_get_mount_point","summary":"Gets the location of the volume mount point."},{"type":"method","name":"get_name","type_name":"Backend","ident":"fu_backend_get_name","summary":"Return the name of the backend, which is normally ..."},{"type":"method","name":"get_name","type_name":"Plugin","ident":"fu_plugin_get_name","summary":"Gets the plugin name."},{"type":"method","name":"get_number","type_name":"UdevDevice","ident":"fu_udev_device_get_number","summary":"Gets the device number, if any."},{"type":"method","name":"get_offset","type_name":"Firmware","ident":"fu_firmware_get_offset","summary":"Gets the base offset of the image."},{"type":"method","name":"get_order","type_name":"Device","ident":"fu_device_get_order","summary":"Gets the device order, where higher numbers are installed ..."},{"type":"method","name":"get_order","type_name":"Plugin","ident":"fu_plugin_get_order","summary":"Gets the plugin order, where higher numbers are run ..."},{"type":"method","name":"get_owner","type_name":"EfiSignature","ident":"fu_efi_signature_get_owner","summary":"Returns the GUID of the signature owner."},{"type":"method","name":"get_page","type_name":"Chunk","ident":"fu_chunk_get_page","summary":"Gets the page of the chunk."},{"type":"method","name":"get_parent","type_name":"Device","ident":"fu_device_get_parent","summary":"Gets any parent device. An parent device is logically ..."},{"type":"method","name":"get_parent_guids","type_name":"Device","ident":"fu_device_get_parent_guids","summary":"Gets any parent device GUIDs. If a device is ..."},{"type":"method","name":"get_parent_name","type_name":"UdevDevice","ident":"fu_udev_device_get_parent_name","summary":"Returns the name of the direct ancestor of this device"},{"type":"method","name":"get_parent_physical_ids","type_name":"Device","ident":"fu_device_get_parent_physical_ids","summary":"Gets any parent device IDs. If a device is ..."},{"type":"method","name":"get_physical_id","type_name":"Device","ident":"fu_device_get_physical_id","summary":"Gets the physical ID set for the device, which ..."},{"type":"method","name":"get_pid","type_name":"DfuFirmware","ident":"fu_dfu_firmware_get_pid","summary":"Gets the product ID, or 0xffff for no restriction."},{"type":"method","name":"get_pid","type_name":"UsbDevice","ident":"fu_usb_device_get_pid","summary":"Gets the device product code."},{"type":"method","name":"get_platform_id","type_name":"UsbDevice","ident":"fu_usb_device_get_platform_id","summary":"Gets the device platform ID."},{"type":"method","name":"get_possible_plugins","type_name":"Device","ident":"fu_device_get_possible_plugins","summary":"Gets the list of possible plugin names, typically added ..."},{"type":"method","name":"get_priority","type_name":"Device","ident":"fu_device_get_priority","summary":"Gets the device priority, where higher numbers are better."},{"type":"method","name":"get_priority","type_name":"Plugin","ident":"fu_plugin_get_priority","summary":"Gets the plugin priority, where higher numbers are better."},{"type":"method","name":"get_private_flags","type_name":"Device","ident":"fu_device_get_private_flags","summary":"Returns all the private flags that can be used ..."},{"type":"method","name":"get_progress","type_name":"Device","ident":"fu_device_get_progress","summary":"Returns the progress completion."},{"type":"method","name":"get_proxy","type_name":"Device","ident":"fu_device_get_proxy","summary":"Gets any proxy device. A proxy device can be ..."},{"type":"method","name":"get_proxy_guid","type_name":"Device","ident":"fu_device_get_proxy_guid","summary":"Gets the proxy GUID device, which which is set ..."},{"type":"method","name":"get_proxy_with_fallback","type_name":"Device","ident":"fu_device_get_proxy_with_fallback","summary":"Gets the proxy device, falling back to the device itself."},{"type":"method","name":"get_records","type_name":"IhexFirmware","ident":"fu_ihex_firmware_get_records","summary":"Returns the raw lines from tokenization.  This might ..."},{"type":"method","name":"get_records","type_name":"SrecFirmware","ident":"fu_srec_firmware_get_records","summary":"Returns the raw records from SREC tokenization.  This ..."},{"type":"method","name":"get_release","type_name":"DfuFirmware","ident":"fu_dfu_firmware_get_release","summary":"Gets the device ID, or 0xffff for no restriction."},{"type":"method","name":"get_release_default","type_name":"Device","ident":"fu_device_get_release_default","summary":"Gets the default release for the device, creating one ..."},{"type":"method","name":"get_remove_delay","type_name":"Device","ident":"fu_device_get_remove_delay","summary":"Returns the maximum delay expected when replugging the device ..."},{"type":"method","name":"get_replace_keys","type_name":"Hwids","ident":"fu_hwids_get_replace_keys","summary":"Gets the replacement key for a well known value."},{"type":"method","name":"get_replace_values","type_name":"Hwids","ident":"fu_hwids_get_replace_values","summary":"Gets the replacement values for a HardwareID key or ..."},{"type":"method","name":"get_report","type_name":"HidDevice","ident":"fu_hid_device_get_report","summary":"Calls GetReport on the hardware."},{"type":"method","name":"get_report_metadata","type_name":"Plugin","ident":"fu_plugin_get_report_metadata","summary":"Returns the list of additional metadata to be added ..."},{"type":"method","name":"get_request_cnt","type_name":"Device","ident":"fu_device_get_request_cnt","summary":"Returns the number of requests of a specific kind. ..."},{"type":"method","name":"get_results","type_name":"Device","ident":"fu_device_get_results","summary":"Gets the results of the last update operation on ..."},{"type":"method","name":"get_revision","type_name":"UdevDevice","ident":"fu_udev_device_get_revision","summary":"Gets the device revision."},{"type":"method","name":"get_root","type_name":"Device","ident":"fu_device_get_root","summary":"Gets the root parent device. A parent device is ..."},{"type":"method","name":"get_rules","type_name":"Plugin","ident":"fu_plugin_get_rules","summary":"Gets the plugin IDs that should be run after ..."},{"type":"method","name":"get_siblings_with_subsystem","type_name":"UdevDevice","ident":"fu_udev_device_get_siblings_with_subsystem","summary":"Get a list of devices that are siblings of ..."},{"type":"method","name":"get_silo","type_name":"Cabinet","ident":"fu_cabinet_get_silo","summary":"Gets the silo that represents the superset metadata of ..."},{"type":"method","name":"get_size","type_name":"Firmware","ident":"fu_firmware_get_size","summary":"Gets the total size of the image, which is ..."},{"type":"method","name":"get_slot_depth","type_name":"UdevDevice","ident":"fu_udev_device_get_slot_depth","summary":"Determine how far up a chain a given device is"},{"type":"method","name":"get_smbios_data","type_name":"Context","ident":"fu_context_get_smbios_data","summary":"Gets a hardware SMBIOS data."},{"type":"method","name":"get_smbios_integer","type_name":"Context","ident":"fu_context_get_smbios_integer","summary":"Reads an integer value from the SMBIOS string table ..."},{"type":"method","name":"get_smbios_string","type_name":"Context","ident":"fu_context_get_smbios_string","summary":"Gets a hardware SMBIOS string.  The @type and ..."},{"type":"method","name":"get_spec","type_name":"UsbDevice","ident":"fu_usb_device_get_spec","summary":"Gets the string USB revision for the device."},{"type":"method","name":"get_specialized_gtype","type_name":"Device","ident":"fu_device_get_specialized_gtype","summary":"Gets the specialized type of the device"},{"type":"method","name":"get_status","type_name":"Device","ident":"fu_device_get_status","summary":"Returns what the device is currently doing."},{"type":"method","name":"get_string","type_name":"Smbios","ident":"fu_smbios_get_string","summary":"Reads a string from the SMBIOS string table of ..."},{"type":"method","name":"get_subsystem","type_name":"UdevDevice","ident":"fu_udev_device_get_subsystem","summary":"Gets the device subsystem, e.g. `pci`"},{"type":"method","name":"get_subsystem_model","type_name":"UdevDevice","ident":"fu_udev_device_get_subsystem_model","summary":"Gets the device subsystem model code."},{"type":"method","name":"get_subsystem_vendor","type_name":"UdevDevice","ident":"fu_udev_device_get_subsystem_vendor","summary":"Gets the device subsystem vendor code."},{"type":"method","name":"get_sysfs_attr","type_name":"UdevDevice","ident":"fu_udev_device_get_sysfs_attr","summary":"Reads an arbitrary sysfs attribute 'attr' associated with UDEV device"},{"type":"method","name":"get_sysfs_path","type_name":"UdevDevice","ident":"fu_udev_device_get_sysfs_path","summary":"Gets the device sysfs path, e.g. `/sys/devices/pci0000:00/0000:00:14.0`."},{"type":"method","name":"get_udev_subsystems","type_name":"Context","ident":"fu_context_get_udev_subsystems","summary":"Gets the udev subsystems required by all plugins."},{"type":"method","name":"get_value","type_name":"Hwids","ident":"fu_hwids_get_value","summary":"Gets the cached value for one specific key that ..."},{"type":"method","name":"get_vendor","type_name":"UdevDevice","ident":"fu_udev_device_get_vendor","summary":"Gets the device vendor code."},{"type":"method","name":"get_version","type_name":"DfuFirmware","ident":"fu_dfu_firmware_get_version","summary":"Gets the file format version with is 0x0100 by default."},{"type":"method","name":"get_version","type_name":"Firmware","ident":"fu_firmware_get_version","summary":"Gets an optional version that represents the firmware."},{"type":"method","name":"get_version_raw","type_name":"Firmware","ident":"fu_firmware_get_version_raw","summary":"Gets an raw version that represents the firmware. This ..."},{"type":"method","name":"get_vid","type_name":"DfuFirmware","ident":"fu_dfu_firmware_get_vid","summary":"Gets the vendor ID, or 0xffff for no restriction."},{"type":"method","name":"get_vid","type_name":"UsbDevice","ident":"fu_usb_device_get_vid","summary":"Gets the device vendor code."},{"type":"method","name":"has_custom_flag","type_name":"Device","ident":"fu_device_has_custom_flag","summary":"Checks if the custom flag exists for the device ..."},{"type":"method","name":"has_custom_flag","type_name":"Plugin","ident":"fu_plugin_has_custom_flag","summary":"Returns if a per-plugin HwId custom flag exists, typically ..."},{"type":"method","name":"has_flag","type_name":"Firmware","ident":"fu_firmware_has_flag","summary":"Finds if the firmware has a specific firmware flag."},{"type":"method","name":"has_guid","type_name":"Device","ident":"fu_device_has_guid","summary":"Finds out if the device has a specific GUID."},{"type":"method","name":"has_guid","type_name":"Hwids","ident":"fu_hwids_has_guid","summary":"Finds out if a hardware GUID exists."},{"type":"method","name":"has_hwid_guid","type_name":"Context","ident":"fu_context_has_hwid_guid","summary":"Finds out if a hardware GUID exists."},{"type":"method","name":"has_internal_flag","type_name":"Device","ident":"fu_device_has_internal_flag","summary":"Tests for a private flag that stays internal to ..."},{"type":"method","name":"has_parent_guid","type_name":"Device","ident":"fu_device_has_parent_guid","summary":"Searches the list of parent GUIDs for a string match."},{"type":"method","name":"has_parent_physical_id","type_name":"Device","ident":"fu_device_has_parent_physical_id","summary":"Searches the list of parent IDs for a string match."},{"type":"method","name":"has_private_flag","type_name":"Device","ident":"fu_device_has_private_flag","summary":"Tests for a private flag that can be used ..."},{"type":"method","name":"has_rule","type_name":"Plugin","ident":"fu_plugin_has_rule","summary":"Gets the plugin IDs that should be run after ..."},{"type":"method","name":"incorporate","type_name":"Device","ident":"fu_device_incorporate","summary":"Copy all properties from the donor object if they ..."},{"type":"method","name":"incorporate_flag","type_name":"Device","ident":"fu_device_incorporate_flag","summary":"Copy the value of a specific flag from the ..."},{"type":"method","name":"incorporate_from_component","type_name":"Device","ident":"fu_device_incorporate_from_component","summary":"Copy all properties from the donor AppStream component."},{"type":"method","name":"inhibit","type_name":"Device","ident":"fu_device_inhibit","summary":"Prevent the device from being updated, changing it from ..."},{"type":"method","name":"ioctl","type_name":"UdevDevice","ident":"fu_udev_device_ioctl","summary":"Control a device using a low-level request."},{"type":"method","name":"is_encrypted","type_name":"Volume","ident":"fu_volume_is_encrypted","summary":"Checks if the VOLUME is currently encrypted."},{"type":"method","name":"is_internal","type_name":"Volume","ident":"fu_volume_is_internal","summary":"Guesses if the drive is internal to the system"},{"type":"method","name":"is_mounted","type_name":"Volume","ident":"fu_volume_is_mounted","summary":"Checks if the VOLUME is already mounted."},{"type":"method","name":"is_open","type_name":"Plugin","ident":"fu_plugin_is_open","summary":"Determines if the plugin is opened"},{"type":"method","name":"is_open","type_name":"UsbDevice","ident":"fu_usb_device_is_open","summary":"Finds out if a USB device is currently open."},{"type":"method","name":"iterate","type_name":"Archive","ident":"fu_archive_iterate","summary":"Iterates over the archive contents, calling the given function ..."},{"type":"method","name":"load","type_name":"Quirks","ident":"fu_quirks_load","summary":"Loads the various files that define the hardware quirks ..."},{"type":"method","name":"load_hwinfo","type_name":"Context","ident":"fu_context_load_hwinfo","summary":"Loads all hardware information parts of the context."},{"type":"method","name":"load_quirks","type_name":"Context","ident":"fu_context_load_quirks","summary":"Loads all quirks into the context."},{"type":"method","name":"locker","type_name":"Volume","ident":"fu_volume_locker","summary":"Locks the volume, mounting it and unmounting it as ..."},{"type":"method","name":"lookup_by_fn","type_name":"Archive","ident":"fu_archive_lookup_by_fn","summary":"Finds the blob referenced by filename"},{"type":"method","name":"lookup_by_id","type_name":"Backend","ident":"fu_backend_lookup_by_id","summary":"Gets a device previously added by the backend."},{"type":"method","name":"lookup_by_id","type_name":"Quirks","ident":"fu_quirks_lookup_by_id","summary":"Looks up an entry in the hardware database using ..."},{"type":"method","name":"lookup_by_id_iter","type_name":"Quirks","ident":"fu_quirks_lookup_by_id_iter","summary":"Looks up all entries in the hardware database using ..."},{"type":"method","name":"lookup_quirk_by_id","type_name":"Context","ident":"fu_context_lookup_quirk_by_id","summary":"Looks up an entry in the hardware database using ..."},{"type":"method","name":"lookup_quirk_by_id_iter","type_name":"Context","ident":"fu_context_lookup_quirk_by_id_iter","summary":"Looks up all entries in the hardware database using ..."},{"type":"method","name":"mount","type_name":"Volume","ident":"fu_volume_mount","summary":"Mounts the VOLUME ready for use."},{"type":"method","name":"name_compare","type_name":"Plugin","ident":"fu_plugin_name_compare","summary":"Compares two plugins by their names."},{"type":"method","name":"notify_start","type_name":"BluezDevice","ident":"fu_bluez_device_notify_start","summary":"Enables notifications for property changes in a UUID (StartNotify method)."},{"type":"method","name":"notify_stop","type_name":"BluezDevice","ident":"fu_bluez_device_notify_stop","summary":"Disables notifications for property changes in a UUID (StopNotify method)."},{"type":"method","name":"open","type_name":"Device","ident":"fu_device_open","summary":"Opens a device, optionally running a object-specific vfunc.  ..."},{"type":"method","name":"open","type_name":"Plugin","ident":"fu_plugin_open","summary":"Opens the plugin module"},{"type":"method","name":"order_compare","type_name":"Plugin","ident":"fu_plugin_order_compare","summary":"Compares two plugins by their depsolved order."},{"type":"method","name":"parse","type_name":"Cabinet","ident":"fu_cabinet_parse","summary":"Parses the cabinet archive."},{"type":"method","name":"parse","type_name":"Firmware","ident":"fu_firmware_parse","summary":"Parses a firmware, typically breaking the firmware into images."},{"type":"method","name":"parse_file","type_name":"Firmware","ident":"fu_firmware_parse_file","summary":"Parses a firmware file, typically breaking the firmware into images."},{"type":"method","name":"parse_full","type_name":"Firmware","ident":"fu_firmware_parse_full","summary":"Parses a firmware, typically breaking the firmware into images."},{"type":"method","name":"poll","type_name":"Device","ident":"fu_device_poll","summary":"Polls a device, typically querying the hardware for status."},{"type":"method","name":"pread","type_name":"UdevDevice","ident":"fu_udev_device_pread","summary":"Read from a file descriptor at a given offset."},{"type":"method","name":"pread_full","type_name":"UdevDevice","ident":"fu_udev_device_pread_full","summary":"Read a buffer from a file descriptor at a ..."},{"type":"method","name":"prepare","type_name":"Device","ident":"fu_device_prepare","summary":"Prepares a device for update. A different plugin can ..."},{"type":"method","name":"prepare_firmware","type_name":"Device","ident":"fu_device_prepare_firmware","summary":"Prepares the firmware by calling an optional device-specific vfunc ..."},{"type":"method","name":"probe","type_name":"Device","ident":"fu_device_probe","summary":"Probes a device, setting parameters on the object that ..."},{"type":"method","name":"probe_invalidate","type_name":"Device","ident":"fu_device_probe_invalidate","summary":"Normally when calling fu_device_probe() multiple times it is only ..."},{"type":"method","name":"pwrite","type_name":"UdevDevice","ident":"fu_udev_device_pwrite","summary":"Write to a file descriptor at a given offset."},{"type":"method","name":"pwrite_full","type_name":"UdevDevice","ident":"fu_udev_device_pwrite_full","summary":"Write a buffer to a file descriptor at a ..."},{"type":"method","name":"read","type_name":"BluezDevice","ident":"fu_bluez_device_read","summary":"Reads from a UUID on the device."},{"type":"method","name":"read","type_name":"I2cDevice","ident":"fu_i2c_device_read","summary":"Read a single byte from the I\u00b2C device."},{"type":"method","name":"read_byte_array","type_name":"IOChannel","ident":"fu_io_channel_read_byte_array","summary":"Reads bytes from the TTY, that will fail if ..."},{"type":"method","name":"read_bytes","type_name":"IOChannel","ident":"fu_io_channel_read_bytes","summary":"Reads bytes from the TTY, that will fail if ..."},{"type":"method","name":"read_firmware","type_name":"Device","ident":"fu_device_read_firmware","summary":"Reads firmware from the device by calling a plugin-specific ..."},{"type":"method","name":"read_full","type_name":"I2cDevice","ident":"fu_i2c_device_read_full","summary":"Read multiple bytes from the I\u00b2C device."},{"type":"method","name":"read_raw","type_name":"IOChannel","ident":"fu_io_channel_read_raw","summary":"Reads bytes from the TTY, that will fail if ..."},{"type":"method","name":"read_string","type_name":"BluezDevice","ident":"fu_bluez_device_read_string","summary":"Reads a string from a UUID on the device."},{"type":"method","name":"register_private_flag","type_name":"Device","ident":"fu_device_register_private_flag","summary":"Registers a private device flag so that it can ..."},{"type":"method","name":"reload","type_name":"Device","ident":"fu_device_reload","summary":"Reloads a device that has just gone from bootloader ..."},{"type":"method","name":"remove_all","type_name":"SecurityAttrs","ident":"fu_security_attrs_remove_all","summary":"Removes all the attributes in the object."},{"type":"method","name":"remove_child","type_name":"Device","ident":"fu_device_remove_child","summary":"Removes child device."},{"type":"method","name":"remove_flag","type_name":"Device","ident":"fu_device_remove_flag","summary":"Removes a device flag from the device."},{"type":"method","name":"remove_image","type_name":"Firmware","ident":"fu_firmware_remove_image","summary":"Remove an image from the firmware."},{"type":"method","name":"remove_image_by_id","type_name":"Firmware","ident":"fu_firmware_remove_image_by_id","summary":"Removes the first image from the firmware matching the ID."},{"type":"method","name":"remove_image_by_idx","type_name":"Firmware","ident":"fu_firmware_remove_image_by_idx","summary":"Removes the first image from the firmware matching the index."},{"type":"method","name":"remove_internal_flag","type_name":"Device","ident":"fu_device_remove_internal_flag","summary":"Removes a private flag that stays internal to the ..."},{"type":"method","name":"remove_metadata","type_name":"Device","ident":"fu_device_remove_metadata","summary":"Removes an item of metadata on the device."},{"type":"method","name":"remove_private_flag","type_name":"Device","ident":"fu_device_remove_private_flag","summary":"Removes a private flag that can be used by ..."},{"type":"method","name":"report_metadata_post","type_name":"Device","ident":"fu_device_report_metadata_post","summary":"Collects metadata that would be useful for debugging a ..."},{"type":"method","name":"report_metadata_pre","type_name":"Device","ident":"fu_device_report_metadata_pre","summary":"Collects metadata that would be useful for debugging a ..."},{"type":"method","name":"rescan","type_name":"Device","ident":"fu_device_rescan","summary":"Rescans a device, re-adding GUIDs or flags based on ..."},{"type":"method","name":"retry","type_name":"Device","ident":"fu_device_retry","summary":"Calls a specific function a number of times, optionally ..."},{"type":"method","name":"retry_add_recovery","type_name":"Device","ident":"fu_device_retry_add_recovery","summary":"Sets the optional function to be called when fu_device_retry() ..."},{"type":"method","name":"retry_full","type_name":"Device","ident":"fu_device_retry_full","summary":"Calls a specific function a number of times, optionally ..."},{"type":"method","name":"retry_set_delay","type_name":"Device","ident":"fu_device_retry_set_delay","summary":"Sets the recovery delay between failed retries."},{"type":"method","name":"runner_activate","type_name":"Plugin","ident":"fu_plugin_runner_activate","summary":"Call into the plugin's activate routine"},{"type":"method","name":"runner_add_security_attrs","type_name":"Plugin","ident":"fu_plugin_runner_add_security_attrs","summary":"Runs the `add_security_attrs()` routine for the plugin"},{"type":"method","name":"runner_backend_device_added","type_name":"Plugin","ident":"fu_plugin_runner_backend_device_added","summary":"Call the backend_device_added routine for the plugin"},{"type":"method","name":"runner_backend_device_changed","type_name":"Plugin","ident":"fu_plugin_runner_backend_device_changed","summary":"Call the backend_device_changed routine for the plugin"},{"type":"method","name":"runner_clear_results","type_name":"Plugin","ident":"fu_plugin_runner_clear_results","summary":"Call into the plugin's clear results routine"},{"type":"method","name":"runner_coldplug","type_name":"Plugin","ident":"fu_plugin_runner_coldplug","summary":"Runs the coldplug routine for the plugin"},{"type":"method","name":"runner_coldplug_cleanup","type_name":"Plugin","ident":"fu_plugin_runner_coldplug_cleanup","summary":"Runs the coldplug_cleanup routine for the plugin"},{"type":"method","name":"runner_coldplug_prepare","type_name":"Plugin","ident":"fu_plugin_runner_coldplug_prepare","summary":"Runs the coldplug_prepare routine for the plugin"},{"type":"method","name":"runner_composite_cleanup","type_name":"Plugin","ident":"fu_plugin_runner_composite_cleanup","summary":"Runs the composite_cleanup routine for the plugin"},{"type":"method","name":"runner_composite_prepare","type_name":"Plugin","ident":"fu_plugin_runner_composite_prepare","summary":"Runs the composite_prepare routine for the plugin"},{"type":"method","name":"runner_device_added","type_name":"Plugin","ident":"fu_plugin_runner_device_added","summary":"Call the device_added routine for the plugin"},{"type":"method","name":"runner_device_created","type_name":"Plugin","ident":"fu_plugin_runner_device_created","summary":"Call the device_created routine for the plugin"},{"type":"method","name":"runner_device_register","type_name":"Plugin","ident":"fu_plugin_runner_device_register","summary":"Call the device_registered routine for the plugin"},{"type":"method","name":"runner_device_removed","type_name":"Plugin","ident":"fu_plugin_runner_device_removed","summary":"Call the device_removed routine for the plugin"},{"type":"method","name":"runner_get_results","type_name":"Plugin","ident":"fu_plugin_runner_get_results","summary":"Call into the plugin's get results routine"},{"type":"method","name":"runner_startup","type_name":"Plugin","ident":"fu_plugin_runner_startup","summary":"Runs the startup routine for the plugin"},{"type":"method","name":"runner_unlock","type_name":"Plugin","ident":"fu_plugin_runner_unlock","summary":"Call into the plugin's unlock routine"},{"type":"method","name":"runner_update","type_name":"Plugin","ident":"fu_plugin_runner_update","summary":"Call into the plugin's update routine"},{"type":"method","name":"runner_update_attach","type_name":"Plugin","ident":"fu_plugin_runner_update_attach","summary":"Runs the update_attach routine for the plugin"},{"type":"method","name":"runner_update_cleanup","type_name":"Plugin","ident":"fu_plugin_runner_update_cleanup","summary":"Runs the update_cleanup routine for the plugin"},{"type":"method","name":"runner_update_detach","type_name":"Plugin","ident":"fu_plugin_runner_update_detach","summary":"Runs the update_detach routine for the plugin"},{"type":"method","name":"runner_update_prepare","type_name":"Plugin","ident":"fu_plugin_runner_update_prepare","summary":"Runs the update_prepare routine for the plugin"},{"type":"method","name":"runner_update_reload","type_name":"Plugin","ident":"fu_plugin_runner_update_reload","summary":"Runs reload routine for a device"},{"type":"method","name":"runner_verify","type_name":"Plugin","ident":"fu_plugin_runner_verify","summary":"Call into the plugin's verify routine"},{"type":"method","name":"security_changed","type_name":"Context","ident":"fu_context_security_changed","summary":"Informs the daemon that the HSI state may have changed."},{"type":"method","name":"set_access","type_name":"IfdImage","ident":"fu_ifd_image_set_access","summary":"Sets the access control for a specific reason."},{"type":"method","name":"set_addr","type_name":"Firmware","ident":"fu_firmware_set_addr","summary":"Sets the base address of the image."},{"type":"method","name":"set_address","type_name":"Chunk","ident":"fu_chunk_set_address","summary":"Sets the address of the chunk."},{"type":"method","name":"set_alignment","type_name":"Firmware","ident":"fu_firmware_set_alignment","summary":"Sets the alignment of the firmware.  This allows ..."},{"type":"method","name":"set_alternate","type_name":"Device","ident":"fu_device_set_alternate","summary":"Sets any alternate device. An alternate device may be ..."},{"type":"method","name":"set_alternate_id","type_name":"Device","ident":"fu_device_set_alternate_id","summary":"Sets any alternate device ID. An alternate device may ..."},{"type":"method","name":"set_backend_id","type_name":"Device","ident":"fu_device_set_backend_id","summary":"Sets the backend ID on the device. This is ..."},{"type":"method","name":"set_battery_level","type_name":"Context","ident":"fu_context_set_battery_level","summary":"Sets the system battery level in percent."},{"type":"method","name":"set_battery_level","type_name":"Device","ident":"fu_device_set_battery_level","summary":"Sets the battery level, or %FU_BATTERY_VALUE_INVALID.  Setting this ..."},{"type":"method","name":"set_battery_state","type_name":"Context","ident":"fu_context_set_battery_state","summary":"Sets if the system is on battery power, e.g. ..."},{"type":"method","name":"set_battery_threshold","type_name":"Context","ident":"fu_context_set_battery_threshold","summary":"Sets the system battery threshold in percent."},{"type":"method","name":"set_battery_threshold","type_name":"Device","ident":"fu_device_set_battery_threshold","summary":"Sets the battery level, or %FU_BATTERY_VALUE_INVALID for the default. ..."},{"type":"method","name":"set_build_hash","type_name":"Plugin","ident":"fu_plugin_set_build_hash","summary":"Sets the plugin build hash, typically a SHA256 checksum. ..."},{"type":"method","name":"set_bus_number","type_name":"I2cDevice","ident":"fu_i2c_device_set_bus_number","summary":"Sets the I\u00b2C bus number."},{"type":"method","name":"set_bytes","type_name":"Chunk","ident":"fu_chunk_set_bytes","summary":"Sets the data to use for the chunk."},{"type":"method","name":"set_bytes","type_name":"Firmware","ident":"fu_firmware_set_bytes","summary":"Sets the contents of the image if not created ..."},{"type":"method","name":"set_compile_versions","type_name":"Context","ident":"fu_context_set_compile_versions","summary":"Sets the compile time versions for a plugin."},{"type":"method","name":"set_context","type_name":"Device","ident":"fu_device_set_context","summary":"Sets the optional context which may be useful to ..."},{"type":"method","name":"set_custom_flags","type_name":"Device","ident":"fu_device_set_custom_flags","summary":"Sets the custom flags from the quirk system that ..."},{"type":"method","name":"set_dev","type_name":"UdevDevice","ident":"fu_udev_device_set_dev","summary":"Sets the #GUdevDevice. This may need to be used ..."},{"type":"method","name":"set_dev","type_name":"UsbDevice","ident":"fu_usb_device_set_dev","summary":"Sets the #GUsbDevice to use."},{"type":"method","name":"set_enabled","type_name":"Backend","ident":"fu_backend_set_enabled","summary":"Sets the backend enabled state."},{"type":"method","name":"set_equivalent_id","type_name":"Device","ident":"fu_device_set_equivalent_id","summary":"Sets any equivalent ID for a device"},{"type":"method","name":"set_fd","type_name":"UdevDevice","ident":"fu_udev_device_set_fd","summary":"Replace the file descriptor to use when the device ..."},{"type":"method","name":"set_filename","type_name":"Firmware","ident":"fu_firmware_set_filename","summary":"Sets an optional filename that represents the image source ..."},{"type":"method","name":"set_firmware_size","type_name":"Device","ident":"fu_device_set_firmware_size","summary":"Sets the exact allowed size of the firmware blob."},{"type":"method","name":"set_firmware_size_max","type_name":"Device","ident":"fu_device_set_firmware_size_max","summary":"Sets the maximum allowed size of the firmware blob."},{"type":"method","name":"set_firmware_size_min","type_name":"Device","ident":"fu_device_set_firmware_size_min","summary":"Sets the minimum allowed size of the firmware blob."},{"type":"method","name":"set_flags","type_name":"UdevDevice","ident":"fu_udev_device_set_flags","summary":"Sets the parameters to use when opening the device. ..."},{"type":"method","name":"set_id","type_name":"Device","ident":"fu_device_set_id","summary":"Sets the ID on the device. The ID should ..."},{"type":"method","name":"set_id","type_name":"Firmware","ident":"fu_firmware_set_id","summary":"No description available."},{"type":"method","name":"set_idx","type_name":"Chunk","ident":"fu_chunk_set_idx","summary":"Sets the index of the chunk."},{"type":"method","name":"set_idx","type_name":"Firmware","ident":"fu_firmware_set_idx","summary":"Sets the index of the image which is used ..."},{"type":"method","name":"set_interface","type_name":"HidDevice","ident":"fu_hid_device_set_interface","summary":"Sets the HID USB interface number.  In most ..."},{"type":"method","name":"set_jcat_context","type_name":"Cabinet","ident":"fu_cabinet_set_jcat_context","summary":"Sets the Jcat context, which is used for setting ..."},{"type":"method","name":"set_logical_id","type_name":"Device","ident":"fu_device_set_logical_id","summary":"Sets the logical ID on the device. This is ..."},{"type":"method","name":"set_logical_id","type_name":"UdevDevice","ident":"fu_udev_device_set_logical_id","summary":"Sets the logical ID from the device subsystem. Plugins ..."},{"type":"method","name":"set_metadata","type_name":"Device","ident":"fu_device_set_metadata","summary":"Sets an item of metadata on the device."},{"type":"method","name":"set_metadata_boolean","type_name":"Device","ident":"fu_device_set_metadata_boolean","summary":"Sets an item of metadata on the device. When ..."},{"type":"method","name":"set_metadata_integer","type_name":"Device","ident":"fu_device_set_metadata_integer","summary":"Sets an item of metadata on the device. The ..."},{"type":"method","name":"set_name","type_name":"Device","ident":"fu_device_set_name","summary":"Sets the name on the device. Any invalid parts ..."},{"type":"method","name":"set_name","type_name":"Plugin","ident":"fu_plugin_set_name","summary":"Sets the plugin name."},{"type":"method","name":"set_offset","type_name":"Firmware","ident":"fu_firmware_set_offset","summary":"Sets the base offset of the image."},{"type":"method","name":"set_order","type_name":"Device","ident":"fu_device_set_order","summary":"Sets the device order, where higher numbers are installed ..."},{"type":"method","name":"set_order","type_name":"Plugin","ident":"fu_plugin_set_order","summary":"Sets the plugin order, where higher numbers are run ..."},{"type":"method","name":"set_padding_value","type_name":"IhexFirmware","ident":"fu_ihex_firmware_set_padding_value","summary":"Set the padding value to fill incomplete address ranges. ..."},{"type":"method","name":"set_page","type_name":"Chunk","ident":"fu_chunk_set_page","summary":"Sets the page of the chunk."},{"type":"method","name":"set_parent","type_name":"Device","ident":"fu_device_set_parent","summary":"Sets any parent device. An parent device is logically ..."},{"type":"method","name":"set_physical_id","type_name":"Device","ident":"fu_device_set_physical_id","summary":"Sets the physical ID on the device which represents ..."},{"type":"method","name":"set_physical_id","type_name":"UdevDevice","ident":"fu_udev_device_set_physical_id","summary":"Sets the physical ID from the device subsystem. Plugins ..."},{"type":"method","name":"set_pid","type_name":"DfuFirmware","ident":"fu_dfu_firmware_set_pid","summary":"Sets the product ID."},{"type":"method","name":"set_poll_interval","type_name":"Device","ident":"fu_device_set_poll_interval","summary":"Polls the hardware every interval period. If the subclassed ..."},{"type":"method","name":"set_priority","type_name":"Device","ident":"fu_device_set_priority","summary":"Sets the device priority, where higher numbers are better."},{"type":"method","name":"set_priority","type_name":"Plugin","ident":"fu_plugin_set_priority","summary":"Sets the plugin priority, where higher numbers are better."},{"type":"method","name":"set_private_flags","type_name":"Device","ident":"fu_device_set_private_flags","summary":"Sets private flags that can be used by the ..."},{"type":"method","name":"set_progress","type_name":"Device","ident":"fu_device_set_progress","summary":"Sets the progress completion."},{"type":"method","name":"set_progress_full","type_name":"Device","ident":"fu_device_set_progress_full","summary":"Sets the progress completion using the raw progress values."},{"type":"method","name":"set_proxy","type_name":"Device","ident":"fu_device_set_proxy","summary":"Sets any proxy device. A proxy device can be ..."},{"type":"method","name":"set_proxy_guid","type_name":"Device","ident":"fu_device_set_proxy_guid","summary":"Sets the GUID of the proxy device. The proxy ..."},{"type":"method","name":"set_readonly","type_name":"UdevDevice","ident":"fu_udev_device_set_readonly","summary":"Sets the open mode to `O_RDONLY` use when opening ..."},{"type":"method","name":"set_release","type_name":"DfuFirmware","ident":"fu_dfu_firmware_set_release","summary":"Sets the release for the dfu firmware."},{"type":"method","name":"set_remove_delay","type_name":"Device","ident":"fu_device_set_remove_delay","summary":"Sets the amount of time a device is allowed ..."},{"type":"method","name":"set_report","type_name":"HidDevice","ident":"fu_hid_device_set_report","summary":"Calls SetReport on the hardware."},{"type":"method","name":"set_runtime_versions","type_name":"Context","ident":"fu_context_set_runtime_versions","summary":"Sets the runtime versions for a plugin."},{"type":"method","name":"set_size","type_name":"Firmware","ident":"fu_firmware_set_size","summary":"Sets the total size of the image, which should ..."},{"type":"method","name":"set_size_max","type_name":"Cabinet","ident":"fu_cabinet_set_size_max","summary":"Sets the maximum size of the decompressed cabinet file."},{"type":"method","name":"set_status","type_name":"Device","ident":"fu_device_set_status","summary":"Sets what the device is currently doing."},{"type":"method","name":"set_update_state","type_name":"Device","ident":"fu_device_set_update_state","summary":"Sets the update state, clearing the update error as required."},{"type":"method","name":"set_vendor","type_name":"Device","ident":"fu_device_set_vendor","summary":"Sets the vendor name on the device."},{"type":"method","name":"set_version","type_name":"Device","ident":"fu_device_set_version","summary":"Sets the device version, sanitizing the string if required."},{"type":"method","name":"set_version","type_name":"DfuFirmware","ident":"fu_dfu_firmware_set_version","summary":"Sets the file format version."},{"type":"method","name":"set_version","type_name":"Firmware","ident":"fu_firmware_set_version","summary":"Sets an optional version that represents the firmware."},{"type":"method","name":"set_version_bootloader","type_name":"Device","ident":"fu_device_set_version_bootloader","summary":"Sets the device bootloader version, sanitizing the string if required."},{"type":"method","name":"set_version_format","type_name":"Device","ident":"fu_device_set_version_format","summary":"Sets the device version format."},{"type":"method","name":"set_version_lowest","type_name":"Device","ident":"fu_device_set_version_lowest","summary":"Sets the device lowest version, sanitizing the string if required."},{"type":"method","name":"set_version_raw","type_name":"Firmware","ident":"fu_firmware_set_version_raw","summary":"Sets an raw version that represents the firmware.  ..."},{"type":"method","name":"set_vid","type_name":"DfuFirmware","ident":"fu_dfu_firmware_set_vid","summary":"Sets the vendor ID."},{"type":"method","name":"setup","type_name":"Backend","ident":"fu_backend_setup","summary":"Sets up the backend ready for use, which typically ..."},{"type":"method","name":"setup","type_name":"Device","ident":"fu_device_setup","summary":"Sets up a device, setting parameters on the object ..."},{"type":"method","name":"setup","type_name":"Hwids","ident":"fu_hwids_setup","summary":"Reads all the SMBIOS values from the hardware."},{"type":"method","name":"setup","type_name":"Smbios","ident":"fu_smbios_setup","summary":"Reads all the SMBIOS values from the hardware."},{"type":"method","name":"setup_from_file","type_name":"Smbios","ident":"fu_smbios_setup_from_file","summary":"Reads all the SMBIOS values from a DMI blob."},{"type":"method","name":"setup_from_kernel","type_name":"Smbios","ident":"fu_smbios_setup_from_kernel","summary":"Reads SMBIOS value from DMI values provided by the ..."},{"type":"method","name":"setup_from_path","type_name":"Smbios","ident":"fu_smbios_setup_from_path","summary":"Reads all the SMBIOS values from a specific path."},{"type":"method","name":"shutdown","type_name":"IOChannel","ident":"fu_io_channel_shutdown","summary":"Closes the file descriptor for the device."},{"type":"method","name":"sign","type_name":"Cabinet","ident":"fu_cabinet_sign","summary":"Sign the cabinet archive using JCat."},{"type":"method","name":"sleep_with_progress","type_name":"Device","ident":"fu_device_sleep_with_progress","summary":"Sleeps, setting the device progress from 0..100% as time ..."},{"type":"method","name":"to_string","type_name":"Chunk","ident":"fu_chunk_to_string","summary":"Converts the chunked packet to a string representation."},{"type":"method","name":"to_string","type_name":"Device","ident":"fu_device_to_string","summary":"This allows us to easily print the device, the ..."},{"type":"method","name":"to_string","type_name":"Firmware","ident":"fu_firmware_to_string","summary":"This allows us to easily print the object."},{"type":"method","name":"to_string","type_name":"Smbios","ident":"fu_smbios_to_string","summary":"Dumps the parsed SMBIOS data to a string."},{"type":"method","name":"to_variant","type_name":"SecurityAttrs","ident":"fu_security_attrs_to_variant","summary":"Serializes the #FwupdSecurityAttr objects."},{"type":"method","name":"tokenize","type_name":"Firmware","ident":"fu_firmware_tokenize","summary":"Tokenizes a firmware, typically breaking the firmware into records. ..."},{"type":"method","name":"unbind_driver","type_name":"Device","ident":"fu_device_unbind_driver","summary":"Unbinds the driver from the device, which normally means ..."},{"type":"method","name":"uninhibit","type_name":"Device","ident":"fu_device_uninhibit","summary":"Allow the device from being updated if there are ..."},{"type":"method","name":"unix_get_fd","type_name":"IOChannel","ident":"fu_io_channel_unix_get_fd","summary":"Gets the file descriptor for the device."},{"type":"method","name":"unmount","type_name":"Volume","ident":"fu_volume_unmount","summary":"Unmounts the volume after use."},{"type":"method","name":"write","type_name":"BluezDevice","ident":"fu_bluez_device_write","summary":"Writes to a UUID on the device."},{"type":"method","name":"write","type_name":"Firmware","ident":"fu_firmware_write","summary":"Writes a firmware, typically packing the images into a ..."},{"type":"method","name":"write","type_name":"I2cDevice","ident":"fu_i2c_device_write","summary":"Write a single byte to the I\u00b2C device."},{"type":"method","name":"write_byte_array","type_name":"IOChannel","ident":"fu_io_channel_write_byte_array","summary":"Writes bytes to the TTY, that will fail if ..."},{"type":"method","name":"write_bytes","type_name":"IOChannel","ident":"fu_io_channel_write_bytes","summary":"Writes bytes to the TTY, that will fail if ..."},{"type":"method","name":"write_chunk","type_name":"Firmware","ident":"fu_firmware_write_chunk","summary":"Gets a block of data from the image. If ..."},{"type":"method","name":"write_file","type_name":"Firmware","ident":"fu_firmware_write_file","summary":"Writes a firmware, typically packing the images into a ..."},{"type":"method","name":"write_firmware","type_name":"Device","ident":"fu_device_write_firmware","summary":"Writes firmware to the device by calling a plugin-specific vfunc."},{"type":"method","name":"write_full","type_name":"I2cDevice","ident":"fu_i2c_device_write_full","summary":"Write multiple bytes to the I\u00b2C device."},{"type":"method","name":"write_raw","type_name":"IOChannel","ident":"fu_io_channel_write_raw","summary":"Writes bytes to the TTY, that will fail if ..."},{"type":"method","name":"write_sysfs","type_name":"UdevDevice","ident":"fu_udev_device_write_sysfs","summary":"Writes data into a sysfs attribute"},{"type":"property","name":"backend-id","type_name":"Device","summary":"No description available."},{"type":"property","name":"battery-level","type_name":"Context","summary":"No description available."},{"type":"property","name":"battery-level","type_name":"Device","summary":"No description available."},{"type":"property","name":"battery-state","type_name":"Context","summary":"No description available."},{"type":"property","name":"battery-threshold","type_name":"Context","summary":"No description available."},{"type":"property","name":"battery-threshold","type_name":"Device","summary":"No description available."},{"type":"property","name":"bus-number","type_name":"I2cDevice","summary":"No description available."},{"type":"property","name":"context","type_name":"Backend","summary":"No description available."},{"type":"property","name":"context","type_name":"Device","summary":"No description available."},{"type":"property","name":"device-file","type_name":"UdevDevice","summary":"No description available."},{"type":"property","name":"driver","type_name":"UdevDevice","summary":"No description available."},{"type":"property","name":"interface","type_name":"HidDevice","summary":"No description available."},{"type":"property","name":"logical-id","type_name":"Device","summary":"No description available."},{"type":"property","name":"mount-path","type_name":"Volume","summary":"No description available."},{"type":"property","name":"name","type_name":"Backend","summary":"No description available."},{"type":"property","name":"object-manager","type_name":"BluezDevice","summary":"No description available."},{"type":"property","name":"parent","type_name":"Device","summary":"No description available."},{"type":"property","name":"physical-id","type_name":"Device","summary":"No description available."},{"type":"property","name":"progress","type_name":"Device","summary":"No description available."},{"type":"property","name":"proxy","type_name":"BluezDevice","summary":"No description available."},{"type":"property","name":"proxy","type_name":"Device","summary":"No description available."},{"type":"property","name":"proxy-block","type_name":"Volume","summary":"No description available."},{"type":"property","name":"proxy-filesystem","type_name":"Volume","summary":"No description available."},{"type":"property","name":"subsystem","type_name":"UdevDevice","summary":"No description available."},{"type":"property","name":"udev-device","type_name":"UdevDevice","summary":"No description available."},{"type":"property","name":"usb-device","type_name":"UsbDevice","summary":"No description available."},{"type":"record","name":"PluginData","ctype":"FuPluginData","summary":"The plugin-allocated private data."},{"type":"signal","name":"changed","type_name":"BluezDevice","summary":"No description available."},{"type":"signal","name":"changed","type_name":"UdevDevice","summary":"No description available."},{"type":"signal","name":"check-supported","type_name":"Plugin","summary":"No description available."},{"type":"signal","name":"child-added","type_name":"Device","summary":"No description available."},{"type":"signal","name":"child-removed","type_name":"Device","summary":"No description available."},{"type":"signal","name":"device-added","type_name":"Backend","summary":"No description available."},{"type":"signal","name":"device-added","type_name":"Plugin","summary":"No description available."},{"type":"signal","name":"device-changed","type_name":"Backend","summary":"No description available."},{"type":"signal","name":"device-register","type_name":"Plugin","summary":"No description available."},{"type":"signal","name":"device-removed","type_name":"Backend","summary":"No description available."},{"type":"signal","name":"device-removed","type_name":"Plugin","summary":"No description available."},{"type":"signal","name":"request","type_name":"Device","summary":"No description available."},{"type":"signal","name":"rules-changed","type_name":"Plugin","summary":"No description available."},{"type":"signal","name":"security-changed","type_name":"Context","summary":"No description available."},{"type":"type_func","name":"array_mutable_new","type_name":"Chunk","ident":"fu_chunk_array_mutable_new","summary":"Chunks a mutable blob of memory into packets, ensuring ..."},{"type":"type_func","name":"array_new","type_name":"Chunk","ident":"fu_chunk_array_new","summary":"Chunks a linear blob of memory into packets, ensuring ..."},{"type":"type_func","name":"array_new_from_bytes","type_name":"Chunk","ident":"fu_chunk_array_new_from_bytes","summary":"Chunks a linear blob of memory into packets, ensuring ..."},{"type":"type_func","name":"array_to_string","type_name":"Chunk","ident":"fu_chunk_array_to_string","summary":"Converts all the chunked packets in an array to ..."},{"type":"type_func","name":"flag_from_string","type_name":"Firmware","ident":"fu_firmware_flag_from_string","summary":"Converts a string to a #FuFirmwareFlags."},{"type":"type_func","name":"flag_to_string","type_name":"Firmware","ident":"fu_firmware_flag_to_string","summary":"Converts a #FuFirmwareFlags to a string."},{"type":"type_func","name":"guess_name_from_fn","type_name":"Plugin","ident":"fu_plugin_guess_name_from_fn","summary":"Tries to guess the name of the plugin from ..."},{"type":"type_func","name":"internal_flag_from_string","type_name":"Device","ident":"fu_device_internal_flag_from_string","summary":"Converts a string to an internal device flag."},{"type":"type_func","name":"internal_flag_to_string","type_name":"Device","ident":"fu_device_internal_flag_to_string","summary":"Converts an internal device flag to a string."},{"type":"type_func","name":"kind_to_string","type_name":"EfiSignature","ident":"fu_efi_signature_kind_to_string","summary":"Converts the signature kind to a text representation."},{"type":"type_func","name":"strparse_uint16_safe","type_name":"Firmware","ident":"fu_firmware_strparse_uint16_safe","summary":"Parses a base 16 number from a string of ..."},{"type":"type_func","name":"strparse_uint24_safe","type_name":"Firmware","ident":"fu_firmware_strparse_uint24_safe","summary":"Parses a base 16 number from a string of ..."},{"type":"type_func","name":"strparse_uint32_safe","type_name":"Firmware","ident":"fu_firmware_strparse_uint32_safe","summary":"Parses a base 16 number from a string of ..."},{"type":"type_func","name":"strparse_uint4_safe","type_name":"Firmware","ident":"fu_firmware_strparse_uint4_safe","summary":"Parses a base 16 number from a string of ..."},{"type":"type_func","name":"strparse_uint8_safe","type_name":"Firmware","ident":"fu_firmware_strparse_uint8_safe","summary":"Parses a base 16 number from a string of ..."},{"type":"vfunc","name":"build","type_name":"Firmware","summary":"Builds a firmware from an XML manifest. The manifest ..."},{"type":"vfunc","name":"check_supported","type_name":"Plugin","summary":"No description available."},{"type":"vfunc","name":"coldplug","type_name":"Backend","summary":"Adds devices using the subclassed backend. If fu_backend_setup() has ..."},{"type":"vfunc","name":"device_added","type_name":"Plugin","summary":"No description available."},{"type":"vfunc","name":"device_register","type_name":"Plugin","summary":"Registers the device with other plugins so they can ..."},{"type":"vfunc","name":"device_removed","type_name":"Plugin","summary":"No description available."},{"type":"vfunc","name":"export","type_name":"Firmware","summary":"This allows us to build an XML object for ..."},{"type":"vfunc","name":"get_checksum","type_name":"Firmware","summary":"Returns a checksum of the payload data."},{"type":"vfunc","name":"parse","type_name":"Firmware","summary":"No description available."},{"type":"vfunc","name":"percentage_changed","type_name":"Plugin","summary":"No description available."},{"type":"vfunc","name":"rules_changed","type_name":"Plugin","summary":"No description available."},{"type":"vfunc","name":"security_changed","type_name":"Context","summary":"Informs the daemon that the HSI state may have changed."},{"type":"vfunc","name":"setup","type_name":"Backend","summary":"Sets up the backend ready for use, which typically ..."},{"type":"vfunc","name":"status_changed","type_name":"Plugin","summary":"No description available."},{"type":"vfunc","name":"tokenize","type_name":"Firmware","summary":"Tokenizes a firmware, typically breaking the firmware into records. ..."},{"type":"vfunc","name":"write","type_name":"Firmware","summary":"Writes a firmware, typically packing the images into a ..."}],"terms":{"":[24,43,52,68,84,85,87,97,98,116,121,128,129,130,136,137,142,146,159,162,167,174,177,186,187,190,192,193,204,205,206,208,211,212,219,226,227,235,246,247,263,264,265,266,267,277,281,285,287,291,293,299,300,301,305,306,319,330,338,340,342,351,355,357,359,364,367,369,378,386,388,395,397,398,410,412,413,414,415,416,421,422,477,482,492,496,499,500,506,508,509,537,547,739,762,765,781,783,785,786,798,810,811,814,816,818,819,839,840,841],"\"0x\"":[802],"\"above\"":[159,174,226],"\"below\"":[147],"\"cascade\"":[121],"\"chids\"":[367],"\"deepest\"":[539],"\"device-firmware\"":[576],"\"illegal_jedec\"":[390],"\"obvious":[781,783,785,786,814,816,818,819,839,840],"\"system-firmware\"":[576],"'attr'":[527],"'best'":[758],"*":[482],"**unless**":[137],"*build-time*":[841],"*connection*":[219],"*might*":[130],"*with*":[811],"-":[811],".d":[482],"/etc":[726],"/etc/fwupd":[726],"/lib/firmwar":[726],"/proc":[726],"/run/lock":[726],"/sys/bus/platform/driv":[726],"/sys/class/dmi":[503],"/sys/class/firmware-attribut":[726],"/sys/class/tpm":[726],"/sys/firmwar":[726],"/sys/kernel/secur":[726],"/sys/module/firmware_class/parameters/path":[726],"/system-upd":[726],"/usr/lib/[triplet]/fwupd-plugins-3":[726],"/usr/libexec/fwupd/efi":[726],"/usr/share/fwupd":[726],"/usr/share/polkit-1/actions/":[726],"/var":[726],"/var/cache/fwupd":[726],"/var/lib/fwupd":[726],"0":[346,347,348,349,350,581,844],"0..100%":[244],"0x":[811],"0x0100":[271],"0x10203":[811],"0xf":[349],"0xff":[350,398,744,746],"0xffff":[269,270,272,346],"0xffffff":[347],"0xffffffff":[348],"1":[349,581,582,619,762],"1.0":[581],"1.1":[582],"10":[8,802,811],"10,000m":[235],"10gbe":[725],"128":[620],"128K":[621],"128M":[622],"16":[346,347,348,349,350,623,724,733,802,807,811],"16K":[624],"16M":[625],"1G":[626],"1K":[627],"1M":[628],"1gb":[840],"2":[305,330,350,629,731,740,762],"20150915":[811],"24":[724],"256":[630],"256K":[631],"256M":[632],"2G":[633],"2K":[634],"2M":[635],"3":[762],"3000m":[235],"32":[577,636,724,734,808],"32K":[637],"32M":[638],"4":[346,639,762],"4G":[640],"4K":[641],"4M":[642],"5":[6,762],"512":[643],"512K":[644],"512M":[645],"6":[347],"64":[646,735,809],"64K":[647],"64M":[648],"66051":[811],"8":[348,649,736],"8K":[650],"8M":[651],"::chang":[511],"ACCESS":[608,609,612,613],"ACPI1":[588],"ACPI2":[589],"ALIGNMENT":[619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651],"APPEND":[607],"APPLE":[594],"ASCII":[652],"ATMEL":[580],"ATTR":[607,608,609,610,611,612,613],"AUTHENTICATED":[608,613],"AVR":[580],"BASE":[904],"BASEBOARD":[664,665,711],"BASED":[613],"BATTERY":[572,684],"BDP":[716],"BIOS":[585,666,667,668,669,712],"BOOT":[594],"BOOTSERVICE":[609],"BRANCH":[685],"BUILD":[573],"CAPSULE":[575,614,618],"CHASSIS":[713],"CHECKSUM":[657],"CHILDREN":[686],"COMPRESS":[591,593],"COUNTERPART":[687],"DATA":[652,677],"DATABASE":[617],"DEBUG":[653],"DEDUPE":[655,656],"DELAY":[578,579,703],"DEVICE":[574,575,576,577,578,579],"DFU":[580,581,582,583,584],"DFUSE":[583],"DURATION":[696],"EFI":[585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,614,615],"EFIVAR":[607,608,609,610,611,612,613,614,615,616,617,618],"ENCLOSURE":[670],"ENUMERATE":[578],"EOF":[678],"ERROR":[610],"ESP":[717],"ESRT":[590],"EVSA":[598],"EVSA2":[599],"EXPORT":[652,653,654],"EXTENDED":[679,680],"FAMILY":[671],"FFS1":[595],"FFS2":[596],"FFS3":[597],"FILE":[585,586,587],"FIRMARE":[580,581,582,583,584],"FIRMWARE":[585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,672,673,677,678,679,680,681,682,683,688,689,690],"FLAG":[652,653,654,655,656,657,658,659],"FLAGS":[575,691],"FMAP":[663],"FORMAT":[710],"FREG":[904,905],"FU_IFD_FREG_BASE":[904],"FU_IFD_FREG_LIMIT":[905],"FV":[586],"FW":[577],"FWUPDATE":[616],"GLOBAL":[615],"GTYPE":[692],"GUARD":[585],"GUID":[594,595,596,597,598,599,600,601,602,603,604,605,606,614,615,616,617,618,687,693,698,702],"HARDWARE":[610],"HAS":[657,658],"HASH":[573],"HEADER":[660],"HWIDS":[664,665,666,667,668,669,670,671,672,673,674,675,676],"ICON":[694],"ID":[655,660,661,662,708],"IDX":[656],"IFD":[904,905],"IHEX":[677,678,679,680,681,682,683],"IMAGE":[586,705],"INCLUDE":[653],"INHIBIT":[695],"INSTALL":[696],"INVALID":[572],"IS":[574],"KEY":[664,665,666,667,668,669,670,671,672,673,674,675,676],"KIND":[576,670,716,717],"LAST":[714],"LEGACY":[605],"LIMIT":[905],"LINEAR":[679,682],"LZMA":[591],"MAJOR":[666,672],"MANUFACTURER":[664,674],"MAX":[689],"MESSAGE":[706],"METADATA":[574,575,576,577],"MICROCODE":[587],"MICROSOFT":[603],"MIN":[690],"MINOR":[667,673],"MODE":[574],"NAME":[675,697],"NON":[611],"NONE":[654,659],"NVAR":[600],"NVRAM":[598,599,600],"OVMF":[604,605],"PARENT":[698],"PAYLOAD":[661],"PFH1":[601],"PFH2":[602],"PID":[658],"PLUGIN":[699],"PRIORITY":[700],"PRODUCT":[665,675,676],"PROTOCOL":[701],"PROXY":[702],"QUIRKS":[684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710],"RE":[578],"RECORD":[610,677,678,679,680,681,682,683],"RELEASE":[666,667,672,673],"REMOVE":[578,579,703],"REPLUG":[579],"REPORT":[614],"RUNTIME":[612],"SAFE":[574],"SECTION":[588,589,590,591,592,593],"SECURITY":[617],"SEGMENT":[680,683],"SIGNATURE":[603,604,605,606,662,681],"SIZE":[688,689,690],"SKU":[676],"SMBIOS":[592,711,712,713,714,715],"START":[682,683],"STRLEN":[663],"STRUCTURE":[711,712,713,714,715],"SUMMARY":[704],"SYSTEM":[715],"TABLE":[588,589,590,592],"TBT":[574],"THRESHOLD":[684],"TIANO":[593],"TIME":[613],"TYPE":[677,678,679,680,681,682,683,711,712,713,714,715],"UEFI":[575,576,577],"UNKNOWN":[584],"UPDATE":[705,706],"USER":[579],"UX":[618],"VALUE":[572],"VENDOR":[668,707,708],"VERSION":[577,580,581,582,583,584,669,709,710],"VID":[658],"VOLATILE":[611],"VOLUME":[594,595,596,597,598,599,600,601,602,716,717],"WRITE":[607,608,613],"ZERO":[606],"[0-9]":[811],"[class@fudevice]":[359,410,482,547],"[class@fudevicelocker]":[116],"[class@fudfufirmware]":[293],"[class@fuihexfirmware]":[293],"[class@fwupdrequest]":[172],"[ctor@devicelocker.new_full]":[16],"_not_":[566],"`->open":[187],"`->poll":[228],"`->probe`":[187],"`->setup":[187],"`.":[811],"`/sys/devices/pci0000:00/0000:00:14.0`":[528],"`0x[a-f,0-9]":[811],"`1.2.3":[811],"`<firmware>":[300,301,351],"`<firmware>/<data>":[300,301,351],"`<version_raw>0x123456</version_raw>":[321],"`[0-9]":[811],"`add_security_attr":[442],"`computerhardwareids.exe`":[367],"`firmware.builder.xml":[321],"`fufirmware->build":[300,301,351],"`fwupdmgr":[93,94],"`fwupdtool":[300,301,351],"`org.usb.dfu`":[701],"`pci_slot_name=0000:3e:00.0`":[227],"abl":[130,578],"abort":[22],"absolut":[787],"abstract":[558],"access":[9,393,394,769,834,835],"account":[578,579,805],"accuraci":[810],"acpi":[726],"acpi_tables":[726],"action":[136,167,187,204,206,233,726],"activ":[6,119,441],"actual":[136,137,187,192,214,222,246,421,535],"ad":[26,30,33,35,38,42,85,121,128,129,137,142,160,161,163,219,260,421,429,433,435,443,451,471,476,484,492,843,844],"add":[6,12,25,41,54,83,84,85,86,87,120,121,122,123,124,125,126,127,128,129,130,131,132,205,297,298,299,361,369,412,413,414,415,416,418,421,442,484,490,727,732,733,734,735,736,839,842,843,844,845,846,847,848,849,906],"add_version":[12],"addit":[300,301,351,414,433,482],"addition":[300,301,351],"addr":[304,329],"address":[7,62,65,72,304,329,398],"advanc":[244],"advanced_tca":[729],"affect":[214],"after":[6,128,129,135,137,158,167,213,225,233,369,414,415,431,434,436,467,568,706,727],"against":[763],"aid":[414],"align":[305,330,731,740,741],"all":[21,30,57,68,80,92,93,94,99,101,102,104,126,137,165,183,185,187,190,204,206,317,361,371,372,377,429,465,487,492,493,494,501,502,504,760,775,832],"all_in_one":[729],"alloc":[417,428,840],"allow":[8,159,211,212,216,217,218,226,235,245,247,266,302,303,305,330,339,352,482,839],"allow_trunc":[8],"alreadi":[25,41,125,141,183,186,247,299,421,536,565,566,741],"also":[24,43,52,68,116,128,144,159,226,263,264,265,267,277,281,285,287,291,293,357,359,367,378,386,388,395,410,482,492,496,506,509,547,839],"altern":[142,143,208,209],"alwai":[739,740],"amd":[722],"amount":[235],"an":[3,12,20,21,24,80,97,103,120,125,126,128,129,135,136,139,142,143,155,156,157,159,167,186,190,191,199,205,208,209,221,222,223,226,233,243,249,250,263,287,292,294,299,300,301,302,303,309,320,321,326,332,337,338,342,351,352,378,386,388,418,419,420,421,482,486,499,527,695,730,747,759,769,788,798,802,827,835,839,842,843,844],"ancestor":[520],"ani":[4,22,120,128,129,131,142,143,147,150,159,160,161,165,167,182,193,200,204,206,208,209,215,219,224,226,230,233,264,265,306,414,492,519,760,769,779,792,810],"anoth":[167,233,369,727,745],"anyth":[246,482,811],"app":[3,726],"appear":[798],"append":[490,491,732,733,734,735,736,793,794,795,796,799],"applic":[3,133,138,195],"appstream":[185,482,747],"ar":[811],"arbitrari":[527],"archiv":[4,14,20,21,22,52,55,56,57,58,59,61,719,721,747,759],"archiveiteratefunc":[14],"argument":[121,123,124,125],"arrai":[77,78,79,80,402,407,490,731,732,733,734,735,736,737,738,744,758,798],"artifici":[172],"ascii":[7,95,375],"ask":[421,423],"assign":[6,142,148,378],"associ":[527],"assum":[219,482,802],"atmel":[580],"attach":[6,133,167,233,459],"attach_extra_reset":[6],"attempt":[6],"attr":[12,132,442,488,492,527],"attribut":[132,488,491,492,493,494,527,541,726],"auto-detect":[364],"auto-remov":[6],"auto_parent_children":[6],"automat":[6,25,41,137,235,264,422,477,536],"avail":[6,9,36,37,38,39,40,49,50,51,53,111,112,113,114,251,252,253,254,255,256,257,258,259,260,261,262,279,283,333,354,366,385,391,470,471,472,473,474,475,476,478,479,480,481,489,509,542,543,544,545,546,557,569,570,571,573,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,663,677,678,679,680,681,682,683,725,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909],"avoid":[321,465],"avr":[580],"awai":[204,205,206],"back":[144,169,192],"backend":[24,25,29,30,32,33,34,35,41,42,144,210,251,443,444],"backend_device_ad":[443],"backend_device_chang":[444],"backport":[482],"base":[203,304,312,318,329,335,346,347,348,349,350,422,477,802,811],"base-10":[223],"base64":[300,301,351],"baseboard":[664,665,711],"baseclass":[6],"batteri":[88,89,90,106,107,108,111,112,113,145,146,211,212,252,253,572,684,718,730],"bcd":[580,581,582,583,584],"bdp":[716],"be":[186,247,465,579],"been":[25,26,27,28,31,41,137,146,183,190,192,204,206,213,227,319,390,421,425,426,428,492,536],"befor":[10,25,41,68,128,129,213,219,266,482,535,705,726,727],"beforehand":[136],"behalf":[167,233],"behavior":[482,739],"bespok":[758],"best":[758],"better":[164,229,432,468,727],"better_than":[727],"between":[81,168,207,578,798],"bidirect":[399],"binari":[300,301,341,343,351,356],"bind":[134],"bio":[386,666,667,668,669,712],"bios":[725],"bios2":[725],"bit":[305,330,577,724,731,733,734,735,736,740,807,808,809],"blade":[729],"blob":[21,23,77,78,79,151,152,193,216,217,218,341,343,356,498,502,764,765,790],"block":[10,342,570,741],"bluetooth":[43],"bluez":[24,43],"boolean":[31,156,222,426,793,842],"boot":[828,829],"bootload":[121,133,138,171,195,235,240,875,876,900],"bootloader->runtime->bootload":[578],"both":[839],"bound":[246],"boundari":[77,78,79,305,330,731,740],"branch":[685,850,887],"break":[323,324,325,340,355],"bsd":[838],"bu":[378,379,382,385],"bubblewrap":[762],"buffer":[532,534,742,743,750,751,752,753,754,755,756,757,780,781,782,783,784,785,786,813,814,815,816,817,818,819,839],"build":[300,301,302,303,321,351,352,424,465,747,762,806,877,901],"build-system":[300,301,351],"builder":[762,842,843,844],"bus_expansion":[729],"button":[235,579],"byte":[63,66,73,79,295,306,314,316,331,380,381,383,384,402,403,404,407,408,409,688,689,690,731,732,733,734,735,736,737,738,739,741,742,743,744,745,746,755,764,790,825,831],"byte-for-byt":[139],"cab":[747],"cabinet":[52,55,58,60,61,719,720,721,747],"cabl":[235],"cach":[11,95,375,418,419,420,726],"cachedir_pkg":[726],"calcul":[12,193,491],"call":[8,22,25,35,41,42,119,130,136,137,139,173,177,187,190,192,193,204,205,206,228,248,264,265,363,365,367,369,412,422,428,441,443,444,445,451,452,453,454,455,457,458,464,477,492,536,739,749],"callback":[14,15,16,17,18,19],"caller":[68,266,839],"can":[84,85,87,93,94,97,98,128,129,131,135,136,162,165,167,182,187,189,190,193,194,200,214,227,230,233,246,264,265,266,292,293,300,301,340,351,355,364,369,398,399,412,413,416,421,422,477,482,499,500,772,800],"can't":[482],"cannot":[119,146,572,769,810],"canonic":[787],"capabl":[421],"capsul":[575,576,577],"case":[68,192,364,781,783,785,786,814,816,818,819,839,840],"categori":[6],"caus":[121,192,781,783,785,786,814,816,818,819,839,840],"certain":[748],"certif":[723],"chain":[523,578],"chang":[27,39,44,45,51,105,114,115,186,192,203,211,212,247,398,444,474,479,480,481,482,511,546],"channel":[10,399],"charact":[346,347,348,349,350,803],"charg":[718],"charging":[718],"chassi":[713,729],"check":[11,159,177,190,226,321,390,470,475,559,563,565,744,748,751,752,753,754,776,777,839],"checksum":[193,307,312,353,465,657,845,851],"child":[120,137,147,196,260,261],"children":[6,128,147,293,512,686],"choos":[538,539],"chunk":[62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,297,308,342,776],"claim":[191,243],"clean":[135,266],"cleanup":[135,447,449,460],"clear":[136,237,445],"client":[127,140,147,159,174,179,198,226],"clildren":[6],"close":[6,8,16,136,263,264,265,266,405,566,765],"clumsi":[579],"cmd":[390],"cnt":[172],"code":[482,518,525,526,529,551,554],"coldplug":[25,41,422,446,447,448,477],"coldplug_cleanup":[447],"coldplug_prepar":[448],"collect":[201,202],"command":[93,94,390],"common":[740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819],"compact_pci":[729],"compar":[139,162,438,440,742,743,805],"compat":[191,243],"compil":[83,109,482],"compile-tim":[83],"complet":[136,166,187,231,232,706,758],"compon":[4,185,810],"composit":[449,450,852],"composite_cleanup":[449],"composite_prepar":[450],"concern":[781,783,785,786,814,816,818,819,839,840],"config":[13,425,426],"configur":[7,31,139,425,426,726],"confirm":[414],"conflict":[727],"conflicts":[727],"connect":[162,227],"consid":[204,206,811],"consist":[657],"consol":[228,264,265,803],"const":[68],"constant":[801,810],"construct":[300,301,310,351],"consum":[574,575,576,577],"contain":[139,193,686,762,798,811],"content":[22,300,301,331,342,351,732,764,765,770,790],"context":[15,29,36,59,81,101,102,118,148,213,254,427],"contextlookupiter":[15],"continu":[244],"control":[134,393,394,530],"conveni":[842,843,844],"convert":[76,80,121,123,124,137,193,219,224,249,250,290,344,345,730,800,802,820,834,835,836,837],"convertible":[729],"copi":[183,184,185,839],"correct":[465],"correct\"":[781,783,785,786,814,816,818,819,839,840],"corrupt":[781,783,785,786,814,816,818,819,839,840],"could":[227,776,781,783,785,786,814,816,818,819,839,840],"count":[724],"counterpart":[121,687],"cpu":[722,766],"cpuid":[749,766],"crazi":[806],"crc":[657],"crc-16-ibm":[750],"crc16":[750,751],"crc32":[752,753],"crc8":[754],"creat":[63,64,82,84,117,118,170,213,268,278,280,282,284,286,292,294,295,331,358,360,368,387,389,392,396,400,401,411,412,413,452,482,483,497,507,510,548,745,747,758,779,790,853,888],"cross":[77,78,79],"current":[147,159,174,176,226,236,555,563,728],"custom":[149,177,214,264,435,686,692],"cyclic":[750,751,752,753,754],"d-bu":[560],"daemon":[12,87,105,115,116,142,160,161,172,208,219,412,416,421,423,465,841],"daemon-specif":[245],"data":[10,62,63,64,66,67,68,69,73,96,119,190,307,319,336,342,353,398,414,417,428,482,496,497,498,505,541,652,724,726,739,762,764,781,783,785,786,790,814,816,818,819,824,825,830,831,839,840,910],"databas":[6,103,104,121,486,487],"datadir_pkg":[726],"date":[811,877,901],"dealloc":[264,265],"debug":[7,201,202,338,414,653],"decim":[807,808,809,811],"decompress":[21,60,190],"decompressor":[20],"dedup":[655,656],"default":[146,170,212,271,295,398,537,540,578,579,767,856],"defin":[93,174,214,371,372,485,492,583],"degre":[810],"deic":[671],"delai":[171,207,235,578,579,703],"delet":[762,821,822],"delimit":[799],"depend":[83,86],"depsolv":[415,440,492],"depth":[523],"desc":[725],"descript":[9,36,37,38,39,40,49,50,51,53,111,112,113,114,251,252,253,254,255,256,257,258,259,260,261,262,279,283,333,354,366,385,391,470,471,472,473,474,475,476,478,479,480,481,489,542,543,544,545,546,557,569,570,571,573,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,663,677,678,679,680,681,682,683,725,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909],"descriptor":[364,388,405,406,517,531,532,533,534,536,765],"design":[210,220],"desktop":[729],"destin":[309,332,839],"destroi":[159,167],"detach":[138,461],"detachable":[729],"determin":[437,523,726,748,778,828,829,833],"dev":[513,535,550,556],"devexp":[725],"devic":[5,6,8,13,16,17,24,25,26,27,28,30,33,35,38,39,40,41,42,43,46,47,48,81,84,116,119,120,121,122,123,124,125,128,129,130,133,134,135,136,137,138,139,141,142,143,144,147,148,149,150,153,154,155,156,157,158,159,160,161,162,164,167,168,169,170,171,173,174,175,176,177,178,186,187,188,189,190,191,192,193,194,195,196,197,199,203,205,208,209,210,211,212,213,214,215,219,220,221,222,223,224,225,226,227,229,233,234,235,236,238,239,240,241,242,243,244,245,246,247,248,249,250,263,264,265,266,270,359,360,364,378,380,381,383,384,405,406,410,412,413,421,422,423,429,443,444,451,452,453,454,463,471,472,473,476,477,478,482,496,509,512,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,535,536,537,538,539,540,542,545,547,549,551,552,553,554,555,557,575,576,577,578,579,700,703,718,773,774,781,783,785,786,814,816,818,819,839,840,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903],"device-id":[482],"device-specif":[139,190],"device_ad":[451],"device_cr":[452],"device_regist":[453],"device_remov":[454],"devicelockerfunc":[16],"deviceretryfunc":[17],"devnum":[774],"devpath":[227],"devtyp":[515],"dfu":[267,268,274,580,581,582,583,584],"dfuse":[277,278,583],"differ":[6,121,135,177,189,219,421,739,841],"direct":[264,265,520],"directli":[208],"director":[482],"directori":[726,759,779,789,790],"disabl":[45,228],"disallow":[3],"disambigu":[154,210,220],"discharg":[718],"discharging":[718],"discov":[572,766],"discoveri":[24],"displai":[95,375,803],"distro":[482],"dmi":[435,496,502,503],"dmtf":[97,98,499,500],"do":[5,6,8,11,176,190,236,246,422,477,579],"docking_station":[729],"doe":[77,78,79,121,191,193,244,306],"doesn't":[811],"don't":[781,783,785,786,814,816,818,819,839,840],"done":[192,422,477,492,765],"donor":[183,184,185],"dot":[6,807,808,809,811],"down":[778],"drive":[564],"driver":[8,134,246,516,543],"drop":[482],"due":[769],"dump":[7,139,505,755,756,757],"duplic":[130,840],"durat":[244,696,860,892],"dure":[762],"dynam":[726],"e.g":[0,6,13,89,107,516,524,528,575,576,579,701,710,811],"each":[22,59,77,78,79,135,189,296,798],"easi":[482],"easili":[245,263,339],"ec":[725],"effect":[369,778],"effici":[177],"efi":[279,281,283,285,287,291,723,726,820,832,833],"efi_signature_list":[287,292],"efiappdir":[726],"efivar":[821,822,823,824,825,826,827,828,829,830,831,832,833],"either":[496,572],"electr":[162,227],"embedded_pc":[729],"emit":[26,27,28,140,511],"empti":[294,300,301,351,718,744,788,798],"empty":[718],"emul":[369],"enabl":[31,34,44,828,829],"enclosur":[670],"encod":[300,301,351],"encrypt":[563],"end":[482,839],"endian":[0,780,781,782,783,784,785,813,814,815,816,817,818],"engin":[81,127,168,179,198],"ensur":[6,77,78,79,141,193,806],"ensure_semver":[6],"entri":[103,104,190,486,487],"enumer":[340,355,410,496,730],"environ":[772,838],"equal":[742,743],"equival":[150,215],"error":[11,136,153,191,204,205,206,237,243,264,265,266,342,695,758,769,792,827,868,897],"esp":[717,767,768],"even":[187],"event":[172],"everi":[228,769],"exact":[216,688],"exampl":[340,355,415,537],"exceed":[402,403,404,407,408,409],"exist":[100,177,376,435,482,823],"exit":[792],"expand":[737,738],"expansion":[729],"expect":[10,136,171,187,397,508,727],"explicitli":[319,810],"export":[1,55,116,302,303,352,421,423,653,719],"extern":[139],"extra":[300,301,351,482],"extract":[759,762],"fail":[6,187,201,202,205,207,264,265,402,403,404,407,408,409,415],"failur":[8],"fake":[575,576,577],"fall":[144,169],"fallback":[13,169],"famili":[671],"far":[523],"fd":[406,517,536,765],"file":[11,21,22,54,56,57,60,163,194,271,275,279,285,293,300,301,321,324,343,351,397,400,405,406,433,482,485,502,508,514,517,531,532,533,534,536,542,726,739,760,762,764,765,769,826],"filenam":[23,309,332,469,760,787,790],"filesystem":[11,281,571],"fill":[397,398,508],"find":[23,100,178,322,376,419,549,555,758,761,773,774,775,787],"firmar":[724],"firmwar":[1,2,6,84,91,92,119,139,146,151,152,159,190,193,216,217,218,226,248,267,274,277,279,281,283,285,293,294,295,296,298,299,300,301,302,303,305,306,312,313,314,315,316,317,320,321,322,323,324,325,326,327,328,330,337,338,340,341,343,351,352,355,356,357,388,395,413,414,506,577,658,660,661,662,672,673,685,688,689,690,726,762,770,781,783,785,786,788,791,814,816,818,819,839,840],"firmware-build":[300,301,351],"firmware.bin":[762],"firmware_search":[726],"first":[187,327,328,773,774],"flag":[1,2,3,4,5,6,7,8,10,11,12,13,59,122,127,131,136,149,165,177,179,182,184,187,194,197,198,200,203,214,230,249,250,298,322,344,345,361,435,537,575,654,659,691,695,719,720,721,728,854,882,890,906,907,908,909],"flash":[388,421,855,891],"flush":[10],"flush_input":[10],"fmap":[357,358],"fn":[23,469],"fnmatch":[763],"follow":[300,301,351],"footer":[306],"form":[300,301,351,798],"format":[6,214,241,271,275,482,580,581,582,583,584,710,805,810,811,812,878],"forward":[792],"found":[22,57,142,170,287,291,415,769],"free":[559],"frequent":[321],"from":[6,10,13,46,47,56,79,97,98,130,133,138,139,140,142,149,155,156,157,160,161,163,177,183,184,185,186,193,194,195,197,208,214,227,244,246,247,249,295,296,300,301,319,326,327,328,336,342,344,346,347,348,349,350,351,377,380,381,397,399,400,401,402,403,404,420,422,423,435,469,477,491,499,500,501,502,503,504,508,531,532,538,539,747,758,762,764,765,773,774,777,780,781,782,783,784,785,786,801,806,807,808,809,810,811,814,816,818,819,821,822,824,825,832,839,840],"fu_archive_iterate":[22],"fu_archive_lookup_by_fn":[23],"fu_archive_new":[21],"fu_backend_coldplug":[25],"fu_backend_device_added":[26],"fu_backend_device_changed":[27],"fu_backend_device_removed":[28],"fu_backend_get_context":[29],"fu_backend_get_devices":[30],"fu_backend_get_enabled":[31],"fu_backend_get_name":[32],"fu_backend_lookup_by_id":[33],"fu_backend_set_enabled":[34],"fu_backend_setup":[35],"fu_battery_state_to_string":[730],"fu_battery_value_invalid":[572],"fu_bluez_device_notify_start":[44],"fu_bluez_device_notify_stop":[45],"fu_bluez_device_read":[46],"fu_bluez_device_read_string":[47],"fu_bluez_device_write":[48],"fu_build_hash":[573],"fu_byte_array_align_up":[731],"fu_byte_array_append_bytes":[732],"fu_byte_array_append_uint16":[733],"fu_byte_array_append_uint32":[734],"fu_byte_array_append_uint64":[735],"fu_byte_array_append_uint8":[736],"fu_byte_array_set_size":[737],"fu_byte_array_set_size_full":[738],"fu_bytes_get_data_safe":[739],"fu_cabinet_add_file":[54],"fu_cabinet_export":[55],"fu_cabinet_get_file":[56],"fu_cabinet_get_silo":[57],"fu_cabinet_new":[53],"fu_cabinet_parse":[58],"fu_cabinet_set_jcat_context":[59],"fu_cabinet_set_size_max":[60],"fu_cabinet_sign":[61],"fu_chunk_array_mutable_new":[77],"fu_chunk_array_new":[78],"fu_chunk_array_new_from_bytes":[79],"fu_chunk_array_to_string":[80],"fu_chunk_bytes_new":[63],"fu_chunk_get_address":[65],"fu_chunk_get_bytes":[66],"fu_chunk_get_data":[67],"fu_chunk_get_data_out":[68],"fu_chunk_get_data_sz":[69],"fu_chunk_get_idx":[70],"fu_chunk_get_page":[71],"fu_chunk_new":[64],"fu_chunk_set_address":[72],"fu_chunk_set_bytes":[73],"fu_chunk_set_idx":[74],"fu_chunk_set_page":[75],"fu_chunk_to_string":[76],"fu_common_align_up":[740],"fu_common_bytes_align":[741],"fu_common_bytes_compare":[742],"fu_common_bytes_compare_raw":[743],"fu_common_bytes_is_empty":[744],"fu_common_bytes_new_offset":[745],"fu_common_bytes_pad":[746],"fu_common_cab_build_silo":[747],"fu_common_check_kernel_version":[748],"fu_common_cpuid":[749],"fu_common_crc16":[750],"fu_common_crc16_full":[751],"fu_common_crc32":[752],"fu_common_crc32_full":[753],"fu_common_crc8":[754],"fu_common_dump_bytes":[755],"fu_common_dump_full":[756],"fu_common_dump_raw":[757],"fu_common_error_array_get_best":[758],"fu_common_extract_archive":[759],"fu_common_filename_glob":[760],"fu_common_find_program_in_path":[761],"fu_common_firmware_builder":[762],"fu_common_fnmatch":[763],"fu_common_get_contents_bytes":[764],"fu_common_get_contents_fd":[765],"fu_common_get_cpu_vendor":[766],"fu_common_get_esp_default":[767],"fu_common_get_esp_for_path":[768],"fu_common_get_files_recursive":[769],"fu_common_get_firmware_search_path":[770],"fu_common_get_memory_size":[771],"fu_common_get_path":[772],"fu_common_get_volume_by_device":[773],"fu_common_get_volume_by_devnum":[774],"fu_common_get_volumes_by_kind":[775],"fu_common_guid_is_plausible":[776],"fu_common_is_live_media":[777],"fu_common_kernel_locked_down":[778],"fu_common_mkdir_parent":[779],"fu_common_read_uint16":[780],"fu_common_read_uint16_safe":[781],"fu_common_read_uint32":[782],"fu_common_read_uint32_safe":[783],"fu_common_read_uint64":[784],"fu_common_read_uint64_safe":[785],"fu_common_read_uint8_safe":[786],"fu_common_realpath":[787],"fu_common_reset_firmware_search_path":[788],"fu_common_rmtree":[789],"fu_common_set_contents_bytes":[790],"fu_common_set_firmware_search_path":[791],"fu_common_spawn_sync":[792],"fu_common_string_append_kb":[793],"fu_common_string_append_ku":[794],"fu_common_string_append_kv":[795],"fu_common_string_append_kx":[796],"fu_common_string_replace":[797],"fu_common_strjoin_array":[798],"fu_common_strnsplit":[799],"fu_common_strsafe":[800],"fu_common_strstrip":[801],"fu_common_strtoull":[802],"fu_common_strwidth":[803],"fu_common_uri_get_scheme":[804],"fu_common_vercmp_full":[805],"fu_common_version_ensure_semver":[806],"fu_common_version_from_uint16":[807],"fu_common_version_from_uint32":[808],"fu_common_version_from_uint64":[809],"fu_common_version_guess_format":[810],"fu_common_version_parse_from_format":[811],"fu_common_version_verify_format":[812],"fu_common_write_uint16":[813],"fu_common_write_uint16_safe":[814],"fu_common_write_uint32":[815],"fu_common_write_uint32_safe":[816],"fu_common_write_uint64":[817],"fu_common_write_uint64_safe":[818],"fu_common_write_uint8_safe":[819],"fu_context_add_compile_version":[83],"fu_context_add_firmware_gtype":[84],"fu_context_add_quirk_key":[85],"fu_context_add_runtime_version":[86],"fu_context_add_udev_subsystem":[87],"fu_context_get_battery_level":[88],"fu_context_get_battery_state":[89],"fu_context_get_battery_threshold":[90],"fu_context_get_firmware_gtype_by_id":[91],"fu_context_get_firmware_gtype_ids":[92],"fu_context_get_hwid_guids":[93],"fu_context_get_hwid_replace_value":[94],"fu_context_get_hwid_value":[95],"fu_context_get_smbios_data":[96],"fu_context_get_smbios_integer":[97],"fu_context_get_smbios_string":[98],"fu_context_get_udev_subsystems":[99],"fu_context_has_hwid_guid":[100],"fu_context_load_hwinfo":[101],"fu_context_load_quirks":[102],"fu_context_lookup_quirk_by_id":[103],"fu_context_lookup_quirk_by_id_iter":[104],"fu_context_new":[82],"fu_context_security_changed":[105],"fu_context_set_battery_level":[106],"fu_context_set_battery_state":[107],"fu_context_set_battery_threshold":[108],"fu_context_set_compile_versions":[109],"fu_context_set_runtime_versions":[110],"fu_device_activate":[119],"fu_device_add_checksum":[845],"fu_device_add_child":[120],"fu_device_add_counterpart_guid":[121],"fu_device_add_flag":[122],"fu_device_add_guid":[123],"fu_device_add_guid_full":[124],"fu_device_add_icon":[846],"fu_device_add_instance_id":[125],"fu_device_add_instance_id_full":[126],"fu_device_add_internal_flag":[127],"fu_device_add_parent_guid":[128],"fu_device_add_parent_physical_id":[129],"fu_device_add_possible_plugin":[130],"fu_device_add_private_flag":[131],"fu_device_add_protocol":[847],"fu_device_add_release":[848],"fu_device_add_security_attrs":[132],"fu_device_add_vendor_id":[849],"fu_device_attach":[133],"fu_device_bind_driver":[134],"fu_device_cleanup":[135],"fu_device_clos":[187],"fu_device_close":[136],"fu_device_convert_instance_ids":[137],"fu_device_detach":[138],"fu_device_dump_firmware":[139],"fu_device_emit_request":[140],"fu_device_ensure_id":[141],"fu_device_get_alternate":[142],"fu_device_get_alternate_id":[143],"fu_device_get_backend_id":[144],"fu_device_get_battery_level":[145],"fu_device_get_battery_threshold":[146],"fu_device_get_branch":[850],"fu_device_get_checksums":[851],"fu_device_get_children":[147],"fu_device_get_composite_id":[852],"fu_device_get_context":[148],"fu_device_get_created":[853],"fu_device_get_custom_flags":[149],"fu_device_get_equivalent_id":[150],"fu_device_get_firmware_size_max":[151],"fu_device_get_firmware_size_min":[152],"fu_device_get_flags":[854],"fu_device_get_flashes_left":[855],"fu_device_get_guid_default":[856],"fu_device_get_guids":[857],"fu_device_get_guids_as_str":[153],"fu_device_get_icons":[858],"fu_device_get_id":[219,859],"fu_device_get_install_duration":[860],"fu_device_get_instance_ids":[861],"fu_device_get_logical_id":[154],"fu_device_get_metadata":[155],"fu_device_get_metadata_boolean":[156],"fu_device_get_metadata_integer":[157],"fu_device_get_modified":[862],"fu_device_get_name":[863],"fu_device_get_order":[158],"fu_device_get_parent":[159],"fu_device_get_parent_guids":[160],"fu_device_get_parent_physical_ids":[161],"fu_device_get_physical_id":[162],"fu_device_get_plugin":[864],"fu_device_get_possible_plugins":[163],"fu_device_get_priority":[164],"fu_device_get_private_flags":[165],"fu_device_get_progress":[166],"fu_device_get_protocols":[865],"fu_device_get_proxy":[167],"fu_device_get_proxy_guid":[168],"fu_device_get_proxy_with_fallback":[169],"fu_device_get_release_default":[170],"fu_device_get_remove_delay":[171],"fu_device_get_request_cnt":[172],"fu_device_get_results":[173],"fu_device_get_root":[174],"fu_device_get_serial":[866],"fu_device_get_specialized_gtype":[175],"fu_device_get_status":[176],"fu_device_get_summary":[867],"fu_device_get_update_error":[868],"fu_device_get_update_image":[869],"fu_device_get_update_message":[870],"fu_device_get_update_state":[871],"fu_device_get_vendor":[872],"fu_device_get_vendor_ids":[873],"fu_device_get_version":[874],"fu_device_get_version_bootloader":[875],"fu_device_get_version_bootloader_raw":[876],"fu_device_get_version_build_date":[877],"fu_device_get_version_format":[878],"fu_device_get_version_lowest":[879],"fu_device_get_version_lowest_raw":[880],"fu_device_get_version_raw":[881],"fu_device_has_custom_flag":[177],"fu_device_has_flag":[882],"fu_device_has_guid":[178],"fu_device_has_icon":[883],"fu_device_has_instance_id":[884],"fu_device_has_internal_flag":[179],"fu_device_has_parent_guid":[180],"fu_device_has_parent_physical_id":[181],"fu_device_has_private_flag":[182],"fu_device_has_protocol":[885],"fu_device_has_vendor_id":[886],"fu_device_incorporate":[183],"fu_device_incorporate_flag":[184],"fu_device_incorporate_from_component":[185],"fu_device_inhibit":[186],"fu_device_internal_flag_from_string":[249],"fu_device_internal_flag_to_string":[250],"fu_device_locker_close":[266],"fu_device_locker_new":[264],"fu_device_locker_new_ful":[264],"fu_device_locker_new_full":[265],"fu_device_metadata_tbt_is_safe_mode":[574],"fu_device_metadata_uefi_capsule_flags":[575],"fu_device_metadata_uefi_device_kind":[576],"fu_device_metadata_uefi_fw_version":[577],"fu_device_new":[117],"fu_device_new_with_context":[118],"fu_device_open":[13,136,187,540],"fu_device_poll":[188],"fu_device_prepare":[189],"fu_device_prepare_firmware":[190],"fu_device_probe":[191],"fu_device_probe_invalidate":[192],"fu_device_read_firmware":[193],"fu_device_register_private_flag":[194],"fu_device_reload":[195],"fu_device_remove_child":[196],"fu_device_remove_delay_re_enumerate":[578],"fu_device_remove_delay_user_replug":[579],"fu_device_remove_flag":[197],"fu_device_remove_internal_flag":[198],"fu_device_remove_metadata":[199],"fu_device_remove_private_flag":[200],"fu_device_report_metadata_post":[201],"fu_device_report_metadata_pre":[202],"fu_device_rescan":[203],"fu_device_retry":[204],"fu_device_retry_add_recovery":[205],"fu_device_retry_full":[206],"fu_device_retry_set_delay":[207],"fu_device_set_alternate":[208],"fu_device_set_alternate_id":[209],"fu_device_set_backend_id":[210],"fu_device_set_battery_level":[211],"fu_device_set_battery_threshold":[212],"fu_device_set_branch":[887],"fu_device_set_context":[213],"fu_device_set_created":[888],"fu_device_set_custom_flags":[214],"fu_device_set_description":[889],"fu_device_set_equivalent_id":[215],"fu_device_set_firmware_size":[216],"fu_device_set_firmware_size_max":[217],"fu_device_set_firmware_size_min":[190,218],"fu_device_set_flags":[890],"fu_device_set_flashes_left":[891],"fu_device_set_id":[219],"fu_device_set_install_duration":[892],"fu_device_set_logical_id":[220],"fu_device_set_metadata":[221],"fu_device_set_metadata_boolean":[222],"fu_device_set_metadata_integer":[223],"fu_device_set_modified":[893],"fu_device_set_name":[224],"fu_device_set_order":[225],"fu_device_set_parent":[226],"fu_device_set_physical_id":[227],"fu_device_set_plugin":[894],"fu_device_set_poll_interv":[228],"fu_device_set_poll_interval":[228],"fu_device_set_priority":[229],"fu_device_set_private_flags":[230],"fu_device_set_progress":[231],"fu_device_set_progress_full":[232],"fu_device_set_proxy":[233],"fu_device_set_proxy_guid":[234],"fu_device_set_remove_delay":[235],"fu_device_set_serial":[895],"fu_device_set_status":[236],"fu_device_set_summary":[896],"fu_device_set_update_error":[897],"fu_device_set_update_image":[898],"fu_device_set_update_message":[899],"fu_device_set_update_state":[237],"fu_device_set_vendor":[238],"fu_device_set_version":[239],"fu_device_set_version_bootloader":[240],"fu_device_set_version_bootloader_raw":[900],"fu_device_set_version_build_date":[901],"fu_device_set_version_format":[241],"fu_device_set_version_lowest":[242],"fu_device_set_version_lowest_raw":[902],"fu_device_set_version_raw":[903],"fu_device_setup":[243],"fu_device_sleep_with_progress":[244],"fu_device_to_string":[245],"fu_device_unbind_driver":[246],"fu_device_uninhibit":[247],"fu_device_write_firmware":[248],"fu_dfu_firmare_version_atmel_avr":[580],"fu_dfu_firmare_version_dfu_1_0":[581],"fu_dfu_firmare_version_dfu_1_1":[582],"fu_dfu_firmare_version_dfuse":[583],"fu_dfu_firmare_version_unknown":[584],"fu_dfu_firmware_get_pid":[269],"fu_dfu_firmware_get_release":[270],"fu_dfu_firmware_get_version":[271],"fu_dfu_firmware_get_vid":[272],"fu_dfu_firmware_new":[268],"fu_dfu_firmware_set_pid":[273],"fu_dfu_firmware_set_release":[274],"fu_dfu_firmware_set_version":[275],"fu_dfu_firmware_set_vid":[276],"fu_dfuse_firmware_new":[278],"fu_efi_firmware_file_bios_guard":[585],"fu_efi_firmware_file_fv_image":[586],"fu_efi_firmware_file_microcode":[587],"fu_efi_firmware_file_new":[280],"fu_efi_firmware_filesystem_new":[282],"fu_efi_firmware_section_acpi1_table":[588],"fu_efi_firmware_section_acpi2_table":[589],"fu_efi_firmware_section_esrt_table":[590],"fu_efi_firmware_section_lzma_compress":[591],"fu_efi_firmware_section_new":[284],"fu_efi_firmware_section_smbios_table":[592],"fu_efi_firmware_section_tiano_compress":[593],"fu_efi_firmware_volume_guid_apple_boot":[594],"fu_efi_firmware_volume_guid_ffs1":[595],"fu_efi_firmware_volume_guid_ffs2":[596],"fu_efi_firmware_volume_guid_ffs3":[597],"fu_efi_firmware_volume_guid_nvram_evsa":[598],"fu_efi_firmware_volume_guid_nvram_evsa2":[599],"fu_efi_firmware_volume_guid_nvram_nvar":[600],"fu_efi_firmware_volume_guid_pfh1":[601],"fu_efi_firmware_volume_guid_pfh2":[602],"fu_efi_firmware_volume_new":[286],"fu_efi_guid_to_name":[820],"fu_efi_signature_get_kind":[288],"fu_efi_signature_get_owner":[289],"fu_efi_signature_guid_microsoft":[603],"fu_efi_signature_guid_ovmf":[604],"fu_efi_signature_guid_ovmf_legacy":[605],"fu_efi_signature_guid_zero":[606],"fu_efi_signature_kind_to_string":[290],"fu_efi_signature_list_new":[292],"fu_efivar_attr_append_write":[607],"fu_efivar_attr_authenticated_write_access":[608],"fu_efivar_attr_bootservice_access":[609],"fu_efivar_attr_hardware_error_record":[610],"fu_efivar_attr_non_volatile":[611],"fu_efivar_attr_runtime_access":[612],"fu_efivar_attr_time_based_authenticated_write_access":[613],"fu_efivar_delete":[821],"fu_efivar_delete_with_glob":[822],"fu_efivar_exists":[823],"fu_efivar_get_data":[824],"fu_efivar_get_data_bytes":[825],"fu_efivar_get_monitor":[826],"fu_efivar_get_names":[827],"fu_efivar_guid_efi_capsule_report":[614],"fu_efivar_guid_efi_global":[615],"fu_efivar_guid_fwupdate":[616],"fu_efivar_guid_security_database":[617],"fu_efivar_guid_ux_capsule":[618],"fu_efivar_secure_boot_enabled":[828],"fu_efivar_secure_boot_enabled_full":[829],"fu_efivar_set_data":[830],"fu_efivar_set_data_bytes":[831],"fu_efivar_space_used":[832],"fu_efivar_supported":[833],"fu_firmware_add_chunk":[297],"fu_firmware_add_flag":[298],"fu_firmware_add_image":[299],"fu_firmware_alignment_1":[619],"fu_firmware_alignment_128":[620],"fu_firmware_alignment_128k":[621],"fu_firmware_alignment_128m":[622],"fu_firmware_alignment_16":[623],"fu_firmware_alignment_16k":[624],"fu_firmware_alignment_16m":[625],"fu_firmware_alignment_1g":[626],"fu_firmware_alignment_1k":[627],"fu_firmware_alignment_1m":[628],"fu_firmware_alignment_2":[629],"fu_firmware_alignment_256":[630],"fu_firmware_alignment_256k":[631],"fu_firmware_alignment_256m":[632],"fu_firmware_alignment_2g":[633],"fu_firmware_alignment_2k":[634],"fu_firmware_alignment_2m":[635],"fu_firmware_alignment_32":[636],"fu_firmware_alignment_32k":[637],"fu_firmware_alignment_32m":[638],"fu_firmware_alignment_4":[639],"fu_firmware_alignment_4g":[640],"fu_firmware_alignment_4k":[641],"fu_firmware_alignment_4m":[642],"fu_firmware_alignment_512":[643],"fu_firmware_alignment_512k":[644],"fu_firmware_alignment_512m":[645],"fu_firmware_alignment_64":[646],"fu_firmware_alignment_64k":[647],"fu_firmware_alignment_64m":[648],"fu_firmware_alignment_8":[649],"fu_firmware_alignment_8k":[650],"fu_firmware_alignment_8m":[651],"fu_firmware_build":[300],"fu_firmware_build_from_xml":[301],"fu_firmware_export":[302],"fu_firmware_export_flag_ascii_data":[652],"fu_firmware_export_flag_include_debug":[653],"fu_firmware_export_flag_none":[654],"fu_firmware_export_to_xml":[303],"fu_firmware_flag_dedupe_id":[655],"fu_firmware_flag_dedupe_idx":[656],"fu_firmware_flag_from_string":[344],"fu_firmware_flag_has_checksum":[657],"fu_firmware_flag_has_vid_pid":[658],"fu_firmware_flag_none":[659],"fu_firmware_flag_to_string":[345],"fu_firmware_get_addr":[304],"fu_firmware_get_alignment":[305],"fu_firmware_get_bytes":[306],"fu_firmware_get_checksum":[307],"fu_firmware_get_chunks":[308],"fu_firmware_get_filename":[309],"fu_firmware_get_id":[310],"fu_firmware_get_idx":[311],"fu_firmware_get_image_by_checksum":[312],"fu_firmware_get_image_by_id":[313],"fu_firmware_get_image_by_id_bytes":[314],"fu_firmware_get_image_by_idx":[315],"fu_firmware_get_image_by_idx_bytes":[316],"fu_firmware_get_images":[317],"fu_firmware_get_offset":[318],"fu_firmware_get_size":[319],"fu_firmware_get_version":[320],"fu_firmware_get_version_raw":[321],"fu_firmware_has_flag":[322],"fu_firmware_id_header":[660],"fu_firmware_id_payload":[661],"fu_firmware_id_signature":[662],"fu_firmware_new":[294],"fu_firmware_new_from_byt":[331],"fu_firmware_new_from_bytes":[295],"fu_firmware_new_from_gtypes":[296],"fu_firmware_parse":[323],"fu_firmware_parse_file":[324],"fu_firmware_parse_full":[325],"fu_firmware_remove_image":[326],"fu_firmware_remove_image_by_id":[327],"fu_firmware_remove_image_by_idx":[328],"fu_firmware_set_addr":[329],"fu_firmware_set_alignment":[330],"fu_firmware_set_bytes":[331],"fu_firmware_set_filename":[332],"fu_firmware_set_id":[333],"fu_firmware_set_idx":[334],"fu_firmware_set_offset":[335],"fu_firmware_set_size":[336],"fu_firmware_set_version":[337],"fu_firmware_set_version_raw":[338],"fu_firmware_strparse_uint16_safe":[346],"fu_firmware_strparse_uint24_safe":[347],"fu_firmware_strparse_uint32_safe":[348],"fu_firmware_strparse_uint4_safe":[349],"fu_firmware_strparse_uint8_safe":[350],"fu_firmware_to_string":[339],"fu_firmware_tokenize":[340],"fu_firmware_writ":[193,319,336],"fu_firmware_write":[341],"fu_firmware_write_chunk":[342],"fu_firmware_write_file":[343],"fu_fmap_firmware_new":[358],"fu_fmap_firmware_strlen":[663],"fu_hid_device_add_flag":[361],"fu_hid_device_get_interface":[362],"fu_hid_device_get_report":[363],"fu_hid_device_new":[360],"fu_hid_device_set_interface":[364],"fu_hid_device_set_report":[8,365],"fu_hwids_add_smbios_override":[369],"fu_hwids_get_guid":[370],"fu_hwids_get_guids":[371],"fu_hwids_get_keys":[372],"fu_hwids_get_replace_keys":[373],"fu_hwids_get_replace_values":[374],"fu_hwids_get_value":[375],"fu_hwids_has_guid":[376],"fu_hwids_key_baseboard_manufacturer":[664],"fu_hwids_key_baseboard_product":[665],"fu_hwids_key_bios_major_release":[666],"fu_hwids_key_bios_minor_release":[667],"fu_hwids_key_bios_vendor":[668],"fu_hwids_key_bios_version":[669],"fu_hwids_key_enclosure_kind":[670],"fu_hwids_key_family":[671],"fu_hwids_key_firmware_major_release":[672],"fu_hwids_key_firmware_minor_release":[673],"fu_hwids_key_manufacturer":[674],"fu_hwids_key_product_name":[675],"fu_hwids_key_product_sku":[676],"fu_hwids_new":[368],"fu_hwids_setup":[377],"fu_i2c_device_get_bus_number":[379],"fu_i2c_device_read":[380],"fu_i2c_device_read_full":[381],"fu_i2c_device_set_bus_number":[382],"fu_i2c_device_write":[383],"fu_i2c_device_write_full":[384],"fu_ifd_access_to_string":[834],"fu_ifd_bios_new":[387],"fu_ifd_firmware_check_jedec_cmd":[390],"fu_ifd_firmware_new":[389],"fu_ifd_image_get_access":[393],"fu_ifd_image_new":[392],"fu_ifd_image_set_access":[394],"fu_ifd_region_to_access":[835],"fu_ifd_region_to_name":[836],"fu_ifd_region_to_string":[837],"fu_ihex_firmware_get_records":[397],"fu_ihex_firmware_new":[396],"fu_ihex_firmware_record_type_data":[677],"fu_ihex_firmware_record_type_eof":[678],"fu_ihex_firmware_record_type_extended_linear":[679],"fu_ihex_firmware_record_type_extended_segment":[680],"fu_ihex_firmware_record_type_signature":[681],"fu_ihex_firmware_record_type_start_linear":[682],"fu_ihex_firmware_record_type_start_segment":[683],"fu_ihex_firmware_set_padding_value":[398],"fu_io_channel_new_file":[400],"fu_io_channel_read_byte_array":[402],"fu_io_channel_read_bytes":[403],"fu_io_channel_read_raw":[404],"fu_io_channel_shutdown":[405],"fu_io_channel_unix_get_fd":[406],"fu_io_channel_unix_new":[401],"fu_io_channel_write_byte_array":[407],"fu_io_channel_write_bytes":[408],"fu_io_channel_write_raw":[409],"fu_kenv_get_string":[838],"fu_memcpy_safe":[839],"fu_memdup_safe":[840],"fu_path_kind_firmware_search":[770,788,791],"fu_plugin_add_device_gtype":[412],"fu_plugin_add_firmware_gtype":[413],"fu_plugin_add_flag":[906],"fu_plugin_add_report_metadata":[414],"fu_plugin_add_rule":[415],"fu_plugin_add_udev_subsystem":[416],"fu_plugin_alloc_data":[417],"fu_plugin_cache_add":[418],"fu_plugin_cache_lookup":[419],"fu_plugin_cache_remove":[420],"fu_plugin_device_add":[421,422,477],"fu_plugin_device_register":[422],"fu_plugin_device_remov":[429],"fu_plugin_device_remove":[423],"fu_plugin_get_build_hash":[424],"fu_plugin_get_config_value":[425],"fu_plugin_get_config_value_boolean":[426],"fu_plugin_get_context":[427],"fu_plugin_get_data":[428],"fu_plugin_get_devices":[429],"fu_plugin_get_flags":[907],"fu_plugin_get_name":[430],"fu_plugin_get_order":[431],"fu_plugin_get_priority":[432],"fu_plugin_get_report_metadata":[433],"fu_plugin_get_rules":[434],"fu_plugin_guess_name_from_fn":[469],"fu_plugin_has_custom_flag":[435],"fu_plugin_has_flag":[908],"fu_plugin_has_rule":[436],"fu_plugin_initi":[727],"fu_plugin_is_open":[437],"fu_plugin_name_compare":[438],"fu_plugin_new":[411],"fu_plugin_open":[439],"fu_plugin_order_compare":[440],"fu_plugin_remove_flag":[909],"fu_plugin_runner_activate":[441],"fu_plugin_runner_add_security_attrs":[442],"fu_plugin_runner_backend_device_added":[443],"fu_plugin_runner_backend_device_changed":[444],"fu_plugin_runner_clear_results":[445],"fu_plugin_runner_coldplug":[446],"fu_plugin_runner_coldplug_cleanup":[447],"fu_plugin_runner_coldplug_prepare":[448],"fu_plugin_runner_composite_cleanup":[449],"fu_plugin_runner_composite_prepare":[450],"fu_plugin_runner_device_added":[451],"fu_plugin_runner_device_created":[452],"fu_plugin_runner_device_register":[453],"fu_plugin_runner_device_removed":[454],"fu_plugin_runner_get_results":[455],"fu_plugin_runner_startup":[456],"fu_plugin_runner_unlock":[457],"fu_plugin_runner_update":[458],"fu_plugin_runner_update_attach":[459],"fu_plugin_runner_update_cleanup":[460],"fu_plugin_runner_update_detach":[461],"fu_plugin_runner_update_prepare":[462],"fu_plugin_runner_update_reload":[463],"fu_plugin_runner_verify":[464],"fu_plugin_set_build_hash":[465],"fu_plugin_set_name":[466],"fu_plugin_set_order":[467],"fu_plugin_set_priority":[468],"fu_quirks_add_possible_key":[484],"fu_quirks_battery_threshold":[684],"fu_quirks_branch":[685],"fu_quirks_children":[686],"fu_quirks_counterpart_guid":[687],"fu_quirks_firmware_size":[688],"fu_quirks_firmware_size_max":[689],"fu_quirks_firmware_size_min":[690],"fu_quirks_flags":[691],"fu_quirks_gtype":[692],"fu_quirks_guid":[693],"fu_quirks_icon":[694],"fu_quirks_inhibit":[695],"fu_quirks_install_duration":[696],"fu_quirks_load":[485],"fu_quirks_lookup_by_id":[486],"fu_quirks_lookup_by_id_iter":[487],"fu_quirks_name":[697],"fu_quirks_new":[483],"fu_quirks_parent_guid":[698],"fu_quirks_plugin":[699],"fu_quirks_priority":[700],"fu_quirks_protocol":[701],"fu_quirks_proxy_guid":[702],"fu_quirks_remove_delay":[703],"fu_quirks_summary":[704],"fu_quirks_update_image":[705],"fu_quirks_update_message":[706],"fu_quirks_vendor":[707],"fu_quirks_vendor_id":[708],"fu_quirks_version":[709],"fu_quirks_version_format":[710],"fu_security_attrs_append":[490],"fu_security_attrs_calculate_hsi":[491],"fu_security_attrs_depsolve":[492],"fu_security_attrs_get_all":[493],"fu_security_attrs_new":[489],"fu_security_attrs_remove_all":[494],"fu_security_attrs_to_variant":[495],"fu_smbios_get_data":[498],"fu_smbios_get_integer":[499],"fu_smbios_get_string":[500],"fu_smbios_new":[497],"fu_smbios_setup":[501],"fu_smbios_setup_from_file":[502],"fu_smbios_setup_from_kernel":[503],"fu_smbios_setup_from_path":[504],"fu_smbios_structure_type_baseboard":[711],"fu_smbios_structure_type_bios":[712],"fu_smbios_structure_type_chassis":[713],"fu_smbios_structure_type_last":[714],"fu_smbios_structure_type_system":[715],"fu_smbios_to_string":[505],"fu_srec_firmware_get_record":[340,355],"fu_srec_firmware_get_records":[508],"fu_srec_firmware_new":[507],"fu_udev_device_emit_changed":[511],"fu_udev_device_get_children_with_subsystem":[512],"fu_udev_device_get_dev":[513],"fu_udev_device_get_device_file":[514],"fu_udev_device_get_devtype":[515],"fu_udev_device_get_driver":[516],"fu_udev_device_get_fd":[517],"fu_udev_device_get_model":[518],"fu_udev_device_get_number":[519],"fu_udev_device_get_parent_name":[520],"fu_udev_device_get_revision":[521],"fu_udev_device_get_siblings_with_subsystem":[522],"fu_udev_device_get_slot_depth":[523],"fu_udev_device_get_subsystem":[524],"fu_udev_device_get_subsystem_model":[525],"fu_udev_device_get_subsystem_vendor":[526],"fu_udev_device_get_sysfs_attr":[527],"fu_udev_device_get_sysfs_path":[528],"fu_udev_device_get_vendor":[529],"fu_udev_device_ioctl":[530],"fu_udev_device_new":[510],"fu_udev_device_pread":[531],"fu_udev_device_pread_full":[532],"fu_udev_device_pwrite":[533],"fu_udev_device_pwrite_full":[534],"fu_udev_device_set_dev":[535],"fu_udev_device_set_fd":[536],"fu_udev_device_set_flags":[537],"fu_udev_device_set_logical_id":[538],"fu_udev_device_set_physical_id":[539],"fu_udev_device_set_readonly":[540],"fu_udev_device_write_sysfs":[541],"fu_usb_device_find_udev_device":[549],"fu_usb_device_get_dev":[550],"fu_usb_device_get_pid":[551],"fu_usb_device_get_platform_id":[552],"fu_usb_device_get_spec":[553],"fu_usb_device_get_vid":[554],"fu_usb_device_is_open":[555],"fu_usb_device_new":[548],"fu_usb_device_set_dev":[556],"fu_version_string":[841],"fu_volume_check_free_space":[559],"fu_volume_get_id":[560],"fu_volume_get_id_type":[561],"fu_volume_get_mount_point":[562],"fu_volume_is_encrypted":[563],"fu_volume_is_internal":[564],"fu_volume_is_mounted":[565],"fu_volume_kind_bdp":[716],"fu_volume_kind_esp":[717],"fu_volume_locker":[566],"fu_volume_mount":[567],"fu_volume_unmount":[568],"fu_xmlb_builder_insert_kb":[842],"fu_xmlb_builder_insert_kv":[843],"fu_xmlb_builder_insert_kx":[844],"fuappflags":[3],"fuarchive":[20],"fuarchiveflags":[4],"fubackend":[24],"fubatterystate":[718],"fubluezdevice":[43],"fucabinet":[52],"fucabinetexportflags":[719],"fucabinetparseflags":[720],"fucabinetsignflags":[721],"fuchunk":[62],"fucontext":[81],"fucpuvendor":[722],"fudevic":[482],"fudevice":[116],"fudevice->cleanup":[135],"fudevice->prepar":[189],"fudevice->write_firmwar":[135,189],"fudeviceinstanceflags":[5],"fudeviceinternalflags":[6],"fudevicelocker":[263],"fudfufirmware":[267],"fudfusefirmware":[277],"fudumpflags":[7],"fuefifirmwarefile":[279],"fuefifirmwarefilesystem":[281],"fuefifirmwaresection":[283],"fuefifirmwarevolume":[285],"fuefisignature":[287],"fuefisignaturekind":[723],"fuefisignaturelist":[291],"fuendiantype":[0],"fufirmaresrecrecordkind":[724],"fufirmware":[293],"fufirmwareexportflags":[1],"fufirmwareflags":[2],"fufmapfirmware":[357],"fuhiddevice":[359],"fuhiddeviceflags":[8],"fuhwids":[367],"fui2cdevice":[378],"fuifdaccess":[9],"fuifdbios":[386],"fuifdfirmware":[388],"fuifdimage":[391],"fuifdregion":[725],"fuihexfirmware":[395],"fuiochannel":[399],"fuiochannelflags":[10],"full":[124,126,206,232,265,325,381,384,532,534,738,751,753,756,805,829],"fulli":[718],"fully_charged":[718],"func":[14,16,17],"function":[22,25,35,41,42,68,137,142,159,167,172,187,204,205,206,208,246,264,266,300,301,340,351,355,364,369,398,492,739,781,783,785,786,814,816,818,819,839,840,842,843,844],"fupathkind":[726],"fuplugin":[410],"fuplugindata":[910],"fupluginrule":[727],"fupluginverifyflags":[728],"fuquirks":[482],"fuquirksloadflags":[11],"fusecurityattrs":[488],"fusecurityattrsflags":[12],"fusmbios":[496],"fusmbioschassiskind":[729],"fusrecfirmware":[506],"fuudevdevice":[509],"fuudevdeviceflags":[13],"fuusbdevice":[547],"fuvolume":[558],"fw.builder.xml":[300,301,351],"fwupd":[211,212,410,415,482],"fwupd-specif":[772],"fwupd_guid_hash_str":[121,123,124],"g_bytes_get_data":[739],"g_clear_object":[264,265],"gbe":[725],"gbyte":[732,746],"gbytearrai":[737,738],"gener":[141,300,301,351,424],"get":[13,29,30,31,32,33,56,57,65,66,67,68,69,70,71,88,89,90,91,92,93,94,95,96,97,98,99,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,266,269,270,271,272,288,289,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,342,353,361,362,363,370,371,372,373,374,375,379,393,397,406,424,425,426,427,428,429,430,431,432,433,434,436,455,482,493,498,499,500,508,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,549,550,551,552,553,554,560,561,562,739,758,764,765,766,767,768,769,770,771,772,773,774,775,804,824,825,826,827,832,838,841,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,907],"getreport":[363],"given":[22,523,531,532,533,534,739,749,750,751,752,753,754,797,799,804],"glob":[760,763,822],"go":[171,398],"goe":[263],"gone":[195],"group":[822],"gtype":[84,91,92,175,296,412,413,686,692],"guess":[84,312,413,469,564,810],"guid":[6,93,100,104,121,123,124,125,128,137,153,160,168,178,180,203,234,289,370,371,376,487,687,693,698,702,716,717,776,820,827,856,857],"gven":[244],"ha":[25,26,27,28,41,100,137,146,177,178,179,180,181,182,186,192,195,204,206,213,227,247,319,322,369,376,390,421,428,435,436,536,579,657,658,706,798,882,883,884,885,886,908],"hand_held":[729],"handl":[130,135,189,204,206,266,482,575,576,577],"handler":[18,130],"happen":[762],"hard":[482],"hardwar":[93,94,96,98,100,101,103,104,134,188,192,203,228,246,363,365,367,376,377,421,482,485,486,487,501,574],"hardwareid":[374],"hash":[219,424,465,723],"have":[105,115,121,136,137,183,190,219,235,243,293,300,301,306,351,422,477,492,512,522],"header":[306,498,660,724],"here":[219,367,414],"heurist":[777,810],"hex":[395,397,796,811],"hid":[8,359,360,362,364,538],"hidden":[832],"higher":[158,164,225,229,431,432,467,468],"higher-prior":[421],"histori":[6],"hole":[397,508],"hopefulli":[832],"host":[488,762],"how":[523],"hsi":[12,105,115,132,491],"https://www.dmtf.org/sites/default/files/standards/documents/dsp0134_3.1.1.pdf":[97,98,499,500],"hub":[578],"huge":[482],"human":[359,579],"hwid":[93,94,95,100,367,371,372,435,664,665,666,667,668,669,670,671,672,673,674,675,676],"hwinfo":[101],"i.":[68],"i2c":[378],"icon":[6,694,846,858,883],"id":[5,6,13,33,91,92,93,94,103,104,121,125,126,129,137,141,142,143,144,150,154,161,162,181,209,210,215,219,220,227,251,255,257,269,270,272,273,276,299,310,313,314,327,333,367,421,434,436,486,487,488,538,539,552,560,561,655,658,660,661,662,708,849,852,859,861,873,884,886],"idea":[482],"idl":[3,727],"idtyp":[561],"idx":[70,74,311,315,316,328,334,656],"ie":[725,726],"ifd":[9,386,388,389,391,725,834,835,836,837],"ignor":[4,11,130,186,247,421,422,477],"ignore_path":[4],"ihex":[395,396],"imag":[139,267,277,293,295,297,299,300,301,304,306,308,309,310,311,312,313,314,315,316,317,318,319,323,324,325,326,327,328,329,331,332,334,335,336,341,342,343,351,356,357,391,395,397,421,506,508,705,869,898],"img":[655,656],"implic":[482],"import":[128,129,187],"in-memori":[20],"includ":[300,301,306,351,414,482,498,653,779],"incomplet":[398],"incorpor":[183,184,185],"index":[62,70,74,311,315,316,328,334],"indic":[26,27,28],"inform":[101,105,115,159,226,482,653],"inherit":[6],"inherit_activation":[6],"inhibit":[6,186,247,695,727],"inhibit_children":[6],"inhibitor":[247],"inhibits_idle":[727],"initi":[187],"input":[10,312,812],"insert":[798,842,843,844],"insid":[762],"instal":[158,225,482,696,726,841,860,892],"instanc":[5,6,24,125,126,137,159,167,192,226,233,422,477,538,539,772,861,884],"instead":[125,146,306,319,412],"integ":[97,157,223,499,577,733,734,735,736,794,796,802,844],"intel":[386,388,395,722],"intention":[840],"interact":[5],"interfac":[191,243,359,362,364,366],"intern":[6,127,136,179,187,198,223,249,250,564,657],"interv":[228],"invalid":[192,224,364],"invok":[136,187],"involv":[235],"io":[10,399],"ioctl":[530],"iot_gateway":[729],"is_feature":[8],"is_open":[6],"issu":[136,187],"it":[770],"it'":[31,425,426,482],"item":[155,156,157,199,221,222,223,798],"iter":[14,15,17,18,19,22,104,415,487],"itself":[169,578],"i\u00b2c":[378,379,380,381,382,383,384],"jail":[762],"jcat":[59,61],"jedec":[390],"join":[153,798],"just":[195,235,264,265,482,744,811],"kb":[793,842],"kei":[11,31,85,94,95,291,370,372,373,374,375,425,426,484,664,665,666,667,668,669,670,671,672,673,674,675,676,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,793,794,795,796,826],"kek":[291],"kenv":[838],"kernel":[8,134,246,503,726,748,778,832,833,838],"kind":[172,288,290,670,723,724,726,729,775],"kit":[726],"known":[373,820],"ku":[794],"kv":[795,843],"kx":[796,844],"laptop":[89,107,729],"larger":[342],"last":[136,173,204,206,714,799],"lead":[801],"leaf":[749],"leak":[127,179,198],"least":[748],"left":[855,891],"length":[312,346,347,348,349,350,731],"less":[77,78,79,235,244,832],"let":[168],"level":[88,106,111,145,211,212,252,572,835],"libfwupdplugin":[841],"librari":[841],"like":[190,227,398,776],"limit":[190,840],"line":[397,792],"linear":[78,79,397,508],"link":[120,128,129,142,143,208,209],"linux":[144,210,503,509,838],"list":[6,130,163,180,181,291,390,397,415,421,423,433,508,512,522,827],"live":[777],"load":[3,4,11,101,102,485,720,726],"local":[177,726],"localstatedir":[726],"localstatedir_pkg":[726],"locat":[562,726,762],"lock":[566,726,778],"lockdir":[726],"lockdown":[778],"locker":[16,263,266,566],"logic":[6,116,120,128,129,141,147,154,159,174,220,226,227,255,538],"long":[798],"long-term":[482],"longer":[235],"look":[103,104,486,487,726,761,776],"lookup":[15,23,33,103,104,419,486,487],"loss":[119],"lot":[177],"low":[211,212],"low-level":[530],"low_profile_desktop":[729],"lower":[158,225,431,467],"lowest":[242,879,880,902],"lunch_box":[729],"magic":[482,579],"mai":[105,115,128,129,139,142,143,144,147,153,159,174,177,187,208,209,213,226,234,415,422,477,535,739,832,841],"main_server":[729],"major":[666,672],"make":[244],"malici":[781,783,785,786,814,816,818,819,839,840],"manag":[49,266],"manifest":[300,301,351],"manual":[137,264,265,266,300,301,351,422,477],"map":[482],"mark":[160,161,465,492],"match":[5,6,121,128,129,139,142,160,161,168,180,181,214,327,328,367,549,760,763,811,812,827],"max":[60,151,217,725],"maximum":[60,151,171,217,689,799],"md_set_icon":[6],"md_set_name":[6],"md_set_name_category":[6],"md_set_verfmt":[6],"me":[725],"mean":[119,134,142,246,537],"media":[777],"member":[843,844],"memcpi":[839],"memdup":[840],"memori":[21,77,78,79,193,741,750,751,752,753,754,771,776,781,783,785,786,814,816,818,819,839,840],"merg":[300,301,351],"messag":[153,361,706,870,899],"metadata":[6,57,155,156,157,199,201,202,221,222,223,245,414,422,433,477,482,727],"metadata_source":[727],"metainfo":[57],"method":[44,45,84,85,87,136,187,192,228,412,413,416],"microsoft":[367],"might":[128,129,397,508,836],"min":[152,218],"mini_pc":[729],"mini_tower":[729],"minimum":[152,218,690,746],"minor":[667,673],"mkdir":[779],"mmap":[68],"mode":[121,133,138,171,195,235,540,574],"model":[518,525],"modif":[811],"modifi":[482,739,862,893],"modul":[439],"moment":[68],"monitor":[826],"more":[128,129,177,306],"most":[321,364,482,538],"motherboard":[664,665,711],"mount":[560,562,565,566,567,569],"mous":[538,539],"multi_system":[729],"multipl":[136,162,187,192,227,364,381,384,797],"must":[465],"mutabl":[62,68,77],"name":[6,32,37,84,85,130,163,224,238,413,415,430,438,466,469,484,520,675,697,699,707,820,827,836,863],"namespac":[85,484],"necessari":[737],"need":[6,137,191,482,535,575,576,577,781,783,785,786,814,816,818,819,839,840],"nest":[300,301,302,303,351,352],"never":[839],"new":[21,53,63,64,77,78,79,82,117,118,119,264,265,268,278,280,282,284,286,292,294,295,296,358,360,368,387,389,392,396,400,401,411,482,483,489,497,507,510,548,745],"next":[192,228],"nice":[820],"no_auto_instance_ids":[6],"no_auto_remove_children":[6],"no_cache":[11],"no_idle_sources":[3],"no_kernel_rebind":[8],"no_kernel_unbind":[8],"no_quirks":[5],"no_serial_number":[6],"no_verify":[11],"node":[300,301,351,514,842,843,844],"non-fat":[204,206],"non-volatil":[726],"nonblock":[13],"none":[3,4,5,6,7,8,9,10,11,12,13,719,720,721,728],"nor":[781,783,785,786,814,816,818,819,839,840],"normal":[32,119,134,192,246],"note":[187,235,264,265,367,415,765,840],"notebook":[729],"notif":[44,45],"notifi":[44,45],"nul":[737],"number":[6,136,139,158,164,172,187,193,204,206,225,229,346,347,348,349,350,362,364,378,379,382,385,431,432,467,468,519,805,806,807,808,809,810,811],"nvram":[821,822,824,825,830,831],"o_nonblock":[13],"o_rdonli":[537,540],"o_rdwr":[537,540],"object":[49,81,142,159,167,183,184,191,243,263,264,265,294,295,300,301,302,303,339,351,352,400,401,412,418,419,420,483,493,494,495,497,511,536,841],"object-specif":[136,187],"obsolet":[492],"obvious":[482],"occur":[119],"offlin":[726],"offline_trigger":[726],"offset":[318,335,531,532,533,534,745,839],"often":[482],"on":[10,95,128,129,170,244,306,375,798],"onc":[192,492],"onli":[5,6,10,84,85,87,119,136,137,172,187,192,208,338,412,413,416,492,509,781,783,785,786,810,814,816,818,819,839,840],"only_quirks":[5],"only_supported":[6],"open":[6,8,13,16,187,191,213,243,264,265,437,439,517,536,537,540,555],"open_nonblock":[13],"open_read":[13],"open_write":[13],"oper":[173,397,508,797],"option":[62,136,141,159,187,190,204,205,206,213,226,300,301,308,309,320,332,337,338,351,798],"or":[482],"order":[128,129,158,225,296,311,334,415,431,440,467,727],"origin":[741],"other":[247,422,477,492,575,576,577,726,729],"out":[68,100,178,263,376,555,792,841],"output":[18,792],"outputhandler":[18],"over":[22,538,539],"overflow":[839],"overly-compl":[415],"overrid":[369],"overridden":[772],"owner":[289],"ownership":[264,265],"pack":[341,343,356],"packag":[77,78,79,726],"packet":[62,63,64,76,77,78,79,80],"pad":[305,330,342,398,746],"page":[62,71,75],"paramet":[126,191,243,537],"parent":[6,13,128,129,159,160,161,174,180,181,226,256,520,698,779,790],"pars":[21,58,190,292,296,300,301,323,324,325,346,347,348,349,350,351,354,497,505,720,802,811],"parser":[52],"part":[101,224,300,301,351],"partial":[187],"partit":[775],"pass":[68],"past":[839],"path":[4,144,210,504,528,560,569,726,761,768,769,770,772,787,788,791],"pattern":[760,763],"payload":[306,307,353,661],"pci":[121,524,539],"pend":[10,204,206],"per-devic":[482],"per-plugin":[417,418,419,420,428,435,482],"percent":[88,90,106,108,684],"percentag":[479],"perform":[146,167,211,212,233,705,781,783,785,786,797,814,816,818,819,839,840],"period":[228],"peripheral":[729],"permiss":[769],"persist":[11],"physic":[6,116,129,141,144,154,161,162,181,210,220,227,257,539,771],"pid":[269,273,551],"piec":[799],"pizza_box":[729],"pk":[291],"plain":[374],"platform":[144,210,552,725,726,767,768],"plausibl":[776],"pleas":[264],"plug":[219],"plugin":[81,84,85,87,99,109,110,130,131,135,136,137,140,159,163,165,168,172,182,187,189,200,208,214,219,226,230,300,301,351,397,410,412,413,415,416,421,422,424,427,428,429,430,431,432,434,436,437,438,439,440,442,443,444,446,447,448,449,450,451,452,453,454,456,459,460,461,462,465,466,467,468,469,477,482,484,485,508,538,539,574,575,576,577,699,726,727,728,810,864,894,906,907,908,909,910],"plugin'":[441,445,455,457,458,464],"plugin-alloc":[910],"plugin-specif":[139,193,248],"plugindir_pkg":[726],"point":[35,42,560,562],"pointer":[739],"polici":[726],"polkit_actions":[726],"poll":[188,228],"port":[172],"portable":[729],"posit":[305,330,731,740],"possibl":[85,130,163,205,484,714,806,810],"post":[201],"potenti":[306],"power":[89,107,305,330,731,740],"pre":[202],"pread":[531,532],"prefix":[802,811],"prepar":[189,190,448,450,462],"present":[299],"press":[235,579],"prevent":[186],"previous":[33],"primari":[120,128,129,142,143,208,209],"print":[228,245,339,800],"prioriti":[164,229,432,468,700],"privat":[127,131,165,179,182,194,198,200,230,417,428,910],"probe":[191,192,213,535],"problem":[414],"process":[18,204,206],"procf":[726],"procfs":[726],"product":[269,273,551,658,665,674,675,676],"program":[761],"programm":[139],"progress":[166,231,232,244,258],"progressbar":[244],"properli":[266],"properti":[44,45,183,185],"protocol":[701,847,865,885],"provid":[295,503,512,522,839],"proxi":[50,167,168,169,233,234,259,570,571,702],"psmous":[516],"public":[691],"purpos":[131,165,182,200,230],"put":[390],"pwrite":[533,534],"quad":[710],"queri":[188],"quickli":[244],"quirk":[5,11,19,85,102,103,104,121,130,149,163,177,190,194,214,435,482,483,484,485,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710],"quirksiter":[19],"rack_mount":[729],"raid":[729],"rang":[346,347,348,349,350,398],"rather":[397,508,537],"raw":[139,232,321,338,397,404,409,508,743,756,757,876,880,881,900,902,903],"re-ad":[203],"re-enumer":[235,578],"re-plug":[579],"reach":[799],"read":[6,8,9,10,13,46,47,97,139,193,377,380,381,399,400,401,402,403,404,498,499,500,501,502,503,504,527,531,532,535,764,765,770,780,781,782,783,784,785,786,839],"read-onli":[13],"readi":[6,35,42,567],"readonli":[11,540],"readonly_fs":[11],"realpath":[787],"reason":[393,394,482,839],"rebind":[8],"recogn":[144,836],"record":[340,355,397,508,724],"recoveri":[205,207],"recurs":[769,789],"redund":[750,751,752,753,754],"refcount":[159,167],"referenc":[23,97,98,499,500],"reflect":[147,159,174,226],"region":[725,835,836,837],"regist":[87,194,416,422,453,472,477,575,576,577,749],"releas":[59,170,245,246,270,274,482,848],"relev":[538],"reload":[195,463],"remaind":[799],"remov":[28,35,40,42,128,171,196,197,198,199,200,224,227,235,261,326,327,328,420,423,429,454,473,478,494,578,579,703,789,801,821,822,909],"replac":[94,299,373,374,482,535,536,797],"replug":[6,171,192,579],"replug_match_guid":[6],"report":[201,202,361,363,365,414,433,727,832],"repres":[57,81,162,219,227,293,309,320,321,332,337,338,488],"represent":[76,80,290],"request":[140,172,186,192,247,262,342,421,530],"requir":[99,219,237,239,240,242,243,342,482,492,559,566,688,738,748,758,779,790,805],"rescan":[203],"reserv":[724],"reset":[6,204,205,206,235,578,788],"resourc":[263],"restrict":[269,270,272],"result":[173,367,445,455,760,798],"retri":[6,8,17,204,205,206,207],"retry_failure":[8],"retry_open":[6],"return":[22,31,32,68,91,92,93,136,142,145,146,159,165,166,167,171,172,174,176,191,193,204,205,206,219,228,235,243,246,288,289,307,317,342,346,347,348,349,350,353,371,372,397,425,426,428,429,433,435,508,515,520,561,739,740,741,749,750,751,752,753,754,760,769,770,771,798,803,804,807,808,809,810,811,826],"revis":[521,553],"rmtree":[789],"root":[174],"routin":[441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464],"rule":[415,434,436,474,480,727],"run":[25,41,136,137,187,431,434,436,442,446,447,448,449,450,456,459,460,461,462,463,467,748,762,777,792],"run_after":[727],"run_before":[727],"runner":[441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464],"runtim":[86,110,121,726,841],"s0_header":[724],"s1_data_16":[724],"s2_data_24":[724],"s3_data_32":[724],"s4_reserved":[724],"s5_count_16":[724],"s6_count_24":[724],"s7_count_32":[724],"s8_termination_24":[724],"s9_termination_16":[724],"safe":[346,347,348,349,350,574,739,781,783,785,786,800,814,816,818,819,839,840],"same":[68,121,136,144,154,186,187,210,219,220,299,319,336,739],"sanit":[239,240,242],"saniti":[321],"save":[11],"scan":[22],"scheme":[804],"scope":[263],"screen":[755,756,757],"script":[762],"sealed_case_pc":[729],"search":[128,129,180,181,770,788,791,797],"second":[244,696,703],"section":[283,300,301,306,351,386,498],"secur":[12,105,114,115,132,442,482,488,726,828,829],"see":[24,43,52,116,263,267,277,281,285,287,291,293,357,359,367,378,386,388,390,395,410,482,496,506,509,547],"self":[512,522],"semant":[6],"semver":[806],"sens":[244],"sent":[414],"separ":[6,798],"serial":[6,139,193,495,866,895],"server":[414],"session":[762],"set":[3,4,5,6,7,8,10,11,12,13,32,34,35,42,59,60,72,73,74,75,83,86,106,107,108,109,110,120,126,128,129,137,141,142,144,154,162,168,183,187,190,191,194,205,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,264,273,274,275,276,295,299,310,319,329,330,331,332,333,334,335,336,337,338,361,364,365,369,382,394,398,414,422,465,466,467,468,477,488,535,536,537,538,539,540,556,654,659,695,719,720,721,728,737,738,739,760,762,790,791,810,827,830,831,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903],"setreport":[365],"setup":[35,42,243,377,501,502,503,504],"sever":[235,482,762],"sha1":[219],"sha256":[465,723],"share":[81,162,227,263],"should":[35,42,68,85,119,125,139,191,192,193,219,235,243,300,301,306,336,351,421,422,434,436,477,484,492,538,539,578,579,686,739,781,783,785,786,810,814,816,818,819,839,840],"show":[7,211,212,244,758],"show_addresses":[7],"show_ascii":[7],"shown":[93,94,705,706],"shutdown":[405,727],"sibl":[522],"sign":[61,721],"signal":[26,27,28,511],"signatur":[287,288,289,290,291,662,723],"signifi":[572],"significantli":[235],"silo":[54,57,747],"similar":[219],"simpl":[397,482,508],"singl":[162,380,383,798],"single_shot":[10],"size":[60,69,77,78,79,151,152,190,216,217,218,319,336,342,688,689,690,737,738,739,771,832,839,840],"sku":[676],"sleep":[244],"slot":[219,523],"slow":[578,579],"small":[832],"smaller":[342],"smbio":[96,97,98,369,377,496,497,498,499,500,501,502,503,504,505,711,712,713,714,715,729],"so":[128,129,194,219,244,246,369,421,422,477],"solv":[415],"some":[120,128,129,142,143,203,208,209,832,839,840],"somehow":[841],"someth":[227,579,800],"sort":[415,492,760,805],"sourc":[3,309,332,727,839],"space":[559,832],"space_saving":[729],"spawn":[18,792],"spec":[553],"special":[175],"specif":[77,78,79,83,86,93,94,95,97,98,136,172,178,184,187,204,206,298,300,301,322,351,370,375,393,394,482,499,500,504,760,765,775,826],"specifi":[84,300,301,351,413,415,577,773,774,780,781,782,783,784,785,813,814,815,816,817,818],"spi":[139],"split":[177,321,799],"srec":[506,507,508,724],"st":[583],"stai":[127,179,198],"standard":[580,581,582,583,584,792],"start":[44,415,482],"startnotifi":[44],"startup":[6,456],"startup.sh":[762],"state":[34,81,89,105,107,112,115,237,488,718,726,730,871],"static":[300,301,351],"statu":[6,176,188,236,481],"stick_pc":[729],"still":[187],"stop":[45],"stopnotifi":[45],"store":[222,223,726],"str":[153],"straight":[204,205,206],"string":[12,47,76,80,97,98,103,153,177,180,181,214,219,223,239,240,242,245,249,250,290,312,321,339,344,345,346,347,348,349,350,486,491,499,500,505,553,652,660,661,662,730,763,788,793,794,795,796,797,798,799,800,801,802,803,807,808,809,811,834,837,838,841,843],"strjoin":[798],"strnsplit":[799],"strpars":[346,347,348,349,350],"strsafe":[800],"strstrip":[801],"strtoull":[802],"structur":[97,499,500,711,712,713,714,715],"strwidth":[803],"stuck":[574],"sub":[268,278,358,389,396],"sub_notebook":[729],"subchassis":[729],"subclass":[25,32,35,41,42,193,228,300,301,351],"subclass-specif":[340,355],"subdirectori":[769],"subprocess":[792],"subsect":[398,745],"subsystem":[87,99,416,512,522,524,525,526,538,539,544],"success":[167,233,246],"successfulli":[6,136,187],"such":[263],"suggest":[235],"suitabl":[95,375],"summari":[704,867,896],"superset":[57],"supertyp":[264],"support":[6,300,301,351,470,475,482,811,833],"sure":[781,783,785,786,814,816,818,819,839,840],"switch":[119],"sync":[792,841],"synthes":[172],"sysconfdir":[726],"sysconfdir_pkg":[726],"sysf":[144,210,227,527,528,541,726],"sysfsdir_drivers":[726],"sysfsdir_fw":[726],"sysfsdir_fw_attrib":[726],"sysfsdir_security":[726],"sysfsdir_tpm":[726],"system":[81,88,89,90,93,94,106,107,108,149,177,214,227,367,369,488,496,564,715,729,748,772],"sz":[69],"tabl":[97,499,500,726],"tablet":[729],"taint":[465],"take":[134,578,579,805],"temporari":[762],"termin":[724],"test":[179,182,657,823],"test.fw":[300,301,351],"text":[290,300,301,351],"than":[128,129,235,244,306,342,397,508,537,726,727,832],"them":[798],"themselv":[421],"thing":[190,762],"think":[264,265],"threshold":[90,108,113,146,212,253,684],"thunderbolt":[574],"time":[6,8,109,136,187,192,204,206,235,244],"to":[305,330,399,731,740],"togeth":[798],"token":[340,355,397,508,799],"too":[211,212],"tool":[147,159,174,226,762],"top-level":[674,675,676],"total":[319,336,832],"tower":[729],"tpm":[726],"trail":[801],"transact":[706],"transfer":[77,78,79],"tree":[496,538,539],"tri":[296,469],"trigger":[726],"true":[222],"truncat":[8],"trust":[59],"try":[193,204,206],"tty":[10,402,403,404,407,408,409],"twice":[6],"two":[438,440],"tyical":[130],"type":[0,121,175,264,268,278,312,358,389,396,507,515,561,576,711,712,713,714,715,726,730,775],"typic":[35,42,121,144,163,188,210,213,264,265,291,300,301,310,319,323,324,325,338,340,341,343,351,355,356,435,465,509],"udev":[13,24,87,99,416,509,515,527,538,539,545,549],"udisk":[558,768],"uefi":[281,285,287,291,575,576,577,824,825,830,831],"uint16":[346,733,780,781,807,813,814],"uint24":[347],"uint32":[348,734,782,783,808,815,816],"uint4":[349],"uint64":[735,784,785,809,817,818],"uint8":[350,736,786,819],"unbind":[8,246],"unchang":[731,740],"under":[146,300,301,351,769],"uninhibit":[247],"unix":[401,406,768],"unknown":[584,718,722,723,729],"unless":[428,802],"unlock":[457],"unmount":[566,568],"unplug":[579],"unset":[144,572],"unsign":[577,794],"untar":[762],"until":[204,206,228],"unus":[728],"up":[6,8,35,42,89,103,104,107,119,135,168,243,266,486,487,523,731,740,762],"updat":[6,135,146,167,173,186,189,201,202,211,212,233,234,237,247,410,458,459,460,461,462,463,575,576,577,695,705,706,868,869,870,871,897,898,899],"update_attach":[459],"update_cleanup":[460],"update_detach":[461],"update_prepar":[462],"uri":[804],"us":[3,4,5,6,7,8,10,11,12,13,16,25,35,41,42,59,61,68,73,84,85,87,91,93,94,103,104,121,123,124,125,128,129,131,136,137,139,146,153,162,165,167,172,182,187,190,193,200,201,202,204,206,213,214,227,230,232,233,245,246,264,265,266,300,301,302,303,306,311,312,313,314,315,316,319,321,334,338,339,340,342,351,352,355,361,364,397,398,410,412,413,415,416,421,422,429,477,482,484,485,486,487,496,508,530,535,536,537,540,556,558,567,568,578,579,719,720,721,726,727,728,739,741,762,766,768,777,780,781,782,783,784,785,786,799,811,813,814,815,816,817,818,819,832,839,840],"usabl":[208],"usb":[24,121,144,192,210,362,364,538,539,547,553,555,557,578],"use_blocking_io":[10],"use_config":[13],"use_parent_for_open":[6],"user":[235,414,482,579,758,777,836],"user-configur":[193],"userspac":[246,832],"usi":[804],"usual":[482,660,661,662],"utf-8":[652],"uuid":[44,45,46,47,48],"valid":[6,95,121,123,124,125,375],"valu":[31,94,95,97,103,104,144,146,184,193,222,232,235,244,369,373,374,375,377,398,425,426,486,487,499,501,502,503,504,572,724,740,741,750,751,752,753,754,780,781,782,783,784,785,786,793,795,798,802,813,814,815,816,817,818,819,842,843,844],"variabl":[761,772,821,822,823,824,825,830,831,832,833],"variant":[495],"variou":[485,772,777],"vendor":[13,238,272,276,526,529,554,658,664,668,674,707,708,722,766,849,872,873,886],"vendor_from_parent":[13],"vercmp":[805],"veri":[482],"verifi":[68,159,226,300,301,351,464,728,812],"version":[6,12,83,86,109,110,119,159,226,239,240,241,242,271,275,320,321,337,338,482,577,580,581,582,583,584,666,667,669,672,673,709,710,748,805,806,807,808,809,810,811,812,841,874,875,876,877,878,879,880,881,900,901,902,903],"vfunc":[136,139,173,187,190,193,248,300,301,351],"vid":[272,276,554],"virtual":[137],"volum":[285,558,559,561,562,563,565,566,567,568,773,774,775],"wai":[120,128,129,142,143,208,209,482,781,783,785,786,814,816,818,819,839,840],"wait":[10,792],"warn":[68,211,212,228],"watch":[87,416],"we":[482],"well":[373],"what":[176,219,236],"when":[3,4,5,7,8,10,11,12,13,16,84,119,136,137,171,187,192,205,222,227,263,264,265,321,412,413,415,422,433,477,482,492,536,537,540,566,575,576,577,578,579,653,719,720,721,726,728,739,765,781,783,785,786,814,816,818,819,839,840],"whenev":[810],"where":[6,85,158,164,225,229,305,330,364,431,432,467,468,484,731,740,758,802,827],"whether":[776],"which":[32,35,42,59,84,119,134,146,153,154,162,168,172,190,205,213,227,246,293,300,301,306,311,319,334,336,351,399,410,412,413,498,537,739,745],"whitespac":[801],"whole":[244,715,792],"why":[482],"width":[803],"window":[367,838],"wish":[422,477],"with":[424],"within":[293],"without":[136,187,204,206,246,482,811],"work":[264,482,838],"would":[201,202,235,300,301,351,482,537],"writabl":[68],"write":[8,9,10,13,48,248,341,342,343,356,383,384,400,401,407,408,409,533,534,535,541,652,790,791,813,814,815,816,817,818,819],"write-onli":[13],"writer":[52],"written":[399],"wvalu":[8],"x509":[723],"xml":[300,301,302,303,351,352,842,843,844],"xmlb":[842,843,844],"yet":[172,429],"you":[300,301,351,369,781,783,785,786,814,816,818,819,839,840],"you'r":[781,783,785,786,814,816,818,819,839,840],"yyyymmdd":[811],"zero":[398,731,739,740],"zero-length":[739]}}